{"patent_number": "US-6314509-B1", "publication_id": 72842355, "family_id": 22760885, "publication_date": "2001-11-06", "titles": [{"lang": "EN", "text": "Efficient method for fetching instructions having a non-power of two size"}], "abstracts": [{"lang": "EN", "paragraph_markup": "<abstract lang=\"EN\" load-source=\"patent-office\" mxw-id=\"PA72636869\"><p>The present invention provides an efficient method for fetching instructions having a non-power of two size. In one embodiment, a method for fetching instructions having a non-power of two size includes fetching a first instruction cache line having a power of two size for storage in a first line buffer of an instruction fetch unit of a microprocessor, fetching a second instruction cache line having a power of two size for storage in a second line buffer of the instruction fetch unit, and extracting and aligning instruction data stored in the first line buffer and the second line buffer to provide an instruction having a non-power of two size.</p></abstract>"}, {"lang": "EN", "paragraph_markup": "<abstract lang=\"EN\" load-source=\"docdb\" mxw-id=\"PA11263583\" source=\"national office\"><p>The present invention provides an efficient method for fetching instructions having a non-power of two size. In one embodiment, a method for fetching instructions having a non-power of two size includes fetching a first instruction cache line having a power of two size for storage in a first line buffer of an instruction fetch unit of a microprocessor, fetching a second instruction cache line having a power of two size for storage in a second line buffer of the instruction fetch unit, and extracting and aligning instruction data stored in the first line buffer and the second line buffer to provide an instruction having a non-power of two size.</p></abstract>"}], "claims": [{"lang": "EN", "claims": [{"num": 1, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00001\" num=\"1\"><claim-text>1. A method for fetching instructions having a non-power of two size, comprising:</claim-text><claim-text>fetching at least two sequential lines of instruction data having a power of two size from an instruction cache unit for storage in dual in-line buffers of an instruction fetch unit; and </claim-text><claim-text>extracting and aligning a non-power of two size instruction that is stored in the dual in-line buffers. </claim-text></claim>"}, {"num": 2, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00002\" num=\"2\"><claim-text>2. The method of claim <b>1</b> further comprising:</claim-text><claim-text>storing a first instruction cache line having a power of two size in a first line buffer of the dual in-line buffers; and </claim-text><claim-text>storing a second instruction cache line having a power of two size in a second line buffer of the dual in-line buffers, wherein the non-power of two size instruction spans the first instruction cache line and the second instruction cache line. </claim-text></claim>"}, {"num": 3, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00003\" num=\"3\"><claim-text>3. The method of claim <b>1</b> further comprising:</claim-text><claim-text>storing an instruction cache line in an instruction cache unit, wherein the stored instruction cache line is power of two size-aligned. </claim-text></claim>"}, {"num": 4, "parent": 3, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00004\" num=\"4\"><claim-text>4. The method of claim <b>3</b> further comprising:</claim-text><claim-text>transmitting power of two size instruction cache data that is extracted from the dual in-line buffers to an instruction aligner. </claim-text></claim>"}, {"num": 5, "parent": 4, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00005\" num=\"5\"><claim-text>5. The method of claim <b>4</b> further comprising:</claim-text><claim-text>rotating and truncating the non-power of two size instruction from the power of two size instruction cache data using a rotate and truncate (RAT) unit of the instruction aligner. </claim-text></claim>"}, {"num": 6, "parent": 5, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00006\" num=\"6\"><claim-text>6. The method of claim <b>5</b> further comprising:</claim-text><claim-text>transmitting the non-power of two size instruction to an instruction queue for buffering before execution of the non-power of two size instruction. </claim-text></claim>"}, {"num": 7, "parent": 3, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00007\" num=\"7\"><claim-text>7. The method of claim <b>3</b> wherein the instruction cache line comprises 32 bytes of data.</claim-text></claim>"}, {"num": 8, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00008\" num=\"8\"><claim-text>8. The method of claim <b>1</b> wherein the non-power of two size instruction comprises a Very Long Instruction Word (VLIW) packet.</claim-text></claim>"}, {"num": 9, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00009\" num=\"9\"><claim-text>9. The method of claim <b>1</b> wherein the non-power of two size instruction comprises a 5-byte, 10-byte, 15-byte, or 20-byte instruction packet.</claim-text></claim>"}, {"num": 10, "parent": 9, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00010\" num=\"10\"><claim-text>10. The method of claim <b>9</b> wherein the non-power of two size instruction comprises a packet header, the packet header indicating the number of instructions in the instruction packet.</claim-text></claim>"}, {"num": 11, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00011\" num=\"11\"><claim-text>11. A method for fetching instructions having a non-power of two size, comprising:</claim-text><claim-text>fetching a first instruction cache line having a power of two size for storage in a first line buffer of dual in-line buffers of an instruction fetch unit of a microprocessor; </claim-text><claim-text>fetching a second instruction cache line having a power of two size for storage in a second line buffer of the dual in-line buffers; and </claim-text><claim-text>extracting a non-power of two size instruction that is stored in the dual in-line buffers. </claim-text></claim>"}, {"num": 12, "parent": 11, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00012\" num=\"12\"><claim-text>12. The method of claim <b>11</b> further comprising:</claim-text><claim-text>aligning the non-power of two size instruction, wherein the extracting and aligning is performed in a single clock cycle of the microprocessor. </claim-text></claim>"}, {"num": 13, "parent": 12, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00013\" num=\"13\"><claim-text>13. The method of claim <b>12</b> further comprising:</claim-text><claim-text>storing a power of two size instruction cache line in an instruction cache unit. </claim-text></claim>"}, {"num": 14, "parent": 13, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00014\" num=\"14\"><claim-text>14. The method of claim <b>13</b> further comprising:</claim-text><claim-text>transmitting power of two size instruction cache data that is extracted from the dual in-line buffers to an instruction aligner. </claim-text></claim>"}, {"num": 15, "parent": 14, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00015\" num=\"15\"><claim-text>15. The method of claim <b>14</b> further comprising:</claim-text><claim-text>rotating and truncating the non-power of two size instruction from the power of two size instruction cache data using a rotate and truncate (RAT) unit of the instruction aligner. </claim-text></claim>"}, {"num": 16, "parent": 15, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00016\" num=\"16\"><claim-text>16. The method of claim <b>15</b> further comprising:</claim-text><claim-text>transmitting the non-power of two size instruction to an instruction queue for buffering before execution of the non-power of two size instruction. </claim-text></claim>"}, {"num": 17, "parent": 13, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00017\" num=\"17\"><claim-text>17. The method of claim <b>13</b> wherein the instruction cache line comprises 32 bytes of data.</claim-text></claim>"}, {"num": 18, "parent": 11, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00018\" num=\"18\"><claim-text>18. The method of claim <b>11</b> wherein the non-power of two size instruction comprises a Very Long Instruction Word (VLIW) packet.</claim-text></claim>"}, {"num": 19, "parent": 11, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00019\" num=\"19\"><claim-text>19. The method of claim <b>11</b> wherein the non-power of two size instruction comprises a 5-byte, 10-byte, 15-byte, or 20-byte instruction packet.</claim-text></claim>"}, {"num": 20, "parent": 19, "type": "dependent", "paragraph_markup": "<claim id=\"US-6314509-B1-CLM-00020\" num=\"20\"><claim-text>20. The method of claim <b>19</b> wherein the non-power of two size instruction comprises a packet header, the packet header indicating the number of instructions in the instruction packet.</claim-text></claim>"}]}], "descriptions": [{"lang": "EN", "paragraph_markup": "<description lang=\"EN\" load-source=\"patent-office\" mxw-id=\"PDES54750559\"><?RELAPP description=\"Other Patent Relations\" end=\"lead\"?><h4>CROSS-REFERENCE TO RELATED APPLICATIONS</h4><p>This application relates to application Ser. No. 09/204,480, filed on even date herewith, entitled \u201cA Multiple-Thread Processor For Threaded Software Applications\u201dand naming Marc Tremblay and William Joy as inventors, the application being incorporated herein by reference in its entirety.</p><p>This application relates to application Ser. No. 09/204,793, filed on even date herewith, entitled \u201cShared Instruction Cache For Multiple Processors\u201dand naming Marc Tremblay as inventor, the application being incorporated herein by reference in its entirety.</p><p>This application relates to application Ser. No. 09/205,121, filed on even date herewith, entitled, \u201cDual In-line Buffers for an Instruction Fetch Unit\u201d, and naming Marc Tremblay and Graham Murphy as inventors, the application being incorporated herein by reference in its entirety.</p><p>This application relates to application Ser. No. 09/204,781, filed on even date herewith, entitled, \u201cAn Instruction Fetch Unit Aligner\u201d, and naming Marc Tremblay and Graham R. Murphy and Frank C. Chiu as inventors, the application being incorporated herein by reference in its entirety.</p><?RELAPP description=\"Other Patent Relations\" end=\"tail\"?><?BRFSUM description=\"Brief Summary\" end=\"lead\"?><h4>FIELD OF THE INVENTION</h4><p>The present invention relates generally to microprocessors, and more particularly, to an efficient method for fetching instructions having a non-power of two size.</p><h4>BACKGROUND</h4><p>A microprocessor typically includes a cache memory for storing copies of the most recently used memory locations. The cache memory generally is smaller and faster than main memory (e.g., disk). A microprocessor also typically includes an instruction prefetch unit that is responsible for prefetching instructions for a CPU (Central Processing Unit). In particular, an instruction cache unit is typically organized in a way that reduces the amount of time spent transferring instructions having a power of two size into the prefetch unit. For example, a 256-bit bus (256 bits=4\u00d78 bytes=32 bytes) connecting the instruction cache unit and the prefetch unit allows a 32-byte instruction prefetch unit to fetch 32 bytes of instruction data in a single cycle of the microprocessor.</p><h4>SUMMARY</h4><p>The present invention provides an efficient method for fetching instructions having a non-power of two size. For example, the present invention provides a cost-effective and high performance method for an instruction fetch unit of a microprocessor that executes instructions having a non-power of two size.</p><p>In one embodiment, a method for fetching instructions having a non-power of two size includes fetching a first instruction cache line having a power of two size for storage in a first line buffer of an instruction fetch unit of a microprocessor, fetching a second instruction cache line having a power of two size for storage in a second line buffer of the instruction fetch unit, and extracting and aligning instruction data stored in the first line buffer and the second line buffer to provide an instruction having a non-power of two size.</p><p>In one embodiment, a method for fetching instructions having a non-power of two size includes fetching at least two sequential cache lines of instruction data having a power of two size for storage in dual in-line buffers of an instruction fetch unit, and extracting and aligning a non-power of two size instruction that is stored in the dual in-line buffers. Specifically, two sequential instruction cache lines each having a power of two size (e.g., 32 bytes) are stored in the dual in-line buffers. An instruction having a non-power of two size (e.g., 5 bytes, 10 bytes, 15 bytes, or 20 bytes) is extracted and aligned from the dual in-line buffers in a single clock cycle of the microprocessor. More specifically, an instruction cache line is stored in an instruction cache unit, in which the stored instruction cache line is power of two size-aligned. The instruction cache line is fetched and stored in a first line of the dual in-line buffers. Power of two size instruction cache data (e.g., 32 bytes of instruction cache data) is extracted from the dual in-line buffers and then transmitted to an instruction aligner. A rotate and truncate (RAT) unit of the instruction aligner rotates and truncates the power of two size instruction data to provide an instruction having a non-power of two size, which is then transmitted to an instruction queue for buffering before execution. For example, this method can be used for a microprocessor that implements an instruction set architecture, which includes instructions having a non-power of two size.</p><p>Other aspects and advantages of the present invention will become apparent from the following detailed description and accompanying drawings.</p><?BRFSUM description=\"Brief Summary\" end=\"tail\"?><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"lead\"?><h4>BRIEF DESCRIPTION OF THE DRAWINGS</h4><p>FIG. 1 is a block diagram of a microprocessor that includes an instruction fetch unit in accordance with one embodiment of the present invention.</p><p>FIG. 2 shows various formats of instructions having a non-power of two size.</p><p>FIG. 3 is a block diagram of an instruction queue and the instruction fetch unit of FIG. 1 shown in greater detail in accordance with one embodiment of the present invention.</p><p>FIG. 4 is a functional diagram of the instruction cache unit of FIG. 1 connected to the instruction fetch unit of FIG. 1 in accordance with one embodiment of the present invention.</p><p>FIG. 5 is a diagram of possible 5-byte instruction positions within a 32-byte wide cache memory.</p><p>FIG. 6 is a functional diagram of the operation of the instruction fetch unit of FIG. 4 shown in greater detail in accordance with one embodiment of the present invention.</p><p>FIG. 7 is a functional diagram of a multi-level implementation of the instruction aligner of FIG. 3 in accordance with one embodiment of the present invention.</p><p>FIG. 8 is a block diagram of the line buffers connected to the double word muxes of the instruction fetch unit of FIG. 6 shown in greater detail in accordance with one embodiment of the present invention.</p><p>FIG. 9 is functional diagram of the operation of the rotate and truncate (RAT) unit of FIG. 6 shown in greater detail in accordance with one embodiment of the present invention.</p><p>FIG. 10 is a functional diagram of a symbolic implementation of the RAT unit of FIG. 6 in accordance with one embodiment of the present invention.</p><p>FIG. 11 is a functional diagram of a RAT bit ordering in accordance with one embodiment of the present invention.</p><p>FIG. 12 is a functional diagram of a RAT physical implementation in accordance with one embodiment of the present invention.</p><p>FIG. 13 is a functional diagram of an input byte ordering of each four byte group that allows the mux's select control signals to be shared in accordance with one embodiment of the present invention.</p><p>FIG. 14 is a block diagram of the instruction queue of FIG. 3 shown in greater detail in accordance with one embodiment of the present invention.</p><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"tail\"?><?DETDESC description=\"Detailed Description\" end=\"lead\"?><h4>DETAILED DESCRIPTION</h4><p>A typical instruction set architecture (ISA) for a microprocessor specifies instructions has a power of two size, which can be aligned on a power of two boundary in a conventional cache memory. A typical ISA includes 32-bit instructions that are a fixed size such as for RISC (Reduced Instruction Set Computer) processors. The 32-bit instructions are typically aligned on a 32-bit boundary in a conventional instruction cache unit. The 32-bit instructions can be prefetched from the instruction cache unit in one clock cycle using a conventional 32-bit data path between the prefetch unit and the instruction cache unit.</p><p>However, new instruction set architectures may include instructions having a non-power of two size. To efficiently fetch instructions having a non-power of two size, a method in accordance with one embodiment of the present invention includes fetching at least two sequential cache lines for storage in line buffers of an instruction fetch unit of a microprocessor, and then efficiently extracting and aligning all the bytes of a non-power of two size instruction from the line buffers. This approach allows for a standard instruction cache architecture, which aligns cache lines on a power of two boundary, to be used. This approach also reduces the data path between the instruction cache and the instruction fetch unit. This approach sustains a fetch of always at least one sequential instruction per clock cycle of the microprocessor.</p><p>For example, an ISA can require supporting execution of instruction packets such as VLIW (Very Long Instruction Word) packets that are either 5, 10, 15, or 20 bytes wide. For certain applications such as graphics or media code, there may predominantly be 20-byte wide VLIW packets. If a 20-byte VLIW packet is executed per clock cycle (e.g., at a peak execution rate), then to maintain this peak execution rate, the instruction fetch unit fetches at least 20 bytes per clock cycle from the instruction cache unit.</p><p>FIG. 1 is a block diagram of a microprocessor <b>100</b> that includes an instruction fetch unit (IFU) <b>108</b> in accordance with one embodiment of the present invention. In particular, microprocessor <b>100</b> includes a main memory <b>102</b> connected to a bus <b>104</b>, an instruction cache unit <b>106</b> connected to bus <b>104</b>, instruction fetch unit <b>108</b> connected to instruction cache unit <b>106</b>, and P1 processor <b>110</b> and P2 processor <b>112</b> each connected to instruction fetch unit <b>108</b>. In one embodiment, P1 processor <b>110</b> is provided (i.e., instead of P1 processor <b>110</b> and P2 processor <b>112</b>), and P1 processor <b>110</b> is connected to instruction fetch unit <b>108</b>.</p><p>In one embodiment, instruction cache unit <b>106</b> is a conventional 16-kilobyte dual-ported cache that uses a well-known (standard) cache architecture of two-way set associative, 32-byte lines (e.g., in order to minimize cost and timing risk). Instruction cache unit <b>106</b> returns a new 32-byte cache line to instruction fetch unit <b>108</b> during each clock cycle of microprocessor <b>100</b>, and thus, instruction cache unit <b>106</b> can satisfy an execution rate of, for example, a 20-byte VLIW packet per clock cycle of microprocessor <b>100</b>.</p><p>However, the 20-byte VLIW packets may not be aligned on the 32-byte cache line boundaries of instruction cache unit <b>106</b>. VLIW packets can start on any byte boundary, and an empirical observation reveals that a significant number of the VLIW packets often start on a first cache line and continue onto a second cache line of two sequential cache lines. For VLIW packets that span two cache lines, two clock cycles would typically be needed to fetch the entire VLIW packet before executing the VLIW packet. As a result, the execution pipeline of microprocessor <b>100</b> may be reduced to approximately one half, thus resulting in a significant performance degradation.</p><p>Accordingly, instruction fetch unit <b>108</b> stores two instruction cache lines fetched from instruction cache unit <b>106</b> to ensure that instruction fetch unit <b>108</b> can provide the next VLIW packet, regardless of whether or not the VLIW packet spans two cache lines, in a single clock cycle. In particular, instruction fetch unit <b>108</b> prefetches ahead of execution, predicts branch outcomes, and maintains two sequential cache lines of unexecuted instructions. For example, a 20-byte VLIW packet is extracted from the two sequential instruction cache lines of instruction fetch unit <b>108</b> and then appropriately aligned, and the extraction and alignment is completed in one clock cycle (assuming the two sequential cache lines stored in instruction fetch unit <b>108</b> represent valid data). For sequential execution, instruction fetch unit <b>108</b> provides at least one VLIW packet per clock cycle, regardless of whether or not the VLIW packet spans two cache lines in instruction cache unit <b>106</b>.</p><p>In one embodiment, instruction cache unit <b>106</b> is a shared instruction cache unit for multiple processors (e.g., PI processor <b>110</b> and P2 processor <b>112</b>). A shared instruction cache for multiple processors is disclosed in commonly assigned and co-pending U.S. patent application Ser. No. 09/204,793 and incorporated herein by reference in its entirety.</p><p>A typical instruction fetch unit provides a 4-byte granularity. In contrast, instruction fetch unit <b>108</b> provides a 1-byte granularity and can fetch instructions with a 1-byte granularity. Instruction fetch unit <b>108</b> extracts and aligns a 5, 10, 15, or 20 byte VLIW packet from 64 bytes of instruction data stored in instruction fetch unit <b>108</b> (e.g., an instruction cache line of an instruction cache unit <b>106</b> is 32-bytes). Instruction fetch unit <b>108</b> efficiently performs the align operation as discussed below.</p><p>FIG. 2 shows various formats of instructions having a non-power of two size. In particular, instruction format <b>202</b> shows an instruction format for a variable size opcode which includes an 8-bit to 16-bit opcode, a 6-bit to 10-bit destination, a 6-bit to 10-bit source <b>1</b>, a 6-bit to 10-bit source <b>2</b>, and a 6-bit to 10-bit source <b>3</b>. Format <b>202</b> ranges from 32 bits to 56 bits. Instruction format <b>204</b> shows a 40-bit instruction format which includes an 8-bit opcode, an 8-bit destination, an 8 bit source <b>1</b>, an 8-bit source <b>2</b> and an 8-bit source <b>3</b>.</p><p>Storing non-power of two size instructions, such as shown in instruction format <b>204</b>, in a conventional DRAM (Dynamic Random Access Memory) or other conventional cache memory that includes cache lines of power of two size (e.g., because of binary addressing) results in non-aligned instructions being stored in the instruction cache. Thus, one embodiment of the present invention allows for the fetching of non-power of two size instructions from an instruction cache unit in one clock cycle of the microprocessor. For example, a typical DRAM has a width of a power of two number of bits (e.g., 32 bytes). Similarly, on-chip memory is typically organized using power of two boundaries and addressing. Thus, non-power of two instruction sets, such as shown in the instruction format <b>204</b> (i.e., a forty bit or five byte instruction), are not necessarily aligned when stored in instruction cache unit <b>106</b>.</p><p>FIG. 3 is a block diagram of an instruction queue <b>302</b> and instruction fetch unit <b>108</b> shown in greater detail in accordance with one embodiment of the present invention. Instruction fetch unit <b>108</b> is connected to instruction cache unit <b>106</b> via a conventional 32-byte data path. Instruction fetch unit <b>108</b> includes a prefetch unit <b>304</b>. Prefetch unit <b>304</b> includes dual in-line buffers <b>306</b>. Dual in-line buffers <b>306</b> are implemented as, for example, two 32-byte wide registers. Dual in-line buffers <b>306</b> store two sequential lines of instructions fetched from instruction cache unit <b>106</b>. By storing two sequential lines of instructions fetched from instruction cache unit <b>106</b>, instruction fetch unit <b>108</b> essentially ensures that the subsequent instruction is stored in dual in-line buffers <b>306</b>, regardless of whether or not it represents a non-aligned instruction (e.g., the instruction spans two lines in instruction cache unit <b>106</b>). Thus, instruction fetch unit <b>108</b> solves the problem of having to request two instruction fetches from instruction cache unit <b>106</b>, which typically causes a waste of at least one clock cycle of the microprocessor.</p><p>Instruction fetch unit <b>108</b> also includes an instruction aligner <b>308</b>. Instruction aligner <b>308</b> extracts and aligns the non-power of two size instruction from instruction data stored in dual in-line buffers <b>306</b>. For example, for a 40-bit instruction, instruction aligner <b>308</b> extracts the 40-bit instruction from the 64 bytes of data stored in dual in-line buffers <b>306</b>. Instruction aligner <b>308</b> then efficiently aligns the 40-bit instruction, as further discussed below.</p><p>In one embodiment, microprocessor <b>100</b> includes four processors or CPUs (Central Processing Units). Microprocessor <b>100</b> executes up to four instructions per cycle. Instruction fetch unit <b>108</b> provides up to four instructions per cycle to instruction queue <b>302</b> to maintain the peak execution rate of four instructions per cycle. For example, for a 40-bit instruction set, which defines 40-bit instruction sizes, instruction fetch unit <b>108</b> provides up to 160 bits per cycle in order to provide four instructions per cycle. Thus, instruction fetch unit <b>108</b> provides up to 20-bytes of instruction data (e.g., a 20-byte VLIW packet) to instruction queue <b>302</b> per cycle. Because dual in-line buffers <b>306</b> store 64 bytes of instruction data, instruction aligner <b>308</b> is responsible for extracting and appropriately aligning, for example, the 20 bytes of instruction data for the next cycle that is within the 64 bytes of instruction data stored in dual in-line buffers <b>306</b>. Accordingly, in one embodiment, an efficient method for fetching instructions having a non-power of two size is provided.</p><p>FIG. 4 is a functional diagram of instruction cache unit <b>106</b> connected to instruction fetch unit <b>108</b> in accordance with one embodiment of the present invention. A cache line <b>402</b> that includes 32 bytes of instruction data stored in instruction cache unit <b>106</b> is sent to instruction fetch unit <b>108</b> via a 32-byte data path <b>404</b>. Instruction fetch unit <b>108</b> includes dual in-line buffers <b>306</b>. Dual in-line buffers <b>306</b> include a line buffer <b>0</b> that is 32-bytes wide and a line buffer <b>1</b> that is 32-bytes wide. For example, line buffer <b>0</b> and line buffer <b>1</b> can be implemented as registers of instruction fetch unit <b>108</b>, or line buffer <b>0</b> and line buffer <b>1</b> of dual in-line buffers <b>306</b> can be implemented as two sets of enable-reset flip-flops, in which the flip-flops can be stacked (two in one bit slice). The 32-bytes of data are then extracted from dual in-line buffers <b>306</b> and transmitted via a 32-byte data path <b>406</b> to instruction aligner <b>308</b>. Instruction aligner <b>308</b> extracts and aligns the instruction (e.g., 10 bytes of instruction data) from the 32 bytes of instruction data and then transmits the extracted and aligned instruction for appropriate execution on processors <b>110</b> and <b>112</b> of microprocessor <b>100</b>.</p><p>Dual in-line buffers <b>306</b> maintain two sequential lines of instruction data fetched from instruction cache unit <b>106</b>. After the instruction data is extracted from dual in-line buffers <b>306</b>, instruction fetch unit <b>108</b> fetches the next sequential line of instruction data for storage in dual in-line buffers <b>306</b>. For example, based on the address of the fetched data (e.g., if the fifth address bit is zero, then the fetched data is loaded into line buffer <b>0</b>, else the fetched data is loaded into line buffer <b>1</b>), either line buffer <b>0</b> or line buffer <b>1</b> is purged, and the next sequential line of cache memory (e.g., cache line <b>402</b> of instruction cache unit <b>106</b>) is fetched and stored in the now purged line buffer <b>0</b> or line buffer <b>1</b>. In steady state mode, instruction fetch unit <b>108</b> maintains a rate of fetching of 32 bytes of instruction data per cycle. Because only up to 20 bytes of instruction data are consumed per cycle in the 20-byte VLIW packet example, and instruction data is stored in memory sequentially, instruction fetch unit <b>108</b> can generally satisfy the peak execution rate of microprocessor <b>100</b>, such as 20 bytes of instruction data or four instructions per multi-processor cycle of microprocessor <b>100</b>.</p><p>The instruction data path within instruction fetch unit <b>108</b> involves, for example, selecting a 20-byte wide byte-aligned field from 64 bytes of data stored in dual in-line buffers <b>306</b>. The 20-byte wide byte-aligned field is buffered (e.g., stored in instruction queue <b>302</b>) and then appropriately presented to the CPUs (e.g., 4 different processors). For a 20-byte VLIW packet, the data path size between instruction cache unit <b>106</b> and instruction fetch unit <b>108</b> can be 32 bytes, because the cache line size is 32 bytes.</p><p>However, extracting a 20-byte wide byte-aligned field from 64 bytes of non-aligned instruction data efficiently represents a challenging problem. Accordingly, instruction fetch unit <b>108</b> efficiently performs a rotate and truncate (RAT) of a 20-byte wide byte-aligned field from 64 bytes of non-aligned instruction data, in which, for example, 20 bytes is the maximum size of a VLIW packet, and 64 bytes of instruction data is prefetched from instruction cache unit <b>106</b> in accordance with one embodiment of the present invention, as further discussed below.</p><p>FIG. 5 is a diagram of possible 5-byte instruction positions within a 32-byte wide cache memory. Each 32-byte aligned location is called a cache memory line. An instruction can be located in 32 unique positions in the five cache memory lines (e.g., cache memory lines <b>0</b>-<b>5</b>) before the position sequence of FIG. 5 repeats.</p><p>In one embodiment, instruction aligner <b>308</b> can select an instruction from any one of these 32 different positions along with 0-3 subsequent instructions (assuming a VLIW packet that includes up to four instructions). In order to accomplish this task, instruction aligner <b>308</b> uses a 5-bit offset pointer indicating where in the 32-byte data path the first byte of the General Functional Unit (GFU) instruction is found for a multiprocessor that includes, for example, four different processors such as the GFU and three Media Functional Units (MFUs). Instruction aligner <b>308</b> then left justifies the first byte along with up to 19 subsequent bytes to provide the instruction packet (e.g., the VLIW packet). If the instruction packet spans (i.e., crosses) a cache memory line boundary, then instruction aligner <b>308</b> combines the contents of line buffer <b>0</b> and line buffer <b>1</b> of dual in-line buffers <b>306</b>.</p><p>FIG. 6 is a functional diagram of the operation of instruction fetch unit <b>108</b> of FIG. 4 shown in greater detail in accordance with one embodiment of the present invention. Each quarter of a line buffer (e.g., line buffer <b>0</b> and line buffer <b>1</b> of dual in-line buffers <b>306</b>) includes 8 bytes, or two words, which together represent a double word. Thus, each line buffer includes four double words, which together make up an octword. The first double word in the line buffer is numbered 0, followed by 1, 2, and 3, respectively. Line buffer <b>0</b> (e.g., line buffer <b>0</b> of dual in-line buffers <b>306</b>) holds even octwords, because it includes memory lines at even octword addresses (e.g., 0, 64, and 128). Line buffer <b>1</b> (e.g., line buffer <b>1</b> of dual in-line buffers <b>306</b>) holds odd octwords, because it includes memory lines at odd octword addresses (e.g., 32, 96, and 160). Instruction fetch unit <b>108</b> includes four 2:1 doubleword muxes to concatenate any four doublewords stored in line buffer <b>0</b> and line buffer <b>1</b>. Four doublewords (32 bytes) provide the data needed to extract a 20-byte instruction such as a VLIW packet, which is a maximum of 20 bytes (assuming both of the line buffers include valid data). In one embodiment, the instruction data path is implemented as an instruction data path megacell that includes the following: dual in-line buffers <b>306</b> that hold two cache lines (64 bytes in total) fetched from instruction cache unit <b>106</b>, doubleword muxes <b>602</b>, <b>604</b>, <b>606</b>, and <b>608</b> that select 32 bytes of instruction data from dual in-line buffers <b>306</b> to provide aligner input <b>610</b>, rotate and truncate logic (RAT) unit <b>611</b> of instruction aligner <b>308</b> that selects a VLIW packet by left justifying and truncating the 32 bytes presented by the double word muxes to provide RAT output <b>612</b>.</p><p>Specifically, FIG. 6 shows an example of a four instruction VLIW packet starting at byte <b>15</b> of line buffer <b>0</b> of dual in-line buffers <b>306</b> and ending at byte <b>2</b> of line buffer <b>1</b> of dual in-line buffers <b>306</b>. The VLIW packet passes through mux input <b>0</b> of doubleword muxes <b>1</b> (<b>604</b>), <b>2</b> (<b>606</b>), and <b>3</b> (<b>608</b>), and mux input <b>1</b> of doubleword mux <b>0</b> (<b>602</b>). The result is a 32-byte aligner input <b>610</b> that includes instructions <b>3</b>, <b>4</b>, <b>5</b>, and <b>6</b>, which represent a VLIW packet. Doubleword muxes <b>602</b>, <b>604</b>, <b>606</b>, and <b>608</b> represent the first level of muxes that select all the doublewords necessary to obtain the minimal power of two size aligned super set of the desired VLIW packet (e.g., selects 32 bytes of instruction data that include the 20-byte VLIW packet). Aligner input <b>610</b> is provided to RAT unit <b>611</b> of instruction aligner <b>308</b>. RAT unit <b>611</b> performs a RAT function that extracts and aligns the 20-byte VLIW packet from 32-byte aligner input <b>610</b> and, in particular, rotates and truncates the 32 bytes of instruction data in order to output 20 bytes of instruction data as RAT output <b>612</b> that represents a byte-aligned VLIW packet.</p><p>Referring to the selection of bytes of instruction data stored in dual in-line buffers <b>306</b>, the selection is performed by using the known start address of the VLIW packet, and then extracting the next sequential bytes using doubleword muxes <b>602</b>, <b>604</b>, <b>606</b>, and <b>608</b> to provide 32-byte aligner input <b>610</b>. For example, a VLIW packet can be 5, 10, 15, or 20 bytes (e.g., it depends on whether or not the compiler generated 1, 2, 3, or 4 instructions in parallel, that is, for execution in a single cycle on the multi-processor), in which the first two bits of the VLIW packet represent a packet header that indicates how many instructions are included in the VLIW packet. Thus, when a VLIW packet is decoded, it can be determined that only 10 bytes of instruction data are needed (e.g., two instructions were compiled for execution in parallel in a particular cycle).</p><p>Aligner input <b>610</b> represents 32 bytes of instruction data within which resides up to 20 bytes of non-aligned VLIW data. RAT unit <b>611</b> performs a RAT operation that extracts and aligns non-power of two size instruction data from the power of two size instruction data (e.g., a 20-byte VLIW packet from 32 bytes of aligner input <b>610</b>) to provide RAT output <b>612</b>. The RAT operation can be implemented using twenty 32:1 muxes using two levels of muxes, eight 4:1 muxes, each of which connects to an 8:1 mux to effectively provide a 32:1 mux, which represents a brute force approach. However, a more efficient approach is discussed below.</p><p>FIG. 7 is a functional diagram of a multi-level implementation of instruction aligner <b>308</b> in accordance with one embodiment of the present invention. In particular, instruction aligner <b>308</b> is implemented using two levels of muxes, which includes a first level mux select <b>802</b> and a second level mux select <b>804</b>. The first level of muxes includes eight 4:1 byte-wide muxes. The second level of muxes includes an 8:1 byte-wide mux. Logically, there is a two-level mux structure for each bit of the 20 bytes input to instruction aligner <b>308</b>. Mux select controls <b>802</b> and <b>804</b> are updated every cycle in order to sustain alignment of one VLIW packet per cycle. For example, instruction aligner <b>308</b> can be implemented as a megacell that is organized with a stacked bit cell placement.</p><p>FIG. 8 is a block diagram of dual in-line buffers <b>306</b> connected to double word muxes <b>602</b>, <b>604</b>, <b>606</b>, and <b>608</b> shown in greater detail in accordance with one embodiment of the present invention. Doubleword muxes <b>602</b>, <b>604</b>, <b>606</b>, and <b>608</b> select 32 bytes out of the 64 bytes stored in dual in-line buffers <b>306</b>, which include line buffer <b>0</b> (32 bytes) and line buffer <b>1</b> (32 bytes). The 32 bytes of data selected by doubleword muxes <b>602</b>, <b>604</b>, <b>606</b>, and <b>608</b> are then transmitted to RAT unit <b>611</b> of the instruction data path as discussed above with respect to FIG. <b>6</b>. Doubleword muxes <b>602</b>, <b>604</b>, <b>606</b>, and <b>608</b> are essentially 2:1 muxes that select a doubleword (8 bytes) from either line buffer <b>0</b> (even octword) or line buffer <b>1</b> (odd octword). Doubleword muxes <b>602</b>, <b>604</b>, <b>606</b>, and <b>608</b> are used to take advantage of the fact that at most 20 bytes of the 32 bytes of instruction data will be used. The granularity of the muxes may be set to any size down to single-byte granularity. The doubleword granularity is chosen based upon simplification of truth tables as shown in Table 1 and Table 2 of Appendix A-1 in accordance with one embodiment of the present invention.</p><p>FIG. 9 is a functional diagram of the operation of RAT unit <b>611</b> shown in greater detail in accordance with one embodiment of the present invention. In particular, RAT unit <b>611</b> includes a RAT megacell <b>702</b>. RAT megacell <b>702</b> performs the functionality of twenty 32:1 byte-wide muxes. The inputs to each of the 32:1 muxes come from the outputs of doubleword muxes <b>602</b>, <b>604</b>, <b>606</b>, and <b>608</b>. The inputs to doubleword muxes <b>602</b>, <b>604</b>, <b>606</b>, and <b>608</b> come from line buffer <b>0</b> and line buffer <b>1</b> of dual in-line buffers <b>306</b>. The byte positions in the line buffers <b>0</b> and <b>1</b> are labeled [0A . . . 0Z, 0a . . . 0f] for line buffer <b>0</b> and [1A . . . 1Z, 1a . . . 1f] for line buffer <b>1</b>. The inputs to each consecutive 32:1 mux in RAT megacell <b>702</b> are identical to the previous mux, except the ordering is rotated to the left by one byte. Accordingly, this can simplify the RAT megacell implementation as follows: inputs to each mux can be routed identically, and the 32-byte mux select bus can be rotated one position for each mux, mux #0 (<b>704</b>), mux #1 (<b>706</b>), . . . , and mux #19 (<b>708</b>). If the correct double words are provided to RAT megacell <b>702</b>, then only one set of decode logic is needed to specify the shift amount. The rotated and truncated output from RAT unit <b>611</b> is transmitted to instruction queue <b>302</b>.</p><p>FIG. 10 is a functional diagram of a symbolic implementation of RAT unit <b>611</b> in accordance with one embodiment of the present invention. RAT unit <b>611</b> receives the 32 bytes of instruction data presented by doubleword muxes <b>602</b>, <b>604</b>, <b>606</b>, and <b>608</b> and performs a rotation to left justify the byte at the address offset. RAT unit <b>611</b> then truncates the instruction data to provide, for example, a 20-byte VLIW packet. Thus, RAT unit <b>611</b> essentially implements the functionality of a 32:1 mux. The primary function is to map any one of 32 bytes to, for example, each one of the 20 bytes in a 20-byte VLIW packet. Because a 32:1 mux is expensive from a floor planning and circuit implementation standpoint, RAT unit <b>611</b> is implemented as a two-level 32:1 mux in accordance with one embodiment of the present invention. A first level <b>1002</b> includes eight 4:1 muxes for every bit of the aligner input. A second level <b>1004</b> includes one 8:1 mux for every bit of the aligner input.</p><p>However, by recognizing that all the inputs are the same for bit n of each byte of bytes <b>0</b>-<b>19</b> (assuming a 20-byte VLIW packet), some combining of bits is possible to reduce wiring in the RAT implementation. Accordingly, in one embodiment, the muxes for bit n for 4 bytes are grouped together. The bit ordering of the first few bits is discussed below with respect to FIG. <b>11</b>. Because the bits of the VLIW packet are produced out of order, an additional routing channel is used to \u201cre-order\u201d the bits. The grouping size of 4 bytes means that the channel must be wide enough to re-order 32 bits (e.g., a routing overhead of approximately 50-60 um). In each 4-byte wide grouping (bit n for 4 bytes), two levels of muxes can be used to implement the 32:1 mux for each bit. Ordering of the inputs to the eight 4:1 muxes in generation of the selects (select or control signals) allows the same eight 4:1 muxes to be used for each bit. Thus, eight 4:1 muxes and four 8:1 muxes are used for every 4 bits, instead of eight 4:1 and one 8:1 mux for every bit, which results in a reduction of muxes from 1440 (9\u00d7160) to 480 (12\u00d740).</p><p>FIG. 11 is a functional diagram of a RAT bit ordering in accordance with one embodiment of the present invention. Because 32 inputs span across 4 bits instead of 1, the bit slice pitch can be reduced by using the RAT bit ordering as shown in FIG. <b>11</b>. For example, a 14.34 um (microns) pitch can be used instead of a 25 um pitch, which translates into a savings of about 750 um in the width of the instruction data path.</p><p>FIG. 12 is a functional diagram of a RAT physical implementation in accordance with one embodiment of the present invention. The input to the RAT physical implementation of FIG. 12 is the same or identical for each of the eight 4:1 muxes. By recognizing that each of the inputs to the eight 4:1 muxes are the same (i.e., the same 32 bytes of data), each of the eight 4:1 muxes can be implemented as shown in a block <b>1204</b>. Block <b>1204</b> shows eight 4:1 muxes (A, B, C, D, E, F, G, and H) and four 8:1 muxes (0, 1, 2, and 3). Each of the eight 4:1 muxes is set or controlled in order to output a particular bit n of each selected byte. For example, block <b>1204</b> outputs bit <b>7</b> of a 4-byte group <b>1202</b>, and thus, block <b>1204</b> outputs bit <b>7</b> of bytes <b>0</b>, <b>1</b>, <b>2</b>, and <b>3</b>, which represents an output of bit <b>159</b>, bit <b>151</b>, bit <b>143</b>, and bit <b>135</b>. The output is then sent to a channel <b>1206</b>, which reorders the bits into descending order. For example, assuming 20 bytes of instruction data, such as a 20-byte VLIW packet, channel <b>1206</b> reorders the 160 bits or 20 bytes of data from bit number <b>159</b> in descending order to bit number <b>0</b>. Because not all of the outputs of the eight 4:1 muxes are necessarily selected, \u201cdo not care\u201d conditions can be provided in the mux selection or control logic. Thus, this embodiment enables some combination of the 4:1 mux selects. A truth table for the mux select control signals is shown in Appendices A3-A6 in accordance with one embodiment of the present invention. Further, the controls of the muxes are generated based upon the offset in the address offset register (not shown). The controls for each 4:1 mux (muxes A, B, C, D, E, F, G, and H) and each 8:1 mux (0, 1, 2, and 3) can be shared across the entire RAT unit if the bits are ordered carefully.</p><p>FIG. 13 is a functional diagram of an input byte ordering for each 4-byte group that allows the mux's select control signals to be shared in accordance with one embodiment of the present invention. For example, for bytes <b>0</b>-<b>3</b> (B<b>0</b>-B<b>3</b>), 8:1 mux A selects bits <b>0</b>-<b>7</b> from bytes <b>0</b>, <b>8</b>, <b>16</b>, and <b>24</b>, 8:1 mux B selects bits <b>0</b>-<b>7</b> from bytes <b>1</b>, <b>9</b>, <b>17</b> and <b>25</b>, . . . , and 8:1 mux H selects bits <b>0</b>-<b>7</b> from bytes <b>7</b>, <b>15</b>, <b>23</b>, and <b>31</b>. Accordingly, the input byte ordering for each four-byte group advantageously allows the mux selects to be shared as discussed above.</p><p>FIG. 14 is a block diagram of instruction queue <b>302</b> shown in greater detail in accordance with one embodiment of the present invention. Instruction queue <b>302</b> is a four-entry instruction queue that provides a decoupling buffer between instruction fetch unit <b>108</b> and processors <b>110</b> and <b>112</b>. As discussed above, every cycle, instruction fetch unit <b>108</b> provides an instruction packet (e.g., a VLIW packet). The instruction packet is passed onto the processors for execution if the processors are ready for a new instruction. For example, in two cases, a VLIW packet is produced that cannot be executed immediately. First, if the execution pipeline is stalled (e.g., for load dependency), then the VLIW packet is written to instruction queue <b>302</b>. Second, when a pair of instructions for a particular processor such as the GFU is present, only one GFU instruction can be executed, and the other GFU instruction is queued in instruction queue <b>302</b>. When the instruction fetch pipeline is stalled due to an instruction cache miss, for example, some of the penalty for the instruction fetch pipeline stall can be hidden by having valid entries buffered in instruction queue <b>302</b>.</p><p>Instruction queue <b>302</b> is a four-entry FIFO (First In First Out) queue that can be implemented as a static register file. Control logic in instruction fetch unit <b>108</b> can provide FIFO pointers. The tail entry of instruction queue <b>302</b> can be written with either RAT unit <b>611</b> or the second instruction of a GFU pair (e.g., RAT_OUT [119:80]). A read can be implemented using a 4:1 mux in instruction queue <b>302</b>. Thus, bits <b>159</b>-<b>120</b> of instruction queue <b>302</b> can be written with either the second instruction of a GFU pair or the output of RAT unit <b>611</b>. The rest of the bits (i.e., bits <b>119</b>:<b>0</b>) can be written with the output of RAT unit <b>611</b>.</p><p>Although particular embodiments of the present invention have been shown and described, it will be obvious to those skilled in the art that changes and modifications can be made without departing from the present invention in its broader aspects, and therefore, the appended claims are to encompass within their scope all such changes and modifications that fall within the true scope of the present invention.</p><h4>APPENDIX A-1</h4><p><tables id=\"TABLE-US-00001\"><table colsep=\"0\" frame=\"none\" pgwide=\"1\" rowsep=\"0\"><tgroup align=\"left\" cols=\"1\" colsep=\"0\" rowsep=\"0\"><colspec align=\"center\" colname=\"1\" colwidth=\"273PT\"></colspec><thead valign=\"bottom\"><row><entry morerows=\"0\" nameend=\"1\" namest=\"1\" rowsep=\"1\" valign=\"top\">TABLE 1</entry></row></thead><tbody valign=\"top\"><row><entry align=\"center\" morerows=\"0\" nameend=\"1\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row><row><entry morerows=\"0\" valign=\"top\">Doubleword Mux Selects</entry></row></tbody></tgroup><tgroup align=\"left\" cols=\"6\" colsep=\"0\" rowsep=\"0\"><colspec align=\"center\" colname=\"1\" colwidth=\"42PT\"></colspec><colspec align=\"center\" colname=\"2\" colwidth=\"63PT\"></colspec><colspec align=\"center\" colname=\"3\" colwidth=\"42PT\"></colspec><colspec align=\"center\" colname=\"4\" colwidth=\"42PT\"></colspec><colspec align=\"center\" colname=\"5\" colwidth=\"42PT\"></colspec><colspec align=\"center\" colname=\"6\" colwidth=\"42PT\"></colspec><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">MuxA</entry><entry morerows=\"0\" valign=\"top\">MuxB</entry><entry morerows=\"0\" valign=\"top\">MuxC</entry><entry morerows=\"0\" valign=\"top\">MuxD</entry></row></tbody></tgroup><tgroup align=\"left\" cols=\"10\" colsep=\"0\" rowsep=\"0\"><colspec align=\"center\" colname=\"1\" colwidth=\"42PT\"></colspec><colspec align=\"center\" colname=\"2\" colwidth=\"63PT\"></colspec><colspec align=\"center\" colname=\"3\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"4\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"5\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"6\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"7\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"8\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"9\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"10\" colwidth=\"21PT\"></colspec><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\">Byte Offsets</entry><entry morerows=\"0\" valign=\"top\">{PC[5], AOR[4:2]}</entry><entry morerows=\"0\" valign=\"top\">Sel0</entry><entry morerows=\"0\" valign=\"top\">Sel1</entry><entry morerows=\"0\" valign=\"top\">Sel0</entry><entry morerows=\"0\" valign=\"top\">Sel1</entry><entry morerows=\"0\" valign=\"top\">Sel0</entry><entry morerows=\"0\" valign=\"top\">Sel1</entry><entry morerows=\"0\" valign=\"top\">Sel0</entry><entry morerows=\"0\" valign=\"top\">Sel1</entry></row><row><entry align=\"center\" morerows=\"0\" nameend=\"10\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row><row><entry morerows=\"0\" valign=\"top\">0-3</entry><entry morerows=\"0\" valign=\"top\">0000</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">4-7</entry><entry morerows=\"0\" valign=\"top\">0001</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">\u20028-11</entry><entry morerows=\"0\" valign=\"top\">0010</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">12-15</entry><entry morerows=\"0\" valign=\"top\">0011</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">16-19</entry><entry morerows=\"0\" valign=\"top\">0100</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">20-23</entry><entry morerows=\"0\" valign=\"top\">0101</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">24-27</entry><entry morerows=\"0\" valign=\"top\">0110</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">28-31</entry><entry morerows=\"0\" valign=\"top\">0111</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">32-35</entry><entry morerows=\"0\" valign=\"top\">1000</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">36-39</entry><entry morerows=\"0\" valign=\"top\">1001</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">40-43</entry><entry morerows=\"0\" valign=\"top\">1010</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">44-47</entry><entry morerows=\"0\" valign=\"top\">1011</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">48-51</entry><entry morerows=\"0\" valign=\"top\">1100</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">52-55</entry><entry morerows=\"0\" valign=\"top\">1101</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">56-59</entry><entry morerows=\"0\" valign=\"top\">1110</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">60-63</entry><entry morerows=\"0\" valign=\"top\">1111</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry align=\"center\" morerows=\"0\" nameend=\"10\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row></tbody></tgroup></table></tables></p><p><tables id=\"TABLE-US-00002\"><table colsep=\"0\" frame=\"none\" pgwide=\"1\" rowsep=\"0\"><tgroup align=\"left\" cols=\"1\" colsep=\"0\" rowsep=\"0\"><colspec align=\"center\" colname=\"1\" colwidth=\"273PT\"></colspec><thead valign=\"bottom\"><row><entry morerows=\"0\" nameend=\"1\" namest=\"1\" rowsep=\"1\" valign=\"top\">TABLE 2</entry></row></thead><tbody valign=\"top\"><row><entry align=\"center\" morerows=\"0\" nameend=\"1\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row><row><entry morerows=\"0\" valign=\"top\">Optimized Doubleword Mux Selects</entry></row></tbody></tgroup><tgroup align=\"left\" cols=\"6\" colsep=\"0\" rowsep=\"0\"><colspec align=\"center\" colname=\"1\" colwidth=\"42PT\"></colspec><colspec align=\"center\" colname=\"2\" colwidth=\"63PT\"></colspec><colspec align=\"center\" colname=\"3\" colwidth=\"42PT\"></colspec><colspec align=\"center\" colname=\"4\" colwidth=\"42PT\"></colspec><colspec align=\"center\" colname=\"5\" colwidth=\"42PT\"></colspec><colspec align=\"center\" colname=\"6\" colwidth=\"42PT\"></colspec><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">MuxA</entry><entry morerows=\"0\" valign=\"top\">MuxB</entry><entry morerows=\"0\" valign=\"top\">MuxC</entry><entry morerows=\"0\" valign=\"top\">MuxD</entry></row></tbody></tgroup><tgroup align=\"left\" cols=\"10\" colsep=\"0\" rowsep=\"0\"><colspec align=\"center\" colname=\"1\" colwidth=\"42PT\"></colspec><colspec align=\"center\" colname=\"2\" colwidth=\"63PT\"></colspec><colspec align=\"center\" colname=\"3\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"4\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"5\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"6\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"7\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"8\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"9\" colwidth=\"21PT\"></colspec><colspec align=\"center\" colname=\"10\" colwidth=\"21PT\"></colspec><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\">Byte Offsets</entry><entry morerows=\"0\" valign=\"top\">{PC[5], AOR[4:3]}</entry><entry morerows=\"0\" valign=\"top\">Sel0</entry><entry morerows=\"0\" valign=\"top\">Sel1</entry><entry morerows=\"0\" valign=\"top\">Sel0</entry><entry morerows=\"0\" valign=\"top\">Sel1</entry><entry morerows=\"0\" valign=\"top\">Sel0</entry><entry morerows=\"0\" valign=\"top\">Sel1</entry><entry morerows=\"0\" valign=\"top\">Sel0</entry><entry morerows=\"0\" valign=\"top\">Sel1</entry></row><row><entry align=\"center\" morerows=\"0\" nameend=\"10\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row><row><entry morerows=\"0\" valign=\"top\">0-7</entry><entry morerows=\"0\" valign=\"top\">000</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">\u20028-15</entry><entry morerows=\"0\" valign=\"top\">001</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">16-23</entry><entry morerows=\"0\" valign=\"top\">010</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">24-31</entry><entry morerows=\"0\" valign=\"top\">011</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">32-39</entry><entry morerows=\"0\" valign=\"top\">100</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">40-47</entry><entry morerows=\"0\" valign=\"top\">101</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">48-55</entry><entry morerows=\"0\" valign=\"top\">110</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">56-63</entry><entry morerows=\"0\" valign=\"top\">111</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry align=\"center\" morerows=\"0\" nameend=\"10\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row><row><entry align=\"left\" morerows=\"0\" nameend=\"10\" namest=\"1\" valign=\"top\">The equations for the doubleword mux selects based upon the optimization are as follows: </entry></row><row><entry align=\"left\" morerows=\"0\" nameend=\"10\" namest=\"1\" valign=\"top\">Mux A, Sel0 = (!PC[5] &amp;&amp; !AOR[4] &amp;&amp; !AOR[3]) || (PC[5] &amp;&amp; AOR[4]) || (PC[5] &amp;&amp; AOR[3]) Sel1 = (PC[5] &amp;&amp; !AOR[4] &amp;&amp; !AOR[3]) || (!PC[5] &amp;&amp; AOR[4]) || (!PC[5] &amp;&amp; AOR[3]) </entry></row><row><entry align=\"left\" morerows=\"0\" nameend=\"10\" namest=\"1\" valign=\"top\">Mux B, Sel0 = (!PC[5] &amp;&amp; !AOR[4]) || (!PC[5] &amp;&amp; AOR[4]) Sel1 = (!PC[5] &amp;&amp; AOR [4]) || (PC[5] &amp;&amp; !AOR[4]) </entry></row></tbody></tgroup></table></tables></p><h4>APPENDIX A-2</h4><p><tables id=\"TABLE-US-00003\"><table colsep=\"0\" frame=\"none\" rowsep=\"0\"><tgroup align=\"left\" cols=\"2\" colsep=\"0\" rowsep=\"0\"><colspec align=\"left\" colname=\"1\" colwidth=\"28PT\"></colspec><colspec align=\"left\" colname=\"2\" colwidth=\"189PT\"></colspec><thead valign=\"bottom\"><row><entry align=\"center\" morerows=\"0\" nameend=\"2\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row></thead><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\">Mux C,</entry><entry morerows=\"0\" valign=\"top\">Sel0 = (PC[5] &amp;&amp; AOR[4] &amp;&amp; AOR[3]) || (!PC[5] &amp;&amp;</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">!AOR[4]) || (!PC[5] &amp;&amp; !AOR[3])</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel1 = (!PC[5] &amp;&amp; AOR[4] &amp;&amp; AOR[3]) ||</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">(PC[5] &amp;&amp; !AOR[4]) || (PC[5] &amp;&amp; !AOR[3])</entry></row><row><entry morerows=\"0\" valign=\"top\">Mux D,</entry><entry morerows=\"0\" valign=\"top\">Sel0 = !PC[5]</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel1 = PC[5] </entry></row><row><entry align=\"center\" morerows=\"0\" nameend=\"2\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row></tbody></tgroup></table></tables></p><h4>APPENDIX A-4</h4><p><tables id=\"TABLE-US-00004\"><table colsep=\"0\" frame=\"none\" pgwide=\"1\" rowsep=\"0\"><tgroup align=\"left\" cols=\"5\" colsep=\"0\" rowsep=\"0\"><colspec align=\"left\" colname=\"OFFSET\" colwidth=\"42PT\"></colspec><colspec align=\"center\" colname=\"1\" colwidth=\"56PT\"></colspec><colspec align=\"center\" colname=\"2\" colwidth=\"56PT\"></colspec><colspec align=\"center\" colname=\"3\" colwidth=\"56PT\"></colspec><colspec align=\"center\" colname=\"4\" colwidth=\"56PT\"></colspec><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\"></entry><entry align=\"center\" morerows=\"0\" nameend=\"4\" namest=\"OFFSET\" rowsep=\"1\" valign=\"top\"></entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">MuxE</entry><entry morerows=\"0\" valign=\"top\">MuxF</entry><entry morerows=\"0\" valign=\"top\">MuxG</entry><entry morerows=\"0\" valign=\"top\">MuxH</entry></row></tbody></tgroup><tgroup align=\"left\" cols=\"18\" colsep=\"0\" rowsep=\"0\"><colspec align=\"center\" colname=\"1\" colwidth=\"28PT\"></colspec><colspec align=\"center\" colname=\"2\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"3\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"4\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"5\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"6\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"7\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"8\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"9\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"10\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"11\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"12\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"13\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"14\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"15\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"16\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"17\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"18\" colwidth=\"14PT\"></colspec><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\">AOR</entry><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">2</entry><entry morerows=\"0\" valign=\"top\">3</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">2</entry><entry morerows=\"0\" valign=\"top\">3</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">2</entry><entry morerows=\"0\" valign=\"top\">3</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">2</entry><entry morerows=\"0\" valign=\"top\">3</entry></row><row><entry align=\"center\" morerows=\"0\" nameend=\"18\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row><row><entry morerows=\"0\" valign=\"top\">00000</entry><entry morerows=\"0\" valign=\"top\">\u20020</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">00001</entry><entry morerows=\"0\" valign=\"top\">\u20021</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">00010</entry><entry morerows=\"0\" valign=\"top\">\u20022</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">00011</entry><entry morerows=\"0\" valign=\"top\">\u20023</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">00100</entry><entry morerows=\"0\" valign=\"top\">\u20024</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">00101</entry><entry morerows=\"0\" valign=\"top\">\u20025</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">00110</entry><entry morerows=\"0\" valign=\"top\">\u20026</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">00111</entry><entry morerows=\"0\" valign=\"top\">\u20027</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01000</entry><entry morerows=\"0\" valign=\"top\">\u20028</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">01001</entry><entry morerows=\"0\" valign=\"top\">\u20029</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">01010</entry><entry morerows=\"0\" valign=\"top\">10</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">01011</entry><entry morerows=\"0\" valign=\"top\">11</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">01100</entry><entry morerows=\"0\" valign=\"top\">12</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01101</entry><entry morerows=\"0\" valign=\"top\">13</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01110</entry><entry morerows=\"0\" valign=\"top\">14</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01111</entry><entry morerows=\"0\" valign=\"top\">15</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10000</entry><entry morerows=\"0\" valign=\"top\">16</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">10001</entry><entry morerows=\"0\" valign=\"top\">17</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">10010</entry><entry morerows=\"0\" valign=\"top\">18</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">10011</entry><entry morerows=\"0\" valign=\"top\">19</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">10100</entry><entry morerows=\"0\" valign=\"top\">20</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10101</entry><entry morerows=\"0\" valign=\"top\">21</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10110</entry><entry morerows=\"0\" valign=\"top\">22</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10111</entry><entry morerows=\"0\" valign=\"top\">23</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">11000</entry><entry morerows=\"0\" valign=\"top\">24</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">11001</entry><entry morerows=\"0\" valign=\"top\">25</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">11010</entry><entry morerows=\"0\" valign=\"top\">26</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">11011</entry><entry morerows=\"0\" valign=\"top\">27</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry></row><row><entry morerows=\"0\" valign=\"top\">11100</entry><entry morerows=\"0\" valign=\"top\">28</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">11101</entry><entry morerows=\"0\" valign=\"top\">29</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">11110</entry><entry morerows=\"0\" valign=\"top\">30</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">11111</entry><entry morerows=\"0\" valign=\"top\">31</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">X</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry align=\"center\" morerows=\"0\" nameend=\"18\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row></tbody></tgroup></table></tables></p><h4>APPENDIX A-5</h4><p><tables id=\"TABLE-US-00005\"><table colsep=\"0\" frame=\"none\" rowsep=\"0\"><tgroup align=\"left\" cols=\"3\" colsep=\"0\" rowsep=\"0\"><colspec align=\"left\" colname=\"OFFSET\" colwidth=\"49PT\"></colspec><colspec align=\"center\" colname=\"1\" colwidth=\"84PT\"></colspec><colspec align=\"center\" colname=\"2\" colwidth=\"84PT\"></colspec><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\"></entry><entry align=\"center\" morerows=\"0\" nameend=\"2\" namest=\"OFFSET\" rowsep=\"1\" valign=\"top\"></entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Muxes A-D</entry><entry morerows=\"0\" valign=\"top\">Muxes E-H</entry></row></tbody></tgroup><tgroup align=\"left\" cols=\"10\" colsep=\"0\" rowsep=\"0\"><colspec align=\"center\" colname=\"1\" colwidth=\"35PT\"></colspec><colspec align=\"center\" colname=\"2\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"3\" colwidth=\"28PT\"></colspec><colspec align=\"center\" colname=\"4\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"5\" colwidth=\"28PT\"></colspec><colspec align=\"center\" colname=\"6\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"7\" colwidth=\"28PT\"></colspec><colspec align=\"center\" colname=\"8\" colwidth=\"14PT\"></colspec><colspec align=\"center\" colname=\"9\" colwidth=\"28PT\"></colspec><colspec align=\"center\" colname=\"10\" colwidth=\"14PT\"></colspec><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\">AOR</entry><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">2</entry><entry morerows=\"0\" valign=\"top\">3</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">2</entry><entry morerows=\"0\" valign=\"top\">3</entry></row><row><entry align=\"center\" morerows=\"0\" nameend=\"10\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row><row><entry morerows=\"0\" valign=\"top\">00000</entry><entry morerows=\"0\" valign=\"top\">\u20020</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">00001</entry><entry morerows=\"0\" valign=\"top\">\u20021</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">00010</entry><entry morerows=\"0\" valign=\"top\">\u20022</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">00011</entry><entry morerows=\"0\" valign=\"top\">\u20023</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">00100</entry><entry morerows=\"0\" valign=\"top\">\u20024</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">00101</entry><entry morerows=\"0\" valign=\"top\">\u20025</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">00110</entry><entry morerows=\"0\" valign=\"top\">\u20026</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">00111</entry><entry morerows=\"0\" valign=\"top\">\u20027</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01000</entry><entry morerows=\"0\" valign=\"top\">\u20028</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01001</entry><entry morerows=\"0\" valign=\"top\">\u20029</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01010</entry><entry morerows=\"0\" valign=\"top\">10</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01011</entry><entry morerows=\"0\" valign=\"top\">11</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01100</entry><entry morerows=\"0\" valign=\"top\">12</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01101</entry><entry morerows=\"0\" valign=\"top\">13</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01110</entry><entry morerows=\"0\" valign=\"top\">14</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">01111</entry><entry morerows=\"0\" valign=\"top\">15</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10000</entry><entry morerows=\"0\" valign=\"top\">16</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10001</entry><entry morerows=\"0\" valign=\"top\">17</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10010</entry><entry morerows=\"0\" valign=\"top\">18</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10011</entry><entry morerows=\"0\" valign=\"top\">19</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10100</entry><entry morerows=\"0\" valign=\"top\">20</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10101</entry><entry morerows=\"0\" valign=\"top\">21</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10110</entry><entry morerows=\"0\" valign=\"top\">22</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">10111</entry><entry morerows=\"0\" valign=\"top\">23</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry></row><row><entry morerows=\"0\" valign=\"top\">11000</entry><entry morerows=\"0\" valign=\"top\">24</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">11001</entry><entry morerows=\"0\" valign=\"top\">25</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">11010</entry><entry morerows=\"0\" valign=\"top\">26</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">11011</entry><entry morerows=\"0\" valign=\"top\">27</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">11100</entry><entry morerows=\"0\" valign=\"top\">28</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">11101</entry><entry morerows=\"0\" valign=\"top\">29</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">11110</entry><entry morerows=\"0\" valign=\"top\">30</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry morerows=\"0\" valign=\"top\">11111</entry><entry morerows=\"0\" valign=\"top\">31</entry><entry morerows=\"0\" valign=\"top\">1</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">0</entry><entry morerows=\"0\" valign=\"top\">1</entry></row><row><entry align=\"center\" morerows=\"0\" nameend=\"10\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row></tbody></tgroup></table></tables></p><h4>APPENDIX A-6</h4><p><tables id=\"TABLE-US-00006\"><table colsep=\"0\" frame=\"none\" rowsep=\"0\"><tgroup align=\"left\" cols=\"1\" colsep=\"0\" rowsep=\"0\"><colspec align=\"left\" colname=\"1\" colwidth=\"217PT\"></colspec><thead valign=\"bottom\"><row><entry align=\"center\" morerows=\"0\" nameend=\"1\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row></thead><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\">The logic equations for the mux selects of the 4:1 muxes are as follows:</entry></row></tbody></tgroup><tgroup align=\"left\" cols=\"2\" colsep=\"0\" rowsep=\"0\"><colspec align=\"left\" colname=\"1\" colwidth=\"42PT\"></colspec><colspec align=\"left\" colname=\"2\" colwidth=\"175PT\"></colspec><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\">Muxes A-D</entry><entry morerows=\"0\" valign=\"top\">Sel0 = (!AOR[4] &amp;&amp; !AOR[3] &amp;&amp; !AOR[2]) ||</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">(AOR[4] &amp;&amp; AOR[3] &amp;&amp; AOR[2])</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel1 = (!AOR[4] &amp;&amp; !AOR[3] &amp;&amp; AOR[2]) ||</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">(!AOR[4] &amp;&amp; AOR[3] &amp;&amp; !AOR[2])</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel2 = (!AOR[4] &amp;&amp; AOR[3] &amp;&amp; AOR[2]) ||</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">(AOR[4] &amp;&amp; !AOR[3] &amp;&amp; !AOR[2])</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel3 = (AOR[4] &amp;&amp; !AOR[3] &amp;&amp; AOR[2]) ||</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">(AOR[4] &amp;&amp; AOR[3] &amp;&amp; !AOR[2])</entry></row><row><entry morerows=\"0\" valign=\"top\">Muxes E-H,</entry><entry morerows=\"0\" valign=\"top\">Sel0 = !AOR[4] &amp;&amp; !AOR[3]</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel1 = !AOR[4] &amp;&amp; AOR[3]</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel2 = AOR[4] &amp;&amp; !AOR[3]</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel3 = AOR[4] &amp;&amp; AOR[3]</entry></row></tbody></tgroup><tgroup align=\"left\" cols=\"1\" colsep=\"0\" rowsep=\"0\"><colspec align=\"left\" colname=\"1\" colwidth=\"217PT\"></colspec><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\">The 8:1 mux control is much simpler as a result of the routing of the 4:1</entry></row><row><entry morerows=\"0\" valign=\"top\">mux outputs.</entry></row><row><entry morerows=\"0\" valign=\"top\">This routing can be seen in FIG. 9. The logic equations for the mux selects</entry></row><row><entry morerows=\"0\" valign=\"top\">of the 8:1 muxes are as follows:</entry></row></tbody></tgroup><tgroup align=\"left\" cols=\"2\" colsep=\"0\" rowsep=\"0\"><colspec align=\"left\" colname=\"1\" colwidth=\"42PT\"></colspec><colspec align=\"left\" colname=\"2\" colwidth=\"175PT\"></colspec><tbody valign=\"top\"><row><entry morerows=\"0\" valign=\"top\">Muxes 0-3,</entry><entry morerows=\"0\" valign=\"top\">Sel0 = !AOR[2] &amp;&amp; !AOR[1] &amp;&amp; !AOR[0]</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel1 = !AOR[2] &amp;&amp; !AOR[1] &amp;&amp; AOR[0]</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel2 = !AOR[2] &amp;&amp; AOR[1] &amp;&amp; !AOR[0]</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel3 = !AOR[2] &amp;&amp; AOR[1] &amp;&amp; AOR[0]</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel4 = AOR[2] &amp;&amp; !AOR[1] &amp;&amp; !AOR[0]</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Se15 = AOR[2] &amp;&amp; !AOR[1] &amp;&amp; AOR[0]</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel6 = AOR[2] &amp;&amp; AOR[1] &amp;&amp; !AOR[0]</entry></row><row><entry morerows=\"0\" valign=\"top\"></entry><entry morerows=\"0\" valign=\"top\">Sel7 = AOR[2] &amp;&amp; AOR[1] &amp;&amp; AOR[0]</entry></row><row><entry align=\"center\" morerows=\"0\" nameend=\"2\" namest=\"1\" rowsep=\"1\" valign=\"top\"></entry></row></tbody></tgroup></table></tables></p><?DETDESC description=\"Detailed Description\" end=\"tail\"?></description>"}], "inventors": [{"first_name": "Marc", "last_name": "Tremblay", "name": ""}, {"first_name": "Graham R.", "last_name": "Murphy", "name": ""}], "assignees": [{"first_name": "", "last_name": "", "name": "SUN MICROSYSTEMS, INC."}, {"first_name": "", "last_name": "Oracle America, Inc.", "name": ""}, {"first_name": "", "last_name": "SUN MICROSYSTEMS, INC.", "name": ""}], "ipc_classes": [{"primary": true, "label": "G06F   9/00"}], "locarno_classes": [], "ipcr_classes": [{"label": "G06F   9/30        20060101A I20051008RMEP"}, {"label": "G06F   9/38        20060101A I20051008RMEP"}], "national_classes": [{"primary": true, "label": "712204"}, {"primary": false, "label": "712206"}, {"primary": false, "label": "712024"}, {"primary": false, "label": "712E09029"}, {"primary": false, "label": "712E09071"}, {"primary": false, "label": "712E09055"}], "ecla_classes": [{"label": "G06F   9/38B9"}, {"label": "G06F   9/38T"}, {"label": "G06F   9/30T2"}], "cpc_classes": [{"label": "G06F   9/30149"}, {"label": "G06F   9/3885"}, {"label": "G06F   9/3816"}], "f_term_classes": [], "legal_status": "Expired - Lifetime", "priority_date": "1998-12-03", "application_date": "1998-12-03", "family_members": [{"ucid": "WO-2000033179-A2", "titles": [{"lang": "FR", "text": "PROCEDE PUISSANT DE LECTURE D'INSTRUCTIONS DONT LA LONGUEUR N'EST PAS UNE PUISSANCE DE 2"}, {"lang": "EN", "text": "METHOD FOR FETCHING INSTRUCTIONS HAVING A NON-POWER OF TWO SIZE"}]}, {"ucid": "WO-2000033179-A9", "titles": [{"lang": "EN", "text": "METHOD FOR FETCHING INSTRUCTIONS HAVING A NON-POWER OF TWO SIZE"}, {"lang": "FR", "text": "PROCEDE PUISSANT DE LECTURE D'INSTRUCTIONS DONT LA LONGUEUR N'EST PAS UNE PUISSANCE DE 2"}]}, {"ucid": "US-6314509-B1", "titles": [{"lang": "EN", "text": "Efficient method for fetching instructions having a non-power of two size"}]}, {"ucid": "WO-2000033179-A3", "titles": [{"lang": "EN", "text": "METHOD FOR FETCHING INSTRUCTIONS HAVING A NON-POWER OF TWO SIZE"}, {"lang": "FR", "text": "PROCEDE PUISSANT DE LECTURE D'INSTRUCTIONS DONT LA LONGUEUR N'EST PAS UNE PUISSANCE DE 2"}]}]}