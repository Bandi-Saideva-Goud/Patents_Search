{"patent_number": "US-6477654-B1", "publication_id": 73206308, "family_id": 23101705, "publication_date": "2002-11-05", "titles": [{"lang": "EN", "text": "Managing VT for reduced power using power setting commands in the instruction stream"}], "abstracts": [{"lang": "EN", "paragraph_markup": "<abstract lang=\"EN\" load-source=\"patent-office\" mxw-id=\"PA50403660\"><p>An integrated circuit includes a plurality of functional units which are capable of operating at more than one power/performance level and a power control unit. The power control unit controls the power/performance consumption of the different functional units to optimize operation of the integrated circuit. Special power control instructions are added to user applications in order to control via the power control unit, the power consumption of the different functional units.</p></abstract>"}], "claims": [{"lang": "EN", "claims": [{"num": 1, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00001\" num=\"1\"><claim-text>1. A method of operating a programmable integrated circuit having plural functional units each operable at plural operable power levels, the integrated circuit including a functional unit power control unit including a Vt command decoder for receiving an instruction stream from an instruction prefetch queue and responsive to pre-inserted power control instructions generated by a compiler or a post-processing program for altering the power status of selected one or more of said functional units, said method comprising:</claim-text><claim-text>storing plural instructions, said instructions including the pre-inserted power control instructions, at least one of the stored power control instructions including data identifying a specific one of the functional units, </claim-text><claim-text>extracting said stored instructions in a sequence, </claim-text><claim-text>examining each extracted instruction to determine if it is a power control instruction, and </claim-text><claim-text>changing the power status of at least the specific one of the functional units in response to the power control instruction to one of the plural operable power levels. </claim-text></claim>"}, {"num": 2, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00002\" num=\"2\"><claim-text>2. The method of <claim-ref idref=\"US-6477654-B1-CLM-00001\">claim 1</claim-ref> wherein changing the power status comprises increasing the power consumption of the specific functional unit in response to a pre-inserted power up instruction.</claim-text></claim>"}, {"num": 3, "parent": 2, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00003\" num=\"3\"><claim-text>3. The method of <claim-ref idref=\"US-6477654-B1-CLM-00002\">claim 2</claim-ref> wherein changing the power status comprises decreasing the power consumption of the specific functional unit in response to a pre-inserted power down instruction.</claim-text></claim>"}, {"num": 4, "parent": 3, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00004\" num=\"4\"><claim-text>4. The method of <claim-ref idref=\"US-6477654-B1-CLM-00003\">claim 3</claim-ref> which further includes decreasing the power consumption of the specific functional unit only after a lapse of at least a predetermined time after responding to the pre-inserted power down instruction.</claim-text></claim>"}, {"num": 5, "parent": 2, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00005\" num=\"5\"><claim-text>5. The method of <claim-ref idref=\"US-6477654-B1-CLM-00002\">claim 2</claim-ref>, wherein said increasing the power consumption of the specific functional unit in response to a pre-inserted power up instruction includes reducing a body voltage of at least one transistor in said specific functional unit.</claim-text></claim>"}, {"num": 6, "parent": 3, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00006\" num=\"6\"><claim-text>6. The method of <claim-ref idref=\"US-6477654-B1-CLM-00003\">claim 3</claim-ref>, wherein said decreasing the power consumption of the specific functional unit in response to a pre-inserted power down instruction includes increasing a body voltage of at least one transistor in said specific functional unit.</claim-text></claim>"}, {"num": 7, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00007\" num=\"7\"><claim-text>7. The method of <claim-ref idref=\"US-6477654-B1-CLM-00001\">claim 1</claim-ref>, wherein said changing the power status of at least the specific one of the functional units in response to the power control instruction includes changing a body voltage of a transistor in said one of the functional units.</claim-text></claim>"}, {"num": 8, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00008\" num=\"8\"><claim-text>8. The method of <claim-ref idref=\"US-6477654-B1-CLM-00001\">claim 1</claim-ref>, wherein said changing the power status of at least the specific one of the functional units includes changing a power level of said at least the specific one of the functional units to an operating power level allowing a degraded operation mode.</claim-text></claim>"}, {"num": 9, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00009\" num=\"9\"><claim-text>9. An integrated circuit designed to use functional unit power control instructions inserted by a compiler or post-processing program, comprising:</claim-text><claim-text>plural functional units each operable at plural operable power levels, different ones of the plural operable power levels corresponding to different execution speeds of the functional units; and </claim-text><claim-text>a Vt command decode unit for receiving an instruction stream from an instruction prefetch queue and decoding an addressed functional unit power control instruction inserted by the compiler or the post-processing program, and </claim-text><claim-text>means for changing a power level for a functional unit to one of the plural operable power levels in response to said addressed functional unit power control instruction. </claim-text></claim>"}, {"num": 10, "parent": 9, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00010\" num=\"10\"><claim-text>10. The circuit of <claim-ref idref=\"US-6477654-B1-CLM-00009\">claim 9</claim-ref> wherein the means for changing a power level operates to increase the power consumption in response to a power up control instruction.</claim-text></claim>"}, {"num": 11, "parent": 6, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00011\" num=\"11\"><claim-text>11. The circuit of <claim-ref idref=\"US-6477654-B1-CLM-00006\">claim 6</claim-ref>, wherein said means for changing a power level operates to increase the power consumption by reducing a body voltage of at least one transistor in said functional unit.</claim-text></claim>"}, {"num": 12, "parent": 9, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00012\" num=\"12\"><claim-text>12. The circuit of <claim-ref idref=\"US-6477654-B1-CLM-00009\">claim 9</claim-ref> wherein the means for changing a power level operates to decrease the power consumption in response to a power down control instruction.</claim-text></claim>"}, {"num": 13, "parent": 12, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00013\" num=\"13\"><claim-text>13. The circuit of <claim-ref idref=\"US-6477654-B1-CLM-00012\">claim 12</claim-ref>, further comprising:</claim-text><claim-text>a set of timers, each timer for a different one of the functional units; </claim-text><claim-text>means to initiate a timer in response to a decoded functional unit power down control instruction addressed to the corresponding functional unit; and </claim-text><claim-text>power control means responsive to said power down control instruction and expiration of said timer to decrease the power consumption of the functional unit. </claim-text></claim>"}, {"num": 14, "parent": 7, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00014\" num=\"14\"><claim-text>14. The circuit of <claim-ref idref=\"US-6477654-B1-CLM-00007\">claim 7</claim-ref>, wherein said means for changing a power level operates to decrease the power consumption by increasing a body voltage of at least one transistor in said functional unit.</claim-text></claim>"}, {"num": 15, "parent": 9, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00015\" num=\"15\"><claim-text>15. The integrated circuit of <claim-ref idref=\"US-6477654-B1-CLM-00009\">claim 9</claim-ref>, wherein the decode unit is responsive to an instruction stream generated by the compiler or the post-processing program.</claim-text></claim>"}, {"num": 16, "parent": 15, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00016\" num=\"16\"><claim-text>16. The integrated circuit of <claim-ref idref=\"US-6477654-B1-CLM-00015\">claim 15</claim-ref>, wherein the decode unit is responsive to a prefetch queue of the instruction stream generated by the compiler or the post-processing program.</claim-text></claim>"}, {"num": 17, "parent": 9, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00017\" num=\"17\"><claim-text>17. The integrated circuit of <claim-ref idref=\"US-6477654-B1-CLM-00009\">claim 9</claim-ref>, wherein said means for changing a power level changes a body voltage of a transistor in said functional unit.</claim-text></claim>"}, {"num": 18, "parent": 9, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00018\" num=\"18\"><claim-text>18. The integrated circuit of <claim-ref idref=\"US-6477654-B1-CLM-00009\">claim 9</claim-ref>, wherein said means for changing a power level for a functional unit changes the power level to an operating power level which allows a degraded operation mode.</claim-text></claim>"}, {"num": 19, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00019\" num=\"19\"><claim-text>19. For an integrated circuit having plural functional units each operable at plural operating power levels, the integrated circuit including a functional unit power control unit including a Vt command decoder for receiving an instruction stream from an instruction prefetch queue and responsive to power control instructions inserted by a compiler or post-processing program for altering the power status of one or more of said functional units, a method of modifying a sequence of instructions of an application to add power control instructions for controlling the power status of the functional units, said method comprising:</claim-text><claim-text>a) selecting an unprocessed functional unit from a list of functional units, </claim-text><claim-text>b) examining the instructions of the application to identify a segment of instructions which exclusively exercises the selected functional unit, and </claim-text><claim-text>c) upon identifying a segment, </claim-text><claim-text>c=b <b>1</b>) inserting, via the compiler or the post-processing program, a power up control instruction in a sequence preceding the identified segment addressed to the selected functional unit, and </claim-text><claim-text>c2) inserting, via the compiler or the post-processing program, a power down control instruction in the sequence following the identified segment addressed to the selected functional unit, wherein the power down control instruction controls a power status of the selected functional unit to be one of the plural operating power levels. </claim-text></claim>"}, {"num": 20, "parent": 19, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00020\" num=\"20\"><claim-text>20. A method as recited in <claim-ref idref=\"US-6477654-B1-CLM-00019\">claim 19</claim-ref> further including the steps of:</claim-text><claim-text>d) upon failing to identify a segment of instructions in response to the examination of step b) </claim-text><claim-text>d1) determining if the selected unit is used in the application, </claim-text><claim-text>d11) if the unit is not used, adding it to a list of \u201calways off\u201d units, </claim-text><claim-text>d12) if the unit is used, adding it to a list of \u201calways on\u201d units, </claim-text><claim-text>e) inserting a power up instruction addressed to each unit on the list of \u201calways on\u201d units at application initialization, and </claim-text><claim-text>f) inserting a power down instruction addressed to each unit on the list of \u201calways on\u201d units at application termination. </claim-text></claim>"}, {"num": 21, "parent": 20, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00021\" num=\"21\"><claim-text>21. A method as recited in <claim-ref idref=\"US-6477654-B1-CLM-00020\">claim 20</claim-ref> including the further steps of:</claim-text><claim-text>g) inserting a power down instruction addressed to each unit on the list of \u201calways off\u201d units at application initialization. </claim-text></claim>"}, {"num": 22, "parent": 19, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00022\" num=\"22\"><claim-text>22. The method of <claim-ref idref=\"US-6477654-B1-CLM-00019\">claim 19</claim-ref>, wherein one of steps c1) and c2) result in changing a body voltage of at least one transistor in said selected functional unit.</claim-text></claim>"}, {"num": 23, "parent": 19, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00023\" num=\"23\"><claim-text>23. The method of <claim-ref idref=\"US-6477654-B1-CLM-00019\">claim 19</claim-ref>, wherein, in step c1), the power up control instruction includes an instruction to power up the selected functional unit to one of the plural operating power levels corresponding to a degraded mode of operation.</claim-text></claim>"}, {"num": 24, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00024\" num=\"24\"><claim-text>24. A method of operating a programmable integrated circuit having plural functional units each operable at plural operating power levels, the integrated circuit including a functional unit power control unit including a Vt command decoder for receiving an instruction stream from an instruction prefetch queue and responsive to power control instructions for altering the power status of selected one or more of said functional units, said method comprising:</claim-text><claim-text>storing plural instructions, said instructions including power control instructions, at least one of the stored power control instructions including data identifying a specific one of the functional units; </claim-text><claim-text>extracting said stored instructions in a sequence; </claim-text><claim-text>examining each extracted instruction to determine if it is a power control instruction; and </claim-text><claim-text>changing the power status of at least the specific one of the functional units in response to the power control instruction, </claim-text><claim-text>wherein changing the power status includes either decreasing the power consumption of the specific functional unit in response to a power down instruction or increasing the power consumption of the specific functional unit in response to a power up instruction, and </claim-text><claim-text>wherein said decreasing the power consumption of the specific functional unit includes decreasing the power consumption of the specific functional unit to one of the plural operating power levels only after a lapse of at least a predetermined time after responding to the power down instruction. </claim-text></claim>"}, {"num": 25, "parent": 24, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00025\" num=\"25\"><claim-text>25. The method of <claim-ref idref=\"US-6477654-B1-CLM-00024\">claim 24</claim-ref>, wherein said changing the power status includes changing a body voltage of said at least the specific one of the functional units.</claim-text></claim>"}, {"num": 26, "parent": 24, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00026\" num=\"26\"><claim-text>26. The method of <claim-ref idref=\"US-6477654-B1-CLM-00024\">claim 24</claim-ref>, wherein said decreasing the power consumption of said at least the specific one of the functional units decreases the power consumption to one of the plural operating power levels.</claim-text></claim>"}, {"num": 27, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00027\" num=\"27\"><claim-text>27. An integrated circuit designed to use functional unit power control instructions inserted by a compiler or post-processing program, comprising:</claim-text><claim-text>plural functional units each operable at plural operating power levels, different ones of the plural operating power levels corresponding to different execution speeds of the functional units; </claim-text><claim-text>a Vt command decode unit for receiving an instruction stream from an instruction prefetch queue and decoding an addressed functional unit power control instruction; </claim-text><claim-text>means for changing a power level for at least one of the plural functional units in response to said addressed functional unit power control instruction; </claim-text><claim-text>a set of timers, each timer for a different one of the functional units; </claim-text><claim-text>means to initiate a timer in response to a decoded functional unit power down control instruction addressed to the corresponding functional unit; and </claim-text><claim-text>power control means responsive to said power down control instruction and expiration of said timer to decrease the power consumption of said at least one of the plural functional units, </claim-text><claim-text>wherein the means for changing a power level operates to decrease the power consumption of said one of the plural functional units to one of the plural operating power levels in response to a power down control instruction. </claim-text></claim>"}, {"num": 28, "parent": 27, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00028\" num=\"28\"><claim-text>28. The integrated circuit of <claim-ref idref=\"US-6477654-B1-CLM-00027\">claim 27</claim-ref>, wherein the means for changing a power level includes means for changing a body voltage of the functional unit.</claim-text></claim>"}, {"num": 29, "parent": 27, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00029\" num=\"29\"><claim-text>29. The integrated circuit of <claim-ref idref=\"US-6477654-B1-CLM-00027\">claim 27</claim-ref>, wherein the means for changing a power level changes a power level of the functional unit to one of the plural operating power levels and enables operation of the functional unit in a degraded mode.</claim-text></claim>"}, {"num": 30, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00030\" num=\"30\"><claim-text>30. An integrated circuit designed to use functional unit power control instructions inserted by a compiler or post-processing program, comprising:</claim-text><claim-text>plural functional units each operable at plural operating power levels, different ones of the plural operating power levels corresponding to different execution speeds of the functional units; and </claim-text><claim-text>means for changing power levels of said plural functional units including a Vt command decode unit for receiving an instruction stream from a prefetch queue and decoding an addressed functional unit power control instruction, </claim-text><claim-text>wherein said means for changing power levels of said plural functional units alter a power level for at least one of said plural functional units to one of the plural operating power levels in response to said addressed functional unit power control instruction. </claim-text></claim>"}, {"num": 31, "parent": 30, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00031\" num=\"31\"><claim-text>31. The integrated circuit of <claim-ref idref=\"US-6477654-B1-CLM-00030\">claim 30</claim-ref>, wherein the means for changing a power level includes means for changing a body voltage of the functional unit.</claim-text></claim>"}, {"num": 32, "parent": 30, "type": "dependent", "paragraph_markup": "<claim id=\"US-6477654-B1-CLM-00032\" num=\"32\"><claim-text>32. The integrated circuit of <claim-ref idref=\"US-6477654-B1-CLM-00030\">claim 30</claim-ref>, wherein the means for changing a power level changes a power level of the functional unit to one of the plural operating power levels and enables operation of the functional unit in a degraded mode.</claim-text></claim>"}]}], "descriptions": [{"lang": "EN", "paragraph_markup": "<description lang=\"EN\" load-source=\"patent-office\" mxw-id=\"PDES53661102\"><?RELAPP description=\"Other Patent Relations\" end=\"lead\"?><h4>RELATED APPLICATION</h4><p>This application is related to co-pending application Ser. No. 09/287,173 filed on even date herewith entitled \u201cManaging V<sub>t </sub>for Reduced Power Using a Status Table\u201d filed in the names of Claude Bertin, Alvar Dean, Ken Goodnow, Scott Gould, Pat Perry, Dave Pricer, Dan Reed, William Tonti and Sebastian Ventrone.</p><?RELAPP description=\"Other Patent Relations\" end=\"tail\"?><?BRFSUM description=\"Brief Summary\" end=\"lead\"?><h4>TECHNICAL FIELD</h4><p>The invention relates to integrated circuits and more particularly intelligent power management of the integrated circuit.</p><h4>BACKGROUND OF INVENTION</h4><p>The application and acceptance of portable electronic devices has emphasized the importance of controlling and or optimizing power consumption. Actually controlling power consumption may be satisfied by adjusting the body voltage (i.e. the voltage magnitude between body and source) applied to transistors in an integrated circuit (IC). By increasing the body to source voltage, transistors achieve a higher threshold voltage, consume less power but, on the other hand, provide lower performance and vice versa. It is also known that the IC can be broken down into several partitions or sectors and the body voltage controlled on a partition by partition basis, see in this regard copending application entitled \u201cLow Powering Apparatus for Automatic Reduction of Power in Active and Standby Modes\u201d by Dean et al filed Jul. 21, 1998, Ser. No. 09/120,211, ultimately issued as U.S. Pat. No. 6,011,383, and \u201cDevice and Method to Reduce Power Consumption in Integrated Semiconductor Devices Using a Lower Power Groggy Mode\u201d, Bertin et al, filed on Sep. 24, 1998, Ser. No. 09/159,861, ultimately issued as U.S. Pat. No. 6,097,243, and \u201cASIC Low Power Activity Detector to Change Threshold Voltage\u201d, Dean et al, U.S. Ser. No. 09/159,898, filed on Sep. 24, 1998, and ultimately issued as U.S. Pat. No. 6,097,241. The disclosures of these applications are incorporated herein by reference.</p><p>Notwithstanding the foregoing, the art lacks a technology to allow optimizing power management in light of the actual repertoire of instructions applied to a partitioned integrated circuit.</p><h4>SUMMARY OF INVENTION</h4><p>The present invention provides an integrated circuit in which power is managed intelligently relative to the demands placed on the integrated circuit. In order to implement the foregoing the integrated circuit is designed with discrete functional units, each dedicated to a particular function or functions where each of the functional units has an independently controllable body voltage or threshold voltage (V<sub>t</sub>). Consequently, each of the functional units can be operated at one of plural power levels depending on the body or threshold voltage applied thereto and independent of other functional units. Since the functional units have discrete functions, it is possible to correlate specific software instructions with one or a set of functional units. Execution of the instruction at a high rate will require the correlated functional units to be in a high power state, other functional units, i.e. those not correlated with the instruction, need not be in the high power state.</p><p>For example, assume the IC had functional units dedicated to floating point arithmetic functions and a modem operation and the application program or program segment being executed involved a remote file transfer but no floating point operations. One could optimize the performance, that is reduce power consumption but maximize speed of the IC, by reducing the power consumed by the floating point arithmetic functional unit(s) to a minimum and raising the power consumption of the modem-related unit(s). The raising of the power level in the modem-related units is justified by the increase in performance while the power savings on the floating point arithmetic functional unit(s) is obtained at no cost since the absence of floating point arithmetic operations means the performance of that functional unit or units is of no consequence to the execution of the application or program segment.</p><p>In general it is an object of the invention to control the power consumption of various functional units so as to present functional units in a high power state when instructions requiring their operation are to be executed and concomitantly to minimize power wasted on functional units which are not involved in current instructions. This may be effected by powering up a functional unit which is called on and powering down that unit thereafter.</p><p>In connection with one embodiment of the invention, an application, i.e. a series of instructions to be executed, is recompiled or modified so as to add to the application one or more power control instructions. The power control instructions each may be addressed so as to indicate to which of the functional unit or units that power control instruction applies. The intent is that the power control instructions, after being added to the instruction stream, are stored along with the preexisting instructions so that when the program containing the instructions is executed, the power control instructions will optimize the power status of the plural functional units. More particularly, the functional units which are required for execution of a particular instruction should be in an appropriate power state, that is a high power state at the time the instruction will be executed. Other functional units, which are not required for execution of the particular instruction, need not be in a high power state. In order to add the appropriate power control instructions, an analysis function analyzes the instructions contained in the application to identify correlated functional units. The analysis unit will assume that on initialization all functional units will be in their lowest power state.</p><p>The analysis function identifies the population of functional units and related parameters, such as the time required to transition the unit from a low to a higher power state. Thereafter the analysis function correlates the instructions in the user application or program with the various functional units. With the result of this correlation the analysis function can determine which functional units are required to be in a higher power state for each of the instructions in the application. Then the analysis function selects a unit and, for each unit performs the following.</p><p>First, a determination is made regarding whether it is possible to determine which code segment(s) in the application exclusively use the unit, where a code segment is defined to have one and only entrance and exit. If such code segment(s) can be identified, then we can be assured that the instruction sequence which eventuates in use of the unit is known. This is in contrast to more complex instruction sequencing as in the case of branch operations. Where exclusive use of the unit can be determined the analysis function can insert a power up and power down instruction, addressed to the unit being processed in a location of the instruction sequence to bracket the segment. That is the power up instruction is placed at the entrance to the segment and a power down instruction is placed at the termination of the segment. If on the other hand it is not possible to determine one or more code segment which exclusively uses the unit then it is necessary to determine if the unit is ever used in the application. If the unit is never used then it can remain in a low power state and it is placed on an always off list. If the unit is ever used, then it is placed on an always on list.</p><p>After each unit is processed in this way, there are two terminal functions that are necessary. In a first of the terminal functions, a power down power control instruction is placed in the beginning of the application and addressed to each unit on the always off list and a power up power control instruction is placed in the beginning of the application and addressed to each always on unit. In the second of the terminal instructions a power down power control instruction is placed at the end of the application and addressed to each unit in the IC.</p><p>By appropriately inserting the power control instructions in the ordered sequence of instructions of the application as described, a modified ordered list or sequence of instructions is produced by the analysis function. This modified ordered list is then stored so that the integrated circuit can later execute the instructions of the modified ordered list when they are extracted from storage.</p><p>Accordingly, the invention provides a method of operating a programmable integrated circuit having plural functional units each operable at plural power levels, the integrated circuit including a functional unit power control unit responsive to power control instructions for altering the power status of selected one or more of said functional units, said method comprising:</p><p>storing plural instructions, said instructions including power control instructions, at least one of the stored power control instructions including data identifying a specific one of the functional units,</p><p>extracting said stored instructions in a sequence,</p><p>examining each extracted instruction to determine if it is a power control instruction, and</p><p>changing the power status of at least the specific one of the functional units in response to the power control instruction.</p><p>The invention also provides an integrated circuit designed to use functional unit power control comprising:</p><p>plural functional units each operable at plural power levels, different ones of the power levels corresponding to different execution speeds of the functional units,</p><p>a decode unit for receiving and decoding an addressed functional unit power control instruction, and</p><p>means for changing a power level for a functional unit in response to said power control instruction.</p><p>In respect of another aspect, the invention provides, in an integrated circuit having plural functional units, each functional unit operable at plural power levels, the integrated circuit including a functional unit power control responsive to power control instructions for altering the power status of one or more of said functional units, a method of modifying the sequence of instructions to add power control instructions for controlling the power status of the functional units, the method comprising:</p><p>selecting an unprocessed unit,</p><p>identifying a program segment which employs said unprocessed unit to the exclusion of other program segments, and</p><p>inserting at least one power control instruction addressed to the unit for the determined program segment.</p><p>Still other objects and advantages of the present invention will become readily apparent by those skilled in the art from the following detailed description, which describes only the preferred embodiments of the invention, by way of illustration of the best mode contemplated of carrying out the invention. The invention is capable of other and different embodiments, and its several details are capable of modifications in various respects, without departing from the invention. Accordingly, the description is to be regarded as illustrative in nature and not as restrictive.</p><?BRFSUM description=\"Brief Summary\" end=\"tail\"?><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"lead\"?><h4>BRIEF DESCRIPTION OF THE DRAWINGS</h4><p>The present invention will now be described in connection with the attached drawings in which like reference characters identify identical apparatus and in which:</p><p>FIG. 1 is a block diagram of a chip in accordance with the present invention;</p><p>FIG. 2 is a more detailed block diagram;</p><p>FIG. 3 is a flow diagram illustrating the steps used to modify an application to add appropriate power control instructions;</p><p>FIG. 4 is shows a representative program segment with added power control instructions; and</p><p>FIG. 5 is a timing diagram having lines A-D which is useful in explaining the operation of the apparatus of FIG. <b>2</b>.</p><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"tail\"?><?DETDESC description=\"Detailed Description\" end=\"lead\"?><h4>BEST AND VARIOUS MODES FOR CARRYING OUT INVENTION</h4><p>FIG. 1 is an illustration of a typical integrated circuit chip <b>100</b> which incorporates the present invention. The chip includes a plurality of functional units <b>1</b>-n such as units <b>15</b>, <b>16</b> and <b>17</b>. Units <b>1</b>-n are representative of a plurality of functional units which are included on the integrated circuit <b>100</b>. Typically, the functional units will perform different functions and are capable of operating at different threshold voltages (V<sub>t</sub>) where a higher threshold voltage represents a lower power consumption but at a slower speed of operation and a lower threshold voltage represents a higher power consumption but at a higher operating speed. As will be described, through the use of the method and apparatus of the invention, the power consumption of the different functional units may be controlled so as to optimize the operation of the chip as a whole in light of the specific instructions which are presented for execution. Optimized chip operation as a whole is realized by running at higher power level only those units which take part in execution of an instruction, and only for that period when those units are actually operating. Units which do not take part in execution are operated at minimum power levels for the period of time the units are not involved in the execution of an instruction. It is a thesis of the present invention that some functional units of the integrated circuit are not used in the execution of some instructions and hence minimizing the power level of the unused functional units will not affect performance for such an instruction. Consequently, optimized chip power/performance for that particular instruction results in running those particular functional units at a lower or lowest available power level.</p><p>Concomitantly, the functional units which are exercised in order to execute the particular instruction will be run at higher power level, or the highest power level, to achieve maximum performance.</p><p>FIG. 1 also shows that the integrated circuit chip includes a CPU <b>20</b> and a power control unit <b>10</b>. The power control unit <b>10</b> sets the power levels for the different functional units, such as units <b>1</b>-n, and responds to power commands communicated thereto.</p><p>FIG. 4 is a portion of a typical instruction sequence which is used with the invention. As shown in FIG. 4, the portion of the instruction sequence which is illustrated includes instructions A-D which are not otherwise identified. Instructions A-D may be instructions which are executed by the different functional units. However, in addition to these particular instructions, FIG. 4 shows two additional instructions, one denoted \u201cpower command up 3\u201d and the other denoted \u201cpower command down 1\u201d. The first noted power command is an instruction to increase the power consumption of unit <b>3</b> (<b>17</b>) from a nominal or lower level to a high performance level. In a similar fashion, the other non-generic instruction shown in FIG. 4 is \u201cpower command down 1\u201d. This denotes a power command to decrease the power consumption of unit <b>1</b> (<b>15</b>) from a high performance level to a low or nominal level. In each case, that power command is executed, as will be described, by changing V<sub>t </sub>for the addressed functional unit. The commands shown in FIG. 4 are representative and in practice other power commands will be interspersed in the application.</p><p>Typically, instructions are stored in non-volatile memory in a sequence. When called on for use, the instructions are extracted from the non-volatile memory and provided to the CPU where they are decoded and executed. It is contemplated that the chip of the invention operates in a similar fashion, the only difference being that interspersed in conventional instructions will be one or more addressed power command instructions as is shown for example in FIG. <b>4</b>.</p><p>FIG. 2 is a more detailed block diagram of a portion of the subject matter shown in FIG. <b>1</b>. FIG. 2 shows that the power control unit <b>10</b>, a portion of the CPU <b>20</b>, includes a V<sub>t </sub>command decoder <b>12</b>, timer control register <b>110</b>, and a plurality of register stages including stages <b>115</b>, <b>116</b> and <b>118</b>. FIG. 2 also shows a portion of the instruction stream of the CPU <b>20</b> including a prefetch queue <b>21</b> and an instruction decode unit <b>22</b>. In the conventional portion of the CPU <b>20</b>, the instruction stream flows from the prefetch queue <b>21</b> to the instruction decode unit <b>22</b>; other conventional portions of the CPU <b>20</b> are not illustrated. However, the instruction stream is also connected to the power control unit <b>10</b> and particularly provides an input to the command decode <b>12</b>. The command decode <b>12</b> responds only to the \u201cpower command\u201d such as those illustrated in FIG. <b>4</b>. In particular, the address portion of the power command is used by the decode unit <b>12</b> to address the corresponding register. Thus, the output of the command decode unit <b>12</b> is coupled to the input terminal of register stages <b>115</b>, <b>116</b> and <b>118</b>. Those skilled in the art will understand that these are representative of a plurality of stages, one for each different functional unit in the chip. Consequently, when the power command for a particular unit is detected, the output of the command decode unit <b>12</b> causes the corresponding register stage to be set or reset via signal to its set/reset input terminal. The power on command, when decoded results in setting the addressed register stage and the power off command, when decoded results in resetting the addressed register stage.</p><p>FIG. 2 also illustrates the breakdown of a typical unit, such as unit <b>18</b>. As shown in FIG. 2, the unit <b>18</b> comprises three major components, the first component <b>182</b> is the core functional unit per se which is arranged to perform the function of the functional unit. The other two elements, the timer <b>183</b> and the V<sub>t </sub>control <b>181</b> are arranged to control the power consumption for the functional unit as will now be described.</p><p>The output terminal of a register stage, such as <b>118</b>, is connected to one input of an OR gate <b>184</b>. The timer <b>183</b> has two inputs, IN and RESET, and an output, EXPIRE. Asserting IN initiates timing and after the timing period expires, EXPIRE is asserted. The EXPIRE output is connected via an inverter <b>185</b> and forms the other input of the OR gate <b>184</b>. The input is used to set or control the period of the timer. This is implemented by use of a special power command instruction.</p><p>FIG. 5 is a timing diagram showing how the register stage and the functional unit controls interact. Line A of FIG. 5 is the input to the related register such as register <b>118</b>. Line B is the output of that stage. Line D shows the status of the input to control <b>181</b> and, perhaps with some delay the power status and performance of the core logic of the unit. In other words, when POWER (line D) is high the unit is in a higher power state as compared to the state of the unit when POWER is low. As is also seen in FIG. 5, the timer (line C) <b>183</b> is initiated when the stage is reset (see lines B and C). Only when timer <b>183</b> times out is the power status of the unit changed to the low power state. The period of the timer is used to provide a few more cycles of the higher power status for the unit after execution of the power down command to allow the rest of the instructions that use the unit flush through the processor instruction pipeline.</p><p>When the output terminal of a register is asserted, the output, when received by the corresponding unit, has two effects. One effect is at the V<sub>t </sub>control, such as the control <b>181</b>. This has the effect of decreasing V<sub>t </sub>to the core unit <b>182</b> and consequently (and perhaps after some delay) reducing the threshold, increasing the power consumption and performance of the core unit <b>182</b>. In addition, when the register output is reset (goes low), this resets the timer <b>183</b> to initiate timing out its time period. The unit will remain in the higher power state until a power down command, addressed to the unit is decoded, which resets the Power Control Set line A. The decoded command is detected, resulting in addressing the associated unit to initiate the timer <b>183</b>. The reset nature of the expire output during timing by the timer has the effect at the OR gate <b>184</b> of masking the fact that the output of state <b>118</b> also becomes reset. Thus (line B) when the output of the stage <b>118</b> goes low, the unit <b>18</b> does not respond. It is not until the timer <b>183</b> expires and raises its expire output that the control <b>181</b> detects the reset nature of its input and reduces the power of the unit <b>182</b>.</p><p>FIG. 3 illustrates the steps implemented in the analysis function in order to recompile or modify a user application to include appropriate power up and power down commands or instructions. As shown in FIG. 3, the first step F<b>1</b> is to identify the population of functional units on the chip. The next step, F<b>2</b>, is to correlate the instruction repertoire with the functional units, i.e. which functional units are exercised on which instructions? Clearly, some functional units may be exercised by more than one instruction and typically one instruction will exercise multiple functional units. With the information provided in steps F<b>1</b> and F<b>2</b>, and with the user application available, D<b>1</b>, the analysis function then performs a series of operations for each of the functional units in the chip. The first of those operations is F<b>1</b>, a determination is made whether or not it is possible to identify code segment (either one or more) which exclusively use the unit where the definition of a code segment is that it has a single entrance and a single exit point with no external branches or jumps between the entrance and exit points. If code segments can be identified which exclusively use the unit, then step F<b>5</b> is performed to insert power commands to turn the unit on at the entry point and a power command to turn the unit off at the exit point. On the other hand, if it is not possible to identify a code segment or segments which exclusively use the unit, because of branching operations or other complex software functions, then step F<b>6</b> is performed to determine if that unit is ever used in the application. If the unit is never used in the application, then step F<b>8</b> is performed to add the unit to a list of units which are \u201calways off\u201d. On the other hand, if the unit is used in the application, then step F<b>7</b> is performed to add the unit to a list of units which are \u201calways on\u201d. At the completion of steps F<b>5</b>, F<b>7</b> or F<b>8</b>, step F<b>9</b> is performed to determine if there are additional units in the chip which have not yet been processed. If there are, processing loops back to F<b>3</b>, another unit is selected, and the previously described steps are repeated.</p><p>On the other hand, if all units have been processed, then step F<b>10</b> is performed which inserts initialization commands at the program start for always on and always off units. In particular, the initialization command for always off units would be power off. The initialization command at the program start for always on units would be power on. Finally, step F<b>11</b> is performed to insert a power off command, addressed to each unit in the chip, at the conclusion of the program.</p><p>Accordingly, it should be apparent that the user application is recompiled or modified so that the instruction sequence, at the conclusion of the operation, includes appropriate address power on and power off commands. The commands inserted at step F<b>5</b> each are addressed to the unit being processed. The commands inserted by reason of steps F<b>10</b> and F<b>11</b> are also addressed to specific units.</p><p>The specification describes only the preferred embodiments of the invention but it is to be understood that the invention is capable of use in various other combinations and environments and further that the invention is capable of changes or modifications. The embodiments described here are simply intended to explain the best modes known of practicing the invention and to enable others skilled in the art to utilize the invention in such, or other, embodiments and with the various modifications required by the particular applications or uses of the invention. Accordingly, this description is not intended to limit the invention to the form disclosed herein, rather the scope of the invention is to be determined by the claims attached hereto.</p><?DETDESC description=\"Detailed Description\" end=\"tail\"?></description>"}], "inventors": [{"first_name": "Alvar Antonio", "last_name": "Dean", "name": ""}, {"first_name": "Patrick Edward", "last_name": "Perry", "name": ""}, {"first_name": "Sebastian Theodore", "last_name": "Ventrone", "name": ""}], "assignees": [{"first_name": "", "last_name": "", "name": "INTERNATIONAL BUSINESS MACHINES CORPORATION"}, {"first_name": "", "last_name": "MICROSOFT TECHNOLOGY LICENSING, LLC", "name": ""}, {"first_name": "", "last_name": "MICROSOFT CORPORATION", "name": ""}, {"first_name": "", "last_name": "INTERNATIONAL BUSINESS MACHINES CORPORATION", "name": ""}], "ipc_classes": [{"primary": true, "label": "G06F   1/32"}], "locarno_classes": [], "ipcr_classes": [{"label": "G06F   1/32        20060101A I20051008RMUS"}, {"label": "G06F   9/45        20060101A I20051008RMEP"}, {"label": "G06F   9/30        20060101A I20060722RMEP"}, {"label": "G06F   9/38        20060101A I20060722RMEP"}], "national_classes": [{"primary": true, "label": "713300"}, {"primary": false, "label": "712E09032"}, {"primary": false, "label": "713322"}, {"primary": false, "label": "712E09062"}], "ecla_classes": [{"label": "G06F   9/30A8P"}, {"label": "G06F   8/4432"}, {"label": "G06F   1/32P5M"}, {"label": "G06F   1/32P5V"}, {"label": "Y02B60:12N"}, {"label": "G06F   1/32P5S"}, {"label": "G06F   1/32P5T"}, {"label": "Y02B60:12J4"}, {"label": "Y02B60:12N4"}, {"label": "Y02B60:12N2"}, {"label": "Y02B60:18B"}, {"label": "Y02B60:14D"}, {"label": "G06F   1/32P"}, {"label": "G06F   9/38P"}], "cpc_classes": [{"label": "G06F   1/3203"}, {"label": "G06F   8/4432"}, {"label": "G06F   9/3867"}, {"label": "G06F   9/30083"}, {"label": "G06F   8/4432"}, {"label": "Y02D  10/00"}, {"label": "G06F   1/3296"}, {"label": "G06F   1/3203"}, {"label": "G06F   1/3296"}, {"label": "G06F   1/329"}, {"label": "G06F   1/329"}, {"label": "G06F   9/30083"}, {"label": "G06F   9/3867"}, {"label": "G06F   1/3287"}, {"label": "G06F   1/3243"}, {"label": "Y02D  10/00"}, {"label": "G06F   1/3287"}, {"label": "G06F   1/3243"}], "f_term_classes": [], "legal_status": "Expired - Lifetime", "priority_date": "1999-04-06", "application_date": "1999-04-06", "family_members": [{"ucid": "US-6477654-B1", "titles": [{"lang": "EN", "text": "Managing VT for reduced power using power setting commands in the instruction stream"}]}]}