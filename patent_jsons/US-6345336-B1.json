{"patent_number": "US-6345336-B1", "publication_id": 72917026, "family_id": 11500030, "publication_date": "2002-02-05", "titles": [{"lang": "EN", "text": "Instruction cache memory includes a clock gate circuit for selectively supplying a clock signal to tag RAM to reduce power consumption"}], "abstracts": [{"lang": "EN", "paragraph_markup": "<abstract lang=\"EN\" load-source=\"patent-office\" mxw-id=\"PA50272521\"><p>An instruction cache memory (<b>12</b>) includes a clock gate circuit (<b>26</b>) for controlling the supply of a clock signal (CLK) to tag RAM (<b>22</b>). The clock gate circuit (<b>22</b>) supplies the clock signal (CLK) to tag RAM <b>22 </b>only when there is a movement in cache line for storing a word to be read out or a branch instruction is detected in a processor (<b>14</b>). As a result, power consumption of the tag RAM (<b>22</b>) can be reduced.</p></abstract>"}], "claims": [{"lang": "EN", "claims": [{"num": 1, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00001\" num=\"1\"><claim-text>1. An instruction cache memory comprising:</claim-text><claim-text>data RAM including a plurality of cache lines for storing a plurality of words which have consecutive memory addresses to output read-out data in response to an access address inputted from a processor; </claim-text><claim-text>tag RAM for storing data necessary for specifying said memory addresses of the words stored in said cache lines as tag addresses for each cache line of said data RAM, and outputting one of said tag addresses of corresponding one of said cache lines as a tag signal in response to said access address inputted from said processor; </claim-text><claim-text>a hit/miss judging circuit for comparing said tag signal outputted from said tag RAM with said access address from said processor to judge whether a word having said memory address corresponding to said access address is stored in said data RAM or not and output a result of the judgement as a hit/miss judging signal; and </claim-text><claim-text>a clock gate circuit for selectively supplying a clock signal to said tag RAM when the cache line for storing the word to be read out changes from one to another, or, a branch instruction is detected in said processor, and otherwise stop the supply of the clock signal to said tag RAM. </claim-text></claim>"}, {"num": 2, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00002\" num=\"2\"><claim-text>2. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00001\">claim 1</claim-ref> wherein whether said cache line for storing the word to be read out has changed from one to another is detected by monitoring a shifting bit which is a bit in the access address which changes upon movement from a bottom access address of one of said cache line to a top access address of a next cache line while the word is read out sequentially from said cache line.</claim-text></claim>"}, {"num": 3, "parent": 2, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00003\" num=\"3\"><claim-text>3. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00002\">claim 2</claim-ref> wherein whether the branch instruction has been detected or not in the processor is judged from a branch instruction detecting signal outputted from the processor.</claim-text></claim>"}, {"num": 4, "parent": 3, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00004\" num=\"4\"><claim-text>4. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00003\">claim 3</claim-ref> wherein said hit/miss judging circuit outputs a hit/miss judging signal indicating a cache hit while the supply of the clock signal to said tag RAM is stopped.</claim-text></claim>"}, {"num": 5, "parent": 4, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00005\" num=\"5\"><claim-text>5. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00004\">claim 4</claim-ref> wherein said clock gate includes:</claim-text><claim-text>a flip-flop circuit supplied with said shifting bit; </claim-text><claim-text>an EXOR circuit supplied with an output signal from said flip-flop and said shifting bit; </claim-text><claim-text>an OR circuit supplied with an output signal from said EXOR circuit and said branch instruction detecting signal; and </claim-text><claim-text>an AND circuit supplied with an output signal from said OR circuit and a basic clock signal which changes between HIGH and LOW levels in each clock cycle repeatedly in all clock cycles, and outputting an output signal as said clock signal to said tag RAM. </claim-text></claim>"}, {"num": 6, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00006\" num=\"6\"><claim-text>6. An instruction cache memory which is supplied with an access address of n bits from bit n-<b>1</b> to bit <b>0</b> and a basic clock signal which changes between HIGH and LOW levels in each clock cycle repeatedly in all clock cycles and outputs a hit/miss judging signal of one bit and a read-out data of m bits, comprising:</claim-text><claim-text>data RAM including a plurality of cache lines for storing a plurality of words which have a number of consecutive memory addresses which can be expressed by p bits and having a memory size which can be expressed by q bits, said data RAM being supplied with low order bits which are bit q-<b>1</b> through bit <b>0</b> among n bits of said access address, and outputting said read-out data of m bits; </claim-text><claim-text>tag RAM for storing high order bits which are bit n-<b>1</b> through bit q among n bits of the memory address of a plurality of words stored in each cache line as a tag address for each cache line, said tag RAM being supplied with bit q-<b>1</b> to bit p among n bits of said access address and outputting said tag address stored in association with a cache line specified by bit q-<b>1</b> through bit p as a tag signal; </claim-text><claim-text>a hit/miss judging circuit supplied with said tag signal outputted from said tag RAM and high order bits which are bit n-<b>1</b> through bit q among n bits of said access address to compare said tag signal with said bit n-<b>1</b> through bit q and output a hit/miss judging signal of one bit which indicates whether a word having said memory address corresponding to said access address is stored in said data RAM or not; and </claim-text><claim-text>a clock gate circuit for selectively supplying a clock signal as a supplied clock signal to said tag RAM when the cache line for storing the word to be read out changes from one to another, or, a branch instruction is detected in said processor, and otherwise stopping the supply of said supplied clock signal to said tag RAM. </claim-text></claim>"}, {"num": 7, "parent": 6, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00007\" num=\"7\"><claim-text>7. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00006\">claim 6</claim-ref> wherein whether said cache line for storing a word to be read out has changed from one to another is detected by whether bit p in n bits of said access address has changed or not.</claim-text></claim>"}, {"num": 8, "parent": 7, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00008\" num=\"8\"><claim-text>8. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00007\">claim 7</claim-ref> wherein whether the branch instruction has been detected or not in the processor is judged from a branch instruction detecting signal of one bit outputted from the processor.</claim-text></claim>"}, {"num": 9, "parent": 8, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00009\" num=\"9\"><claim-text>9. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00008\">claim 8</claim-ref> wherein said hit/miss judging circuit outputs a hit/miss judging signal indicating a cache hit while the supply of the clock signal to said tag RAM is stopped.</claim-text></claim>"}, {"num": 10, "parent": 9, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00010\" num=\"10\"><claim-text>10. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00009\">claim 9</claim-ref> wherein said clock gate includes:</claim-text><claim-text>a flip-flop circuit supplied with bit p among n bits of said access address; </claim-text><claim-text>an EXOR circuit supplied with an output signal from said flip-flop and said bit p among n bits of said access address; </claim-text><claim-text>an OR circuit supplied with an output signal from said EXOR circuit and said branch instruction detecting signal; and </claim-text><claim-text>an AND circuit supplied with an output signal from said OR circuit and said basic clock signal, and outputting an output signal as said clock signal to said tag RAM. </claim-text></claim>"}, {"num": 11, "parent": 10, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00011\" num=\"11\"><claim-text>11. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00010\">claim 10</claim-ref> wherein said hit/miss judging circuit includes:</claim-text><claim-text>a comparator supplied with said tag signal from said tag RAM and high order bits which are bit n-i through bit q among n bits of said access address to compare said tag signal with said high order bits, bit n-f through bit q, among n bits of said access address and output a comparison result signal; and </claim-text><claim-text>a latch circuit supplied with said comparison result signal from said comparator and said output signal from said OR circuit in said clock gate circuit to hold a status of said comparison result signal when the output signal from said OR circuit becomes HIGH and to output it as said hit/miss judging signal. </claim-text></claim>"}, {"num": 12, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00012\" num=\"12\"><claim-text>12. An instruction cache memory of an x-way set associative mapping type which is supplied with an access address of n bits from bit n-<b>1</b> through bit <b>0</b> and a basic clock signal which changes between HIGH and LOW levels in each clock cycle repeatedly in all clock cycles and outputs x hit/miss judging signals of one bit and one read-out data of m bits, said cache memory including x basic units each outputting one of said hit/miss judging signal of one bit and one unit read-out data of m bits, each said basic unit comprising:</claim-text><claim-text>data RAM including a plurality of cache lines for storing a plurality of words having a number of consecutive memory addresses which can be expressed by p bits and having a memory size which can be expressed by q-x-<b>1</b> bits, said data RAM being supplied low order bits which are bit q-x through bit <b>0</b> among n bits of said access address, and outputting said unit read-out data of m bits; </claim-text><claim-text>tag RAM for storing high order bits which are bit n-<b>1</b> through bit q-x-<b>1</b> among n bits of the memory address of a plurality of words stored in each cache line as a tag address for each cache line, said tag RAM being supplied with bit q-x through bit p among n bits of said access address and outputting said tag address stored in association with a cache line specified by bit q-x through bit p as a tag signal; </claim-text><claim-text>a hit/miss judging circuit supplied with said tag signal outputted from said tag RAM and high order bits which are bit n-<b>1</b> through bit q-x-<b>1</b> among n bits of said access address to compare said tag signal with bit n-<b>1</b> through bit q-x-<b>1</b> and output a hit/miss judging signal of one bit which indicates whether a word having said memory address corresponding to said access address is stored in said data RAM or not; and </claim-text><claim-text>a clock gate circuit for selectively supplying a clock signal as a supplied clock signal to said tag RAM when the cache line for storing the word to be read out changes from one to another, or, a branch instruction is detected in said processor, and otherwise stopping the supply of said supplied clock signal to said tag RAM, </claim-text><claim-text>wherein said instruction cache memory further comprises: </claim-text><claim-text>a multiplexer supplied with each said unit read-out data outputted from each said basic unit and each said hit/miss judging signal, said multiplexer outputting said unit read-out data outputted from one of said basic units which outputs said hit/miss judging signal indicating that the word having the memory address corresponding to said access address is store in said data RAM thereof as said read-out data to said processor. </claim-text></claim>"}, {"num": 13, "parent": 12, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00013\" num=\"13\"><claim-text>13. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00012\">claim 12</claim-ref> wherein whether said cache line for storing a word to be read out has changed from one to another is detected by whether bit p in n bits of said access address has changed or not.</claim-text></claim>"}, {"num": 14, "parent": 13, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00014\" num=\"14\"><claim-text>14. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00013\">claim 13</claim-ref> wherein whether the branch instruction has been detected or not in the processor is judged from a branch instruction detecting signal of one bit outputted from the processor.</claim-text></claim>"}, {"num": 15, "parent": 14, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00015\" num=\"15\"><claim-text>15. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00014\">claim 14</claim-ref> wherein said hit/miss judging circuit outputs a hit/miss judging signal indicating a cache hit while the supply of the clock signal to said tag RAM is stopped.</claim-text></claim>"}, {"num": 16, "parent": 15, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00016\" num=\"16\"><claim-text>16. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00015\">claim 15</claim-ref> wherein said clock gate includes:</claim-text><claim-text>a flip-flop circuit supplied with bit p among n bits of said access address; </claim-text><claim-text>an EXOR circuit supplied with an output signal from said flip-flop and said bit p among n bits of said access address; </claim-text><claim-text>an OR circuit supplied with an output signal from said EXOR circuit and said branch instruction detecting signal; and </claim-text><claim-text>an AND circuit supplied with an output signal from said OR circuit and said basic clock signal, and outputting an output signal as said clock signal to said tag RAM. </claim-text></claim>"}, {"num": 17, "parent": 16, "type": "dependent", "paragraph_markup": "<claim id=\"US-6345336-B1-CLM-00017\" num=\"17\"><claim-text>17. The instruction cache memory according to <claim-ref idref=\"US-6345336-B1-CLM-00016\">claim 16</claim-ref> wherein said hit/miss judging circuit includes:</claim-text><claim-text>a comparator supplied with said tag signal from said tag RAM and high order bits which are bit n-<b>1</b> through bit q-x-<b>1</b> among n bits of said access address to compare said tag signal with said high order bits, bit n-<b>1</b> through bit q-x-<b>1</b>, among n bits of said access address and output a comparison result signal; and </claim-text><claim-text>a latch circuit supplied with said comparison result signal from said comparator and said output signal from said OR circuit in said clock gate circuit to hold said comparison result signal of a status taken when the output signal from said OR circuit becomes HIGH and output it as said hit/miss judging signal.</claim-text></claim>"}]}], "descriptions": [{"lang": "EN", "paragraph_markup": "<description lang=\"EN\" load-source=\"patent-office\" mxw-id=\"PDES53515381\"><?BRFSUM description=\"Brief Summary\" end=\"lead\"?><h4>BACKGROUND OF THE INVENTION</h4><p>1. Field of the Invention</p><p>This invention relates to an instruction cache memory, and in particular, relates to the instruction cache memory designed to reduce the power consumption.</p><p>2. Description of the Related Background Art</p><p>Recently, computer systems, in general, are equipped with an instruction cache memory for the purpose of decreasing the memory access latency. FIG. 7 is a diagram which shows a structure of an instruction cache memory of a conventional direct mapping type.</p><p>It will be apparent from FIG. 7 that the instruction cache memory <b>100</b> is made up of data RAM <b>102</b>, tag RAM <b>104</b> and comparator <b>106</b>. An access address is inputted to the instruction cache memory <b>100</b> from a fetch counter provided in a processor. Depending upon the size and structure of the instruction cache memory <b>100</b>, part of the access address is inputted to the data RAM <b>102</b>, and part thereof is inputted to the tag RAM <b>104</b>. This conventional technology assumes the use of an instruction cache memory <b>100</b> in which data RAM capacity is 1 K words, one cache line size is 8 words, and total number of cache lines is 128. Here, one word is the unit of a single instruction, and it is assumed to be 32 bits in this conventional technology.</p><p>In this case, among the access address of 16 bits from the fetch counter, 10 bits totaling low order bits bit<b>9</b> through bit<b>0</b> are inputted to the data RAM, 7 bits totaling bit<b>9</b> through bit<b>3</b> are inputted to the tag RAM <b>104</b>, and 6 bits totaling high order bits bit<b>15</b> to bit<b>10</b> are inputted to the comparator <b>106</b>. If these bits are expressed in general formulas, those inputted to the data RAM <b>102</b> are expressed as bit q-<b>1</b>\u02dcbit <b>0</b>, those inputted to the tag RAM <b>104</b> are expressed as bit q-<b>1</b>\u02dcbit p, and those inputted to the comparator <b>106</b> are expressed as bit n-<b>1</b>\u02dcbit q. In FIG. 7, n (number of bits of the access address)=16, p (number of bits necessary for specifying an address in a single cache line)=3, and q (number of bits necessary for specifying an address in the data RAM <b>102</b>)=10. The data RAM <b>102</b> and the tag RAM <b>104</b> are also supplied with a clock signal CLK.</p><p>The tag RAM <b>104</b> output an access address, which a cache line assigned to the address expressed by bit <b>9</b>\u02dcbit <b>3</b> holds, as a tag signal of 6 bits in total. Also outputted is a status bit of one bit which indicates whether the corresponding cache line has ever taken data from main memory at least once. These tag signal and status bit are inputted into the comparator <b>106</b>. The comparator <b>106</b> compares the received tag signal of 6 bits with 6 bits totaling bit<b>15</b>\u02dcbit<b>10</b> of the access address. When they coincide, it is a hit. When they do not coincide, it is a miss. Based on the result of the comparison, the comparator <b>106</b> outputs a hit/miss judging signal to the processor.</p><p>In parallel with the operation of the comparator <b>106</b>, data is read out from the data RAM <b>102</b> and supplied as an instruction to the processor. Whether or not the processor takes this instruction supplied from the data RAM <b>102</b> is determined by whether the hit/miss judging signal of the comparator <b>106</b> indicates a cache hit or cache miss. That is, in case of a cache hit, the processor takes this data as an instruction, and in case of a cache miss, the processor does not take this data.</p><p>In the cache memory <b>100</b> shown in FIG. 7, two memories, namely, data RAM <b>102</b> and tag RAM <b>104</b>, operate upon every time when it is accessed. Therefore, the cache memory <b>100</b> involved the problem that it occupied a large part of hardware and consumed large power.</p><h4>SUMMARY OF THE INVENTION</h4><p>It is therefore an object of the invention to reduce power consumption of an instruction cache memory. More specifically, the object of the invention lies in alleviating operation of tag RAM in the instruction cache memory and thereby reduce power consumption by the tag RAM.</p><p>According to an aspect of the invention, there is provided an instruction cache memory comprising:</p><p>data RAM including a plurality of cache lines for storing a plurality of words which have consecutive memory addresses to output read-out data in response to an access address inputted from a processor;</p><p>tag RAM for storing data necessary for specifying the memory addresses of the words stored in the cache lines as tag addresses for each cache line of the data RAM, and outputting one of the tag addresses of corresponding one of the cache lines as a tag signal in response to the access address inputted from the processor;</p><p>a hit/miss judging circuit for comparing the tag signal outputted from the tag RAM with the access address from the processor to judge whether a word having the memory address corresponding to the access address is stored in the data RAM or not and output a result of the judgement as a hit/miss judging signal; and</p><p>a clock gate circuit for supplying a clock signal to the tag RAM only when the cache line for storing the word to be read out changes from one to another, and/or, a branch instruction is detected in the processor, and otherwise stop the supply of the clock signal to the tag RAM.</p><p>According to a further aspect of the invention, there is provided an instruction cache memory which is supplied with an access address of n bits from bit n-<b>1</b> to bit <b>0</b> and a basic clock signal which changes between HIGH and LOW levels in each clock cycle repeatedly in all clock cycles and outputs a hit/miss judging signal of one bit and a read-out data of m bits, comprising:</p><p>data RAM including a plurality of cache lines for storing a plurality of words which have a number of consecutive memory addresses which can be expressed by p bits and having a memory size which can be expressed by q bits, the data RAM being supplied with low order bits which are bit q-<b>1</b> through bit <b>0</b> among n bits of the access address, and outputting the read-out data of m bits;</p><p>tag RAM for storing high order bits which are bit n-<b>1</b> through bit q among n bits of the memory address of a plurality of words stored in each cache line as a tag address for each cache line, the tag RAM being supplied with bit q-<b>1</b> to bit p among n bits of the access address and outputting the tag address stored in association with a cache line specified by bit q-<b>1</b> through bit p as a tag signal;</p><p>a hit/miss judging circuit supplied with the tag signal outputted from the tag RAM and high order bits which are bit n-<b>1</b> through bit q among n bits of the access address to compare the tag signal with the bit n-<b>1</b> through bit q and output a hit/miss judging signal of one bit which indicates whether a word having the memory address corresponding to the access address is stored in the data RAM or not; and</p><p>a clock gate circuit for supplying a clock signal as a supplied clock signal to the tag RAM only when the cache line for storing the word to be read out changes from one to another, and/or, a branch instruction is detected in the processor, and otherwise stopping the supply of the supplied clock signal to the tag RAM.</p><p>According to a still further aspect of the invention, there is provided an instruction cache memory of an x-way set associative mapping type which is supplied with an access address of n bits from bit n-<b>1</b> through bit <b>0</b> and a basic clock signal which changes between HIGH and LOW levels in each clock cycle repeatedly in all clock cycles and outputs x hit/miss judging signals of one bit and one read-out data of m bits, the cache memory including x basic units each outputting one of the hit/miss judging signal of one bit and one unit read-out data of m bits, each basic unit comprising:</p><p>data RAM including a plurality of cache lines for storing a plurality of words having a number of consecutive memory addresses which can be expressed by p bits and having a memory size which can be expressed by q-x-<b>1</b> bits, the data RAM being supplied low order bits which are bit q-x through bit <b>0</b> among n bits of the access address, and outputting the unit read-out data of m bits;</p><p>tag RAM for storing high order bits which are bit n-<b>1</b> through bit q-x-<b>1</b> among n bits of the memory address of a plurality of words stored in each cache line as a tag address for each cache line, the tag RAM being supplied with bit q-x through bit p among n bits of the access address and outputting the tag address stored in association with a cache line specified by bit q-x through bit p as a tag signal;</p><p>a hit/miss judging circuit supplied with the tag signal outputted from the tag RAM and high order bits which are bit n-<b>1</b> through bit q-x-<b>1</b> among n bits of the access address to compare the tag signal with bit n-<b>1</b> through bit q-x-<b>1</b> and output a hit/miss judging signal of one bit which indicates whether a word having the memory address corresponding to the access address is stored in the data RAM or not; and</p><p>a clock gate circuit for supplying a clock signal as a supplied clock signal to the tag RAM only when the cache line for storing the word to be read out changes from one to another, and/or, a branch instruction is detected in the processor, and otherwise stopping the supply of the supplied clock signal to the tag RAM,</p><p>wherein the instruction cache memory further comprises:</p><p>a multiplexer supplied with each unit read-out data outputted from each basic unit and each hit/miss judging signal, the multiplexer outputting the unit read-out data outputted from one of the basic units which outputs the hit/miss judging signal indicating that the word having the memory address corresponding to the access address is store in the data RAM thereof as the read-out data to the processor.</p><?BRFSUM description=\"Brief Summary\" end=\"tail\"?><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"lead\"?><h4>BRIEF DESCRIPTION OF THE DRAWINGS</h4><p>FIG. 1 is a diagram showing a structure of an instruction cache memory of a direct mapping type according to an embodiment of the invention;</p><p>FIG. 2 is a diagram showing a logic structure of tag RAM and data RAM of a direct mapping type;</p><p>FIG. 3 is a diagram showing a structure of a computer system having the instruction cache memory according to the invention;</p><p>FIG. 4 is a timing chart for explaining operations of the instruction cache memory according to the embodiment of the invention (in case that the cache line changes upon a change of bit <b>3</b> in an access address);</p><p>FIG. 5 is a timing chart for explaining operations of the instruction cache memory according to the embodiment of the invention (in case that the cache line changes upon detection of a branch instruction in the processor);</p><p>FIG. 6 is a diagram showing an example of application of the invention to an instruction cache memory of a set associative mapping type; and</p><p>FIG. 7 is a diagram showing a structure of a conventional instruction cache memory.</p><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"tail\"?><?DETDESC description=\"Detailed Description\" end=\"lead\"?><h4>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</h4><p>In the instruction cache memory according to the embodiment shown here, a signal of two bits in total, including one bit indicating whether any branch instruction has been generated or not and one bit indicating whether any cache line is changed or not, are used, and by recognizing that the cache line is not changed, a cache hit is confirmed. When a cache hit is confirmed, access to the tag RAM and operation of the comparator are interrupted for the purpose of reducing power consumption of the instruction cache memory. Explanation is made below in greater detail.</p><p>FIG. 1 is a diagram showing a construction of the instruction cache memory according to the embodiment. FIG. 2 is a diagram showing a logic structure of tag RAM and data RAM of a direct mapping type. FIG. 3 is a structure of a computer system using the instruction cache memory according to this embodiment.</p><p>Referring to FIG. 3, the computer system according to the embodiment includes a main memory <b>10</b>, instruction cache memory <b>12</b> and processor <b>14</b>.</p><p>The processor <b>14</b> outputs to the instruction cache memory <b>12</b> an access address of 16 bits and a branch instruction detecting signal of one bit which indicates whether a branch instruction has been processed or not. The \u201cbranch instruction\u201d is a generic name of a jump instruction, instruction for calling out a sub routine and interrupt instruction or other instruction which causes the fetch counter in the processor <b>14</b> to jump from one to another. The instruction cache memory <b>12</b> outputs to the processor <b>14</b> a read-out data of 32 bits as an instruction and a hit/miss judging signal of one bit which indicates whether a cache hit is occurred in the instruction cache memory <b>12</b> or not.</p><p>The instruction cache memory <b>12</b> outputs to the main memory <b>10</b> an access address of 16 bits. The main memory <b>10</b> outputs a data of 32 bits as an instruction to the instruction cache memory <b>12</b>. Thus, when a cache miss is occurred in the instruction cache memory <b>12</b>, necessary data can be taken from the external main memory <b>10</b>. The instruction cache memory <b>12</b> also includes a controller necessary for this take-in operation.</p><p>FIG. 1 is a diagram which shows an interior structure of the instruction cache memory <b>12</b> when employing a direct mapping system.</p><p>Referring to FIG. 1, the instruction cache memory <b>12</b> includes a data RAM <b>20</b>, tag RAM <b>22</b>, hit/miss judging circuit <b>24</b> and clock gate circuit <b>26</b>. An access address is inputted to the instruction cache memory <b>12</b> from a fetch counter provided in the processor <b>14</b>. In the instruction cache memory <b>12</b> shown here, the data RAM capacity is 1 K words, one cash line size is 8 words, and the total number of cache lines is 128. Here, one word is the unit of a single instruction, and it is assumed to be 32 bits in this embodiment.</p><p>In this case, among the access address of 16 bits from the fetch counter, 10 bits totaling low order bits bit<b>9</b> through bit<b>10</b> are inputted to the data RAM <b>20</b>, 7 bits totaling bit<b>9</b> through bit<b>3</b> are inputted to the tag RAM <b>22</b>, 6 bits totaling high order bits bit<b>15</b> to bit<b>10</b> are inputted to the hit/miss judging circuit <b>24</b>, and 1 bit of bit<b>3</b> is inputted to clock gate circuit <b>26</b>. If these bits are expressed in general formulas, those inputted to the data RAM <b>20</b> are expressed as bit q-<b>1</b>\u02dcbit <b>0</b>, those inputted to the tag RAM <b>22</b> are expressed as bit q-<b>1</b>\u02dcbit p, those inputted to the hit/miss judging circuit <b>24</b> are expressed as bit n-<b>1</b>\u02dcbit q, and it inputted to clock gate circuit <b>26</b> is expressed as bit p. In this embodiment, n (number of bits of the access address)=16, p (number of bits necessary for specifying an address in a single cache line)=3, and q (number of bits necessary for specifying an address in the data RAM <b>102</b>)=10.</p><p>As shown in FIG. 2, in the data RAM <b>20</b>, 7 bits in total of bit<b>9</b> through bit<b>3</b> definitely determine in which cache line the word designated by the access address should be stored. Further, 3 bits totaling bit<b>2</b>\u02dcbit<b>10</b> determine an address in the cache line, and specify the position for storing the word designated by the access address. Data of one word at the position specified in this manner are outputted as read-out data of 32 bits from the data RAM <b>20</b>.</p><p>The tag RAM <b>22</b> holds, for each cache line, data of 6 bits necessary for specifying the address of a word stored in the cache line. The data of 6 bits correspond to high order bits, bit<b>15</b>\u02dcbit<b>10</b>, of the access address. Inputted to the tag RAM <b>22</b> are 7 bits (2<sup>7</sup>=128) totaling bit<b>9</b>\u02dcbit<b>3</b> in the access address, and a cache line which should store the word designated by the access address is determined definitely. Then, the tag RAM <b>22</b> outputs the data of 6 bits stored in the definitely determined cache line as a tag signal. The tag signal corresponds to high order bits, bit<b>15</b>\u02dcbit<b>10</b>, of the access address as explained above.</p><p>In the tag RAM <b>22</b>, one bit is assigned to each cache line as a status bit which indicates whether the cache line has ever taken data from the main memory <b>10</b> at least once. In this embodiment, when data has never been taken into the cache line from the main memory <b>10</b>, such as immediately after turning on the power source, all status bits are 0. And, when the cache line is specified by the processor <b>14</b> and data is taken from the main memory <b>10</b>, the status bit corresponding to the cache line is set in 1. When the tag RAM <b>22</b> outputs the tag signal, one of the status bits corresponding to the very cache line is also outputted to the hit/miss judging circuit <b>24</b>.</p><p>As shown in FIG. 1, the data RAM <b>20</b> is directly supplied with a clock signal CLK. The tag RAM is supplied with the clock signal CLK through a clock gate circuit <b>26</b>. The clock gate circuit <b>26</b> supplies the tag RAM <b>22</b> with the clock signal CLK only at a specific timing explained later.</p><p>A bit, bit<b>3</b>, inputted to the clock gate circuit <b>26</b> is inputted to both a flip-flop circuit <b>30</b> and an EXOR circuit <b>32</b>. The EXOR circuit <b>32</b> is also supplied with a signal SG<b>1</b> outputted from the flip-flop circuit <b>30</b>. The flip-flop circuit <b>30</b> is used to hold the last value of bit<b>3</b>. A signal SG<b>2</b> outputted from the EXOR circuit <b>32</b> is inputted to an OR circuit <b>34</b>. The OR circuit <b>34</b> also receives a branch instruction detecting signal as another input thereof. A signal SG<b>3</b> outputted from the OR circuit <b>34</b> is inputted to an AND circuit <b>36</b> and a hit/miss judging circuit <b>24</b>. Also inputted to the AND circuit <b>36</b> is the clock signal CLK. An output signal SG<b>4</b> of the AND circuit <b>36</b> is inputted to the tag RAM <b>22</b>. Thus the clock gate circuit <b>26</b> is made up of the flip-flop circuit <b>30</b>, EXOR circuit <b>32</b>, OR circuit <b>34</b> and AND circuit <b>36</b>. That is, the clock gate circuit <b>26</b> is configured to supply the clock signal CLK to the tag RAM <b>22</b> only when a branch instruction is detected in the processor <b>14</b> and the branch instruction detecting signal becomes HIGH, or when bit<b>3</b> in the access address changes and the cache line in the data RAM <b>20</b> changes.</p><p>As explained above, outputted from the tag RAM <b>22</b> is a tag signal of 6 bits in total for the address held in a corresponding cache line in direct mapping. Also outputted is the status bit indicating whether the corresponding cache line has ever taken data from the main memory <b>10</b> at least once. These tag signal and status bit are inputted to the hit/miss judging circuit <b>24</b>.</p><p>The hit/miss judging circuit <b>24</b> includes a comparator <b>40</b> and a latch circuit <b>42</b>. The comparator <b>40</b> is supplied with the tag signal of 6 bits, status bit of one bit, and 6 bits of bit<b>15</b>\u02dcbit<b>10</b> as a part of the access address. The comparator <b>40</b> compares the inputted tag signal of 6 bits with 6 bits, bit<b>15</b>\u02dcbit<b>10</b>, of the access address. If the comparison results in confirming coincidence between them, it is a cache hit. If they do not coincide, it is a cache miss. The comparator <b>40</b> used in this embodiment outputs an output signal SG<b>5</b> which is LOW upon a cache hit and HIGH upon a cache miss. Consequently, in the embodiment shown here, when the status bit is 0, namely, if data has never been taken in the corresponding cache line, the comparator <b>40</b> outputs a HIGH output signal SG<b>5</b> indicating the cache miss without the above-mentioned comparison of 6 bits.</p><p>The output signal SG<b>5</b> from the comparator <b>40</b> and the output signal SG<b>3</b> from the OR circuit <b>24</b> are inputted to the latch circuit <b>42</b>. The latch circuit <b>42</b> holds the status of the output signal SG<b>5</b> appearing upon the output signal SG<b>3</b> becoming HIGH until the output signal SG<b>3</b> becomes HIGH again, and outputs it as the hit/miss judging signal. And the latch circuit <b>42</b> outputs literally the value of the output signal SG<b>5</b> inputted then as the hit/miss judging signal, while the output signal SG<b>3</b> is high. This hit/miss judging signal is inputted to the processor <b>14</b>. In this embodiment, the hit/miss judging signal becomes LOW upon a cache hit and HIGH upon a cache miss.</p><p>In parallel with these operations, data is read out from the data RAM <b>20</b> and supplied as an instruction to the processor <b>14</b>. Whether the instruction supplied from the data RAM <b>20</b> is taken or not is determined depending upon the hit/miss judging signal. That is, when the hit/miss judging signal indicates a cache hit, the processor <b>14</b> takes the data in as an instruction. When the hit/miss judging signal indicates a cache miss, the processor <b>14</b> does not take this data in.</p><p>Next explained are operations of the cache memory with reference to the timing charts shown in FIGS. 4 and 5. FIG. 4 is the timing chart which shows the timing of a change in cache line and bit<b>3</b> in the access address changes. FIG. 5 is the timing chart which shows the timing of a change in cache line because of a branch instruction detected.</p><p>First referring to FIG. 4, the timing of a change in cache line and a change of bit<b>3</b> in the access address. As shown in FIG. 4, assume that bit<b>3</b> changes from LOW to HIGH at time t<b>1</b>. That is, assume that bit<b>3</b> in the access address changes from 0 to 1. This means that the cache line in the data RAM <b>20</b> storing a word to be read out moves from a certain one to the next one as shown in FIG. <b>2</b>. This is because one cache line is made up of 8 words in this embodiment, and it can be considered that, in a range where bit<b>2</b>\u02dcbit<b>0</b> change while an instruction is read sequentially, the word to be read out is stored in the same cache line. Such a change of bit<b>3</b> while an instruction is read sequentially means that reading of words stored in one cache line has been finished and reading of words to be stored in the next cache line has been started. Therefore, whether the cache line to store a word to be read out has moved to the next cache line or not can be known by monitoring bit<b>3</b> alone.</p><p>As shown in FIG. 4, the output signal SG<b>1</b> from the flip-flop circuit <b>30</b> changes to HIGH at time t<b>2</b> later by one clock cycle than time t<b>1</b> where bit<b>3</b> changes to HIGH. Therefore, the output signal SG<b>2</b> from the EXOR circuit <b>32</b> becomes HIGH in the period between time t<b>1</b> and time t<b>2</b>. In FIG. 4 assuming that no branch instruction is detected, the branch instruction detecting signal remains LOW.</p><p>In the period from time t<b>1</b> to time t<b>2</b>, the OR circuit <b>34</b> supplied with the HIGH output signal SG<b>2</b> outputs a HIGH output signal SG<b>3</b>. Therefore, the output signal SG<b>4</b> is output from the AND circuit <b>36</b> for only one clock cycle. Based on the output signal SG<b>4</b> of one clock cycle, the tag RAM <b>22</b> is activated to output a tag signal of 6 bits to the hit/miss detecting circuit <b>24</b>. That is, in any period other than the period from time t<b>1</b> to time t<b>2</b>, the supply of the clock to the tag RAM <b>22</b> interrupts. Therefore, the tag signal is valid only for the period of the latter half clock cycle in between time t<b>1</b> and time t<b>2</b>, and invalid in the other periods. Output signals SG<b>2</b>, SG<b>3</b> and SG<b>4</b> are slightly behind the clock signal CLK due to a delay in operation of the logic circuit.</p><p>Next referring to FIG. 5, explanation is made about the timing of a change in cache line upon detection of a branch instruction in the processor <b>14</b>.</p><p>As shown in FIG. 5 assuming that bit<b>3</b> does not change, output signal SG<b>1</b> and SG<b>2</b> remain LOW. And at time t<b>1</b>, a branch instruction is detected in the processor <b>14</b>, and the branch instruction detecting signal changes from LOW to HIGH. This branch instruction detecting signal maintains the HIGH level only for one clock cycle. Therefore, at time t<b>2</b>, the branch instruction detecting signal changes from HIGH to LOW.</p><p>The branch instruction detecting signal changed to HIGH at time t<b>1</b> is inputted to the OR circuit <b>34</b>. Therefore, the OR circuit <b>34</b> outputs a HIGH output signal SG<b>3</b> in the period between time t<b>1</b> to time t<b>2</b>. The AND circuit <b>36</b> supplied with this output signal SG<b>3</b> supplies the output signal SG<b>4</b> for only one clock cycle between time t<b>1</b> and time t<b>2</b>. Based on the output signal SG<b>4</b> of one clock cycle, the tag RAM <b>22</b> is activated to output the tag signal of 6 bits to the hit/miss judging circuit <b>24</b>. That is, in the periods other than the period from time t<b>1</b> to time t<b>2</b>, supply of the clock to the tag RAM <b>22</b> interrupts. Therefore, the tag signal is valid only for the latter half clock cycle in between time t<b>1</b> and time t<b>2</b>, and invalid in the other periods. Output signals SG<b>3</b> and SG<b>4</b> are slightly behind the clock signal CLK due a delay in operation of the logic circuit.</p><p>As explained above, since the instruction cache memory <b>12</b> according to the embodiment is configured that the clock signal CLK is supplied to the tag RAM <b>22</b> only when the cache line in the data RAM <b>20</b> for storing a word to be read out changes from one to another, power consumption in the instruction cache memory <b>12</b> can be reduced. In greater detail, since the clock signal CLK is supplied to the tag RAN <b>22</b> only when bit<b>3</b> in the access address from the processor <b>14</b> changes or the branch instruction detecting signal from the processor becomes HIGH, power consumption can be reduced so much as the supply of the clock signal CLK is stopped in the other cases.</p><p>This is based on the nature of instructions of computers, namely, that fetch counters are counted up one by one when an instruction is not a branch instruction. Therefore, if it is in a cache line of 8 words, it can be considered that the word of the next access address is also stored in the data RAN <b>20</b>. Therefore, as long as the word stored in one cache line is read out, a cache hit can be recognized without activating the tag RAM <b>22</b>. Further, it is every 8 words that a word to be read out moves beyond a cache line of 8 words to the next cache line. Therefore, only by monitoring whether there is any change in bit<b>3</b> of the access address, namely, the lowest bit inputted to the tag RAM <b>22</b>, it can be known whether the cache line for storing a word to be read out has moved to the next cache line or not. If it moves to the next cache line, it is not known whether the word of the access address is stored in the cache line or not, and the tag RAM <b>22</b> has to be activated to judge whether this is a cache hit or not. Therefore, when there is a change in bit<b>3</b>, the clock signal CLK has to be supplied to the tag RAM <b>22</b>.</p><p>In the case where a branch instruction is detected in the processor <b>14</b>, the branch instruction detecting signal becomes HIGH. When such a branch instruction is executed, the value of the fetch counter jumps to the target access address. Therefore, it is not known whether a word of the jumped access address is stored in the data RAM <b>20</b> or not. Then, when a branch instruction is detected, it is necessary to supply the clock signal CLK to the tag RAM <b>22</b> and thereby activate the tag RAM <b>22</b> to judge whether it is a cache hit or not.</p><p>Except for the cases where bit<b>3</b> in the access address from the processor <b>14</b> and/or the branch instruction detecting signal from the processor is HIGH, it is apparent that a word as an instruction to be read is stored in the data RAM <b>20</b>. Therefore, without the need for activating the tag RAM <b>22</b>, it is sufficient to output from the latch circuit <b>42</b> the hit/miss judging signal indicating the occurrence of a cache hit. And, since this hit/miss judging signal is LOW, data read out from the data RAM <b>20</b> is taken into the processor <b>14</b>.</p><p>Moreover, since the branch instruction detecting signal from the processor <b>14</b> is one used in typical processors, the instruction cache memory <b>12</b> can be realized without changing the design of the processor. That is, a typical processor <b>14</b> uses a selection signal which indicates whether the content of the fetch counter in the processor <b>14</b> should be an incremental value of the last fetch counter or a branch address. Therefore, this selection signal can be used as the branch instruction detecting signal according to this embodiment.</p><p>The invention is not limited to the embodiment explained above but can be modified in various modes. For example, although one word is assumed to be 32 bits in the above embodiment, one word may be 16 bits, for example. Further, the number of bits of an access address, memory size of the data RAM <b>20</b> and number of words in each cache line are not limited to those explained with the embodiment.</p><p>Furthermore, although the above embodiment has been explained about the instruction cache memory of a direct mapping type, the invention is similarly applicable also to an instruction cache memory of a set associative mapping type or a full associative mapping type.</p><p>FIG. 6 is a diagram showing a structure of an instruction cache memory of a 2-way set associative mapping type using the invention. As shown in FIG. 6, the instruction cache memory <b>12</b>\u2032 has, in its general aspect, a structure combining two sets of instruction cache memories <b>12</b> of a direct mapping type. The memory size of the data RAM <b>20</b><i>a </i>is 512 words, and the memory size of the data RAM <b>20</b><i>b </i>is 512 words as well. Therefore, the sum of the data RAMs <b>20</b><i>a </i>and <b>20</b><i>b </i>makes the memory size of 1 K words equal to that of the foregoing embodiment. The data RAMs <b>20</b><i>a</i>, <b>20</b><i>b </i>each include 64 cache lines, in total, and each cache line includes 8 words. Tag RAMs <b>22</b><i>a</i>, <b>22</b><i>b </i>each include tags for 64 cache lines. The instruction cache memory <b>12</b>\u2032 includes a multiplexer <b>50</b> which is a circuit configured to select one of two data RAMs <b>20</b><i>a</i>, <b>20</b><i>b </i>to supply data read-out data therefrom to the processor. The multiplexer <b>50</b> is supplied with data read out from the data RAMs <b>20</b><i>a</i>, <b>20</b><i>b </i>and hit/miss judging signals from hit/miss judging circuits <b>24</b><i>a</i>, <b>24</b><i>b</i>. Then, the multiplexer <b>50</b> determines in which of the data RAMs <b>20</b><i>a </i>and <b>20</b><i>b </i>the word to be read out is stored by reference to the hit/miss judging signal as output signals from the hit/miss judging circuits <b>24</b><i>a</i>, <b>24</b><i>b. </i></p><p>As described above, the instruction cache memory according to the invention includes a clock gate circuit to supply a clock signal to the tag RAM only when the cache line for storing a word to be read out changes from one to another, and/or, a branch instruction is detected in the processor, and otherwise stop the supply of the clock signal to the tag RAM. Therefore, activation of the tag RAM is reduced, and power consumption can be reduced.</p><?DETDESC description=\"Detailed Description\" end=\"tail\"?></description>"}], "inventors": [{"first_name": "Masafumi", "last_name": "Takahashi", "name": ""}], "assignees": [{"first_name": "", "last_name": "", "name": "KABUSHIKI KAISHA TOSHIBA"}, {"first_name": "", "last_name": "MICROSOFT TECHNOLOGY LICENSING, LLC", "name": ""}, {"first_name": "", "last_name": "KABUSHIKI KAISHA TOSHIBA", "name": ""}, {"first_name": "", "last_name": "KABUSHIKI KAISHA TOSHIBA", "name": ""}], "ipc_classes": [{"primary": true, "label": "G06F  12/00"}, {"primary": false, "label": "G06F   1/32"}], "locarno_classes": [], "ipcr_classes": [{"label": "G06F  12/08        20060101A I20051008RMJP"}, {"label": "G06F   9/32        20060101ALI20051220RMJP"}, {"label": "G06F   1/04        20060101ALI20051220RMJP"}], "national_classes": [{"primary": true, "label": "711125"}, {"primary": false, "label": "711E12054"}, {"primary": false, "label": "711154"}, {"primary": false, "label": "711215"}, {"primary": false, "label": "711213"}, {"primary": false, "label": "711003"}, {"primary": false, "label": "711E12042"}, {"primary": false, "label": "713322"}, {"primary": false, "label": "711167"}, {"primary": false, "label": "711128"}, {"primary": false, "label": "711E1202"}], "ecla_classes": [{"label": "S06F212:1028"}, {"label": "Y02B60:12F"}, {"label": "G06F  12/08B16D"}, {"label": "G06F  12/08B14"}, {"label": "G06F  12/08B22D"}], "cpc_classes": [{"label": "G06F  12/0895"}, {"label": "G06F  12/0895"}, {"label": "G06F  12/0875"}, {"label": "G06F2212/1028"}, {"label": "Y02D  10/00"}, {"label": "G06F  12/0882"}, {"label": "G06F2212/1028"}, {"label": "G06F  12/0875"}, {"label": "Y02D  10/00"}, {"label": "G06F  12/0882"}], "f_term_classes": [], "legal_status": "Expired - Lifetime", "priority_date": "1999-01-06", "application_date": "2000-01-06", "family_members": [{"ucid": "JP-2000200217-A", "titles": [{"lang": "JA", "text": "\u547d\u4ee4\u30ad\u30e3\u30c3\u30b7\u30e5\u30e1\u30e2\u30ea"}, {"lang": "EN", "text": "INSTRUCTION CACHE MEMORY"}]}, {"ucid": "JP-3798563-B2", "titles": [{"lang": "JA", "text": "\u547d\u4ee4\u30ad\u30e3\u30c3\u30b7\u30e5\u30e1\u30e2\u30ea"}, {"lang": "EN", "text": "Instruction cache memory"}]}, {"ucid": "US-6345336-B1", "titles": [{"lang": "EN", "text": "Instruction cache memory includes a clock gate circuit for selectively supplying a clock signal to tag RAM to reduce power consumption"}]}]}