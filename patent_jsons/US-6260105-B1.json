{"patent_number": "US-6260105-B1", "publication_id": 72723494, "family_id": 25495699, "publication_date": "2001-07-10", "titles": [{"lang": "EN", "text": "Memory controller with a plurality of memory address buses"}], "abstracts": [{"lang": "EN", "paragraph_markup": "<abstract lang=\"EN\" load-source=\"patent-office\" mxw-id=\"PA72582132\"><p>A memory controller for a computer system includes a first memory address bus and a second memory, address bus. The memory controller further includes circuitry that toggles one of the first and second memory address buses at a time. Because only one memory address bus is toggled at once, the first and second memory address buses can share power and ground pins, thereby reducing the number of power and ground pins on the memory controller.</p></abstract>"}], "claims": [{"lang": "EN", "claims": [{"num": 1, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00001\" num=\"1\"><claim-text>1. An integrated circuit memory controller comprising:</claim-text><claim-text>a first memory address bus; </claim-text><claim-text>a second memory address bus; </claim-text><claim-text>circuitry to toggle between said first and second memory address buses; and </claim-text><claim-text>a power pin coupled to both said first and said second memory address buses. </claim-text></claim>"}, {"num": 2, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00002\" num=\"2\"><claim-text>2. The integrated circuit memory controller of claim <b>1</b>, wherein said first and second memory buses comprise a plurality of memory address pins, and wherein a ratio of said plurality of memory address pins to said power pin is approximately 8:1.</claim-text></claim>"}, {"num": 3, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00003\" num=\"3\"><claim-text>3. The integrated circuit memory controller of claim <b>1</b>, said power pin comprising:</claim-text><claim-text>a plurality of power pins, each of said plurality of power pins coupled to both said first and said second memory address buses. </claim-text></claim>"}, {"num": 4, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00004\" num=\"4\"><claim-text>4. The integrated circuit memory controller of claim <b>1</b>, further comprising:</claim-text><claim-text>a ground pin coupled to both said first and said second memory address buses. </claim-text></claim>"}, {"num": 5, "parent": 4, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00005\" num=\"5\"><claim-text>5. The integrated circuit memory controller of claim <b>4</b>, said ground pin comprising:</claim-text><claim-text>a plurality of ground pins, each of said plurality of ground pins coupled to both said first and said second memory address buses. </claim-text></claim>"}, {"num": 6, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00006\" num=\"6\"><claim-text>6. An integrated circuit memory controller comprising:</claim-text><claim-text>a first memory address bus; </claim-text><claim-text>a second memory address bus; and </claim-text><claim-text>circuitry including a first output enable line and a second output enable line toggling one of said first and second memory address buses at a time, said circuitry further including: </claim-text><claim-text>a flip-flop; </claim-text><claim-text>a multiplexer coupled to said flip-flop, said multiplexer including a selector input; </claim-text><claim-text>an output enable source coupled to said selector input; </claim-text><claim-text>a row decoder coupled to said output enable source; and </claim-text><claim-text>a memory request bus, wherein: </claim-text><claim-text>said first memory address bus includes a memory address pin; </claim-text><claim-text>said flip-flop has an input, and an output coupled to said address pin; and </claim-text><claim-text>said multiplexer has a first input coupled to said memory request bus, a second input coupled to said flip-flop output, and an output coupled to said flip-flop input. </claim-text></claim>"}, {"num": 7, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00007\" num=\"7\"><claim-text>7. The integrated circuit memory controller of claim <b>1</b>, wherein said first memory address bus is coupled to a first memory slot and said second memory address bus is coupled to a second memory slot.</claim-text></claim>"}, {"num": 8, "parent": 7, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00008\" num=\"8\"><claim-text>8. The integrated circuit memory controller of claim <b>7</b>, wherein a plurality of memory devices are inserted in said memory slots.</claim-text></claim>"}, {"num": 9, "parent": 8, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00009\" num=\"9\"><claim-text>9. The integrated circuit memory controller of claim <b>8</b>, wherein said memory devices are dynamic random access memory devices.</claim-text></claim>"}, {"num": 10, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00010\" num=\"10\"><claim-text>10. A computer system comprising:</claim-text><claim-text>a processor; </claim-text><claim-text>a power source; </claim-text><claim-text>an integrated circuit memory controller coupled to said processor, said integrated circuit memory controller comprising: </claim-text><claim-text>a first memory address bus; </claim-text><claim-text>a second memory address bus; and </claim-text><claim-text>a power pin coupled to said power source, said power pin coupled to both said first memory address bus and said second memory address bus; </claim-text><claim-text>a first memory slot coupled to said first memory address bus; </claim-text><claim-text>a second memory slot coupled to said second memory address bus; and </claim-text><claim-text>circuitry to toggle between said first and second memory address buses. </claim-text></claim>"}, {"num": 11, "parent": 10, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00011\" num=\"11\"><claim-text>11. The computer system of claim <b>10</b>, wherein said first and second memory buses comprise a plurality of memory address pins, and wherein a ratio of said plurality of memory address pins to said power pin is approximately 8:1.</claim-text></claim>"}, {"num": 12, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00012\" num=\"12\"><claim-text>12. A computer system comprising:</claim-text><claim-text>a processor; </claim-text><claim-text>a memory controller coupled to said processor, said memory controller including a first memory address bus and a second memory address bus, said first memory address bus having a plurality of first pads, said second memory address bus having a plurality of second pads, each of said first pads disposed adjacent to at least one of said second pads; </claim-text><claim-text>a first memory slot coupled to said first memory address bus; </claim-text><claim-text>a second memory slot coupled to said second memory address bus; and </claim-text><claim-text>circuitry including a first output enable line and a second output enable line toggling said first and second memory address buses one at a time. </claim-text></claim>"}, {"num": 13, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00013\" num=\"13\"><claim-text>13. A computer system comprising:</claim-text><claim-text>a processor; </claim-text><claim-text>a memory controller coupled to said processor, said memory controller comprising a first memory address bus and a second memory address bus, wherein said memory controller comprises: </claim-text><claim-text>an output pin; </claim-text><claim-text>a flip-flop having an input, and having an output coupled to said output pin; </claim-text><claim-text>a multiplexer having an output coupled to said flip-flop input, and having a first input, a second input and a selector, wherein said first input is coupled to said flip-flop output; </claim-text><claim-text>a memory request bus coupled to said second multiplexer input; and </claim-text><claim-text>an output enable source coupled to said multiplexer selector; </claim-text><claim-text>a first memory slot coupled to said first memory address bus; </claim-text><claim-text>a second memory slot coupled to said second memory address bus; and </claim-text><claim-text>circuitry including a first output enable line and a second output enable line toggling said first and second memory address buses one at a time. </claim-text></claim>"}, {"num": 14, "parent": 10, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00014\" num=\"14\"><claim-text>14. The computer system of claim <b>10</b>, said power pin comprising:</claim-text><claim-text>a plurality of power pins, each of said plurality of power pins coupled to both said first and said second memory address buses. </claim-text></claim>"}, {"num": 15, "parent": 10, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00015\" num=\"15\"><claim-text>15. The computer system of claim <b>10</b>, further comprising:</claim-text><claim-text>a first plurality of memory devices inserted in said first memory slot; and </claim-text><claim-text>a second plurality of memory devices inserted in said second memory slot. </claim-text></claim>"}, {"num": 16, "parent": 15, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00016\" num=\"16\"><claim-text>16. The computer system of claim <b>15</b>, wherein said first and second plurality of memory devices are dynamic random access memory devices.</claim-text></claim>"}, {"num": 17, "parent": 10, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00017\" num=\"17\"><claim-text>17. The memory controller of claim <b>10</b>, further comprising:</claim-text><claim-text>a ground pin coupled to both said first and said second memory address buses. </claim-text></claim>"}, {"num": 18, "parent": 17, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00018\" num=\"18\"><claim-text>18. The computer system of claim <b>17</b>, said ground pin comprising:</claim-text><claim-text>a plurality of ground pins, each of said plurality of ground pins coupled to both said first and said second memory address buses. </claim-text></claim>"}, {"num": 19, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00019\" num=\"19\"><claim-text>19. A method of addressing a memory device installed in one of a plurality of memory rows in a computer system, said method comprising:</claim-text><claim-text>determining one of a plurality of memory address buses that is coupled to said one memory row, wherein a power pin is coupled to each of said plurality of memory address buses on an integrated circuit; </claim-text><claim-text>determining whether said one memory row can be addressed; and </claim-text><claim-text>toggling said determined one memory address bus, through circuitry coupled to each of said plurality of memory address buses on said integrated circuit to identify which one of said plurality of memory address buses is active. </claim-text></claim>"}, {"num": 20, "parent": 19, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00020\" num=\"20\"><claim-text>20. The method of claim <b>19</b>, said method further comprising:</claim-text><claim-text>waiting until said one memory row can be addressed if it is determined that said one memory row cannot be addressed. </claim-text></claim>"}, {"num": 21, "parent": 19, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00021\" num=\"21\"><claim-text>21. The method of claim <b>19</b>, wherein each of said plurality of memory rows is coupled to one of said plurality of memory address buses.</claim-text></claim>"}, {"num": 22, "parent": 21, "type": "dependent", "paragraph_markup": "<claim id=\"US-6260105-B1-CLM-00022\" num=\"22\"><claim-text>22. The method of claim <b>21</b>, wherein two of said plurality of memory rows form a memory slot.</claim-text></claim>"}]}], "descriptions": [{"lang": "EN", "paragraph_markup": "<description lang=\"EN\" load-source=\"patent-office\" mxw-id=\"PDES54598540\"><?BRFSUM description=\"Brief Summary\" end=\"lead\"?><h4>FIELD OF THE INVENTION</h4><p>The present invention is directed to a memory controller. More particularly, the present invention is directed to a memory controller with a plurality of memory address buses.</p><h4>BACKGROUND OF THE INVENTION</h4><p>A typical computer includes a processor and memory. Frequently a memory controller is coupled between the processor and the memory. One function of the memory controller is to oversee the movement of data into and out of the memory.</p><p>FIG. 1 is a block diagram of a memory controller <b>20</b> coupled to memory in a typical computer. The memory is installed in a plurality of memory slots <b>10</b>-<b>13</b>. Memory slots <b>10</b>-<b>13</b> support memory devices such as dynamic random access memory (\u201cDRAM\u201d) devices that are packaged as single in-line memory modules (\u201cSIMMS\u201d) and dual in-line memory modules (\u201cDIMMS\u201d).</p><p>Memory controller <b>20</b> in FIG. 1 includes a memory address bus <b>22</b> for addressing each memory device. Memory address bus <b>22</b> is a multiple bit bus, and each bit typically requires a memory address pin on memory controller <b>20</b>.</p><p>Increasing the number of memory devices in the computer increases the load on memory address bus <b>22</b>. When the number of memory devices exceed a fixed amount, the resulting load prevents memory address bus <b>22</b> from functioning properly. Therefore, when the fixed amount is exceeded, memory address bus <b>22</b> cannot be directly coupled to the memory devices in memory slots <b>10</b>-<b>13</b>.</p><p>One known method for reducing the load on memory address bus <b>22</b> when the number of memory devices are increased is shown in FIG. <b>1</b>. Memory address bus <b>22</b> is first input to buffers <b>30</b>, <b>40</b>. Buffers <b>30</b>, <b>40</b> are then coupled respectively to memory slot <b>10</b>-<b>11</b> and <b>12</b>-<b>13</b>. As shown, buffer <b>30</b> is coupled to memory slot <b>10</b> via line <b>32</b> and memory slot <b>11</b> via line <b>34</b>. Similarly, buffer <b>40</b> is coupled to memory slot <b>12</b> via line <b>42</b> and memory slot <b>13</b> via line <b>44</b>. The buffers reduce the load on memory address bus <b>22</b>.</p><p>However, adding buffers <b>30</b>, <b>40</b> to the computer increases the cost of the computer. Further, buffers <b>30</b>, <b>40</b> decrease the performance of the computer because they add a time delay between memory controller <b>20</b> and the memory modules inserted in slots <b>10</b>-<b>13</b>. Therefore, it is desirable to eliminate buffers <b>30</b>, <b>40</b>.</p><p>One way to eliminate buffers <b>30</b>, <b>40</b> and still reduce the load on memory address bus <b>22</b> is to add an additional memory address bus to memory controller <b>20</b>. Each memory address bus therefore has only half of the load imposed on it by the memory devices in memory slots <b>10</b>-<b>13</b>. However, this requires the number of memory address pins on memory controller <b>20</b> to be doubled.</p><p>Further, integrated circuits such as memory controller typically have a maximum ratio of input/output (\u201cI/O\u201d) pins to each power and ground pin. When the ratio is increased, the I/O signals are subjected to increased ground bounce and increased simultaneous switching output induced delay which are detrimental to a computer. If the ratio exceeds the maximum, the computer that includes the integrated circuit may not be operable. For a typical memory controller coupled to DRAMs, the maximum ratio of memory address bus pins to each power and ground pin can be approximately 4:1. Therefore, for every four memory address pins on bus <b>22</b>, memory controller <b>20</b> requires one power pin and one ground pin.</p><p>Because of the maximum ratio, if the number of memory address bus pins on memory controller <b>20</b> is doubled as described above, the number of required power and ground pins also increases. However, it is desirable to minimize the number of pins on memory controller <b>20</b> because as the number of pins increase, the corresponding number of pads on the memory controller's die must also be increased. This requires the size of the die itself to also be increased, which greatly increases the cost of memory controller <b>20</b>. Based on the foregoing, there is a need for a memory controller that is not required to be coupled to buffers, and that has a minimal number of pins.</p><h4>SUMMARY OF THE INVENTION</h4><p>A memory controller according to one embodiment of the present invention includes a first memory address bus and a second memory address bus. The memory controller further includes circuitry that toggles one of the first and second memory address buses at a time.</p><?BRFSUM description=\"Brief Summary\" end=\"tail\"?><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"lead\"?><h4>BRIEF DESCRIPTION OF THE DRAWINGS</h4><p>FIG. 1 is a block diagram of a prior art memory controller coupled to memory in a typical computer.</p><p>FIG. 2 is a block diagram of a memory controller coupled to memory slots in a computer in accordance with one embodiment of the present invention.</p><p>FIG. 3 is an overview of the circuitry within a memory controller in accordance with one embodiment of the present invention for toggling one memory address bus at a time.</p><p>FIG. 4 illustrates an example of pins coupled to pads in the memory controller in accordance with one embodiment of the present invention.</p><p>FIG. 5 is a flowchart illustrating the steps executed by a logic block in one embodiment of the present invention.</p><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"tail\"?><?DETDESC description=\"Detailed Description\" end=\"lead\"?><h4>DETAILED DESCRIPTION</h4><p>One embodiment of the present invention is a memory controller that includes two memory address buses. The memory controller has a reduced number of power and ground pins because only one of the memory address buses is toggled at a time.</p><p>FIG. 2 is a block diagram of a memory controller coupled to memory slots in a computer in accordance to one embodiment of the present invention. The memory controller <b>50</b> includes two memory address buses: memory address bus <b>51</b> and memory address bus <b>52</b>. Each memory address bus is coupled to different memory slots <b>10</b>-<b>13</b>. Specifically, memory address bus <b>51</b> is coupled to memory slot <b>10</b> via line <b>54</b> and memory slot <b>11</b> via line <b>56</b>. Similarly, memory address bus <b>52</b> is coupled to memory slot <b>12</b> via line <b>58</b> and memory slot <b>13</b> via line <b>60</b>. Memory modules (e.g., SIMMS, DIMMS populated with SRAM or DRAM), not shown in FIG. 2, can be inserted in slots <b>10</b>-<b>13</b>.</p><p>Memory controller <b>50</b> is also coupled to other devices and buses in the computer that require access to memory slots <b>10</b>-<b>13</b>. For example, a processor <b>53</b> and a system bus <b>55</b> are typically coupled to memory controller <b>50</b>.</p><p>Memory controller <b>50</b> has a reduced number of power and ground pins as compared to prior art memory controllers with an equal number of memory address buses. Specifically, memory controller <b>50</b> does not require one power and one ground pin for every four pins of memory address buses <b>51</b> and <b>52</b> because memory controller <b>50</b> toggles the pins of only one of the memory address buses <b>51</b>, <b>52</b> at a time. This allows memory address buses <b>51</b>, <b>52</b> to share each power and ground pin, and the ratio of memory address bus pins to power and ground pins is increased to approximately 8:1. Therefore, the memory address bus pins in memory controller <b>50</b> require approximately one-half of the power and ground pins required by the prior art memory address bus pins.</p><p>FIG. 3 is an overview of the circuitry within memory controller <b>50</b> for toggling one memory address bus <b>51</b>, <b>52</b> at a time. FIG. 3 illustrates two pins <b>71</b>, <b>72</b> of memory address bus <b>51</b> and two pins <b>81</b>, <b>82</b> of memory address bus <b>52</b>. Other pins of buses <b>51</b>, <b>52</b> not shown in FIG. 3 are coupled to identical circuitry as pins <b>71</b>, <b>72</b>, <b>81</b>, <b>82</b>. In one embodiment, memory address buses <b>51</b> and <b>52</b> are thirteen bits wide and therefore each include thirteen pins.</p><p>A request bus <b>90</b> transmits memory requests to the circuitry of FIG. 3 within memory controller <b>50</b>. Memory requests are requests to access memory and are generated by devices internal and external to memory controller <b>50</b>. Each memory request typically includes a memory address, the type of memory access (i.e., read or write) and the size of the memory access.</p><p>In one embodiment, each memory slot <b>10</b>-<b>13</b> shown in FIG. 2 includes two logical memory rows for a total of eight logical rows. The memory rows are numbered consecutively from 0-7. Memory slot <b>10</b> includes logical memory rows <b>0</b> and <b>1</b>, memory slot <b>11</b> includes logical memory rows <b>2</b> and <b>3</b>, and so on.</p><p>Request bus <b>90</b> is coupled to a row decoder <b>64</b>. Row decoder <b>64</b> determines which of a plurality of memory rows includes the memory module requested by the memory request.</p><p>The memory row determined by decoder <b>64</b> is input to a logic block <b>66</b> via line <b>91</b>. Logic block <b>66</b> functions as a source of output enable lines <b>74</b>, <b>84</b>. Also input to logic block <b>66</b> is the output of a state machine <b>68</b> via line <b>92</b>. State machine <b>68</b> receives a plurality of inputs <b>98</b>, <b>99</b> from for example, requesting sources and internal status registers. State machine <b>68</b> determines when a particular memory row can be loaded based on various operating conditions required by the memory devices in the memory row (e.g., memory refresh status, loading conditions, etc.).</p><p>Each pin <b>71</b>, <b>72</b>, <b>81</b>, <b>82</b> is coupled to pads (not shown in FIG. <b>3</b>), output buffers <b>93</b>-<b>96</b> respectively, and associated driver logic. The associated driver logic includes a D-type flip-flop <b>78</b>, <b>79</b>, <b>88</b>, <b>89</b> and a two-input multiplexer <b>76</b>, <b>77</b>, <b>86</b>, <b>87</b>. The \u201cQ\u201d output of each flip-flop is input to an input \u201ca\u201d of its corresponding multiplexer. The output of each multiplexer is input to the \u201cD\u201d input of its corresponding flip-flop. Each flip-flop also includes a clock input (e.g., clock input <b>85</b>) that is coupled to a system clock (not shown in FIG. <b>3</b>).</p><p>Logic block <b>66</b> outputs enable signals on two enable lines <b>74</b>, <b>84</b>. When one enable line is \u201con\u201d, the other enable line is always \u201coff.\u201d Enable line <b>74</b> is input to a selector input \u201cs\u201d of multiplexers <b>76</b>, <b>77</b>. Enable line <b>84</b> is input to a selector input \u201cs\u201d of multiplexers <b>86</b>, <b>87</b>. Each bit of the requested memory address received from memory request bus <b>90</b> is input to an input \u201cb\u201d of multiplexers <b>76</b>, <b>77</b>, <b>86</b>, <b>87</b>. When an \u201con\u201d signal is sent to the selector input, the signal on input \u201cb\u201d is output from multiplexers <b>76</b>, <b>77</b>, <b>86</b>, <b>87</b>. Otherwise, the signal on input \u201ca\u201d is output from multiplexers <b>76</b>, <b>77</b>, <b>86</b>, <b>87</b>.</p><p>In operation, referring to pin <b>71</b>, when enable line <b>74</b> is \u201con\u201d, the memory address bit at input \u201cb\u201d of multiplexer <b>76</b> is output to flip-flop <b>78</b> where it is clocked to pin <b>71</b>. Therefore, when enable line <b>74</b> is \u201con\u201d, pin <b>71</b> is toggled or \u201cloaded\u201d. However, when enable line <b>74</b> is \u201coff\u201d, the last value of pin <b>71</b> is output from multiplexer <b>76</b> through input \u201ca\u201d and then clocked to pin <b>71</b> through flip-flop <b>78</b>. Therefore, when enable line <b>74</b> is \u201coff\u201d, pin <b>71</b> does not toggle. The remaining pins <b>72</b>, <b>81</b>, <b>82</b> operate in an identical manner. Because only one enable line <b>74</b>, <b>84</b> is \u201con\u201d at one time, only one memory address bus <b>51</b>, <b>52</b> will be toggled or loaded at a time. This allows the pins from each memory address bus <b>51</b>, <b>52</b> to share the power and ground pins.</p><p>Every pin in memory controller <b>50</b> is coupled to a pad. The pads are coupled to the die of memory controller <b>50</b>. In one embodiment, the pads of memory controller <b>50</b> are arranged so that a pad of memory address bus <b>51</b> is always adjacent to a pad of memory address bus <b>52</b>. FIG. 4 illustrates an example of pins coupled to pads in memory controller <b>50</b> for this embodiment.</p><p>In FIG. 4, controller <b>50</b> includes a die <b>108</b>. Controller <b>50</b> further includes pins <b>71</b> and <b>72</b> of memory address bus <b>51</b>, and pins <b>81</b> and <b>82</b> of memory address bus <b>52</b>. A power pin <b>100</b> is coupled to a power bus <b>102</b> and a power source <b>109</b>. A ground pin <b>101</b> is coupled to a ground bus <b>103</b> and a ground source <b>111</b>. A pad <b>104</b> is coupled to pin <b>71</b> of memory address bus <b>51</b>. Adjacent to pad <b>104</b> is a pad <b>106</b> which is coupled to pin <b>81</b> of memory address bus <b>52</b>. Likewise, a pad <b>105</b> is coupled to pin <b>72</b>, and a pad <b>107</b> is coupled to pin <b>82</b>. Each pad <b>104</b>-<b>107</b> is also coupled to power bus <b>102</b> and ground bus <b>103</b>. By interspersing pads from each memory bus <b>51</b> and <b>52</b>, power bus <b>102</b> and ground bus <b>103</b> can be more efficiently shared between the buses.</p><p>FIG. 5 is a flowchart illustrating the steps executed by logic block <b>66</b>. In one embodiment, logic block <b>66</b> is implemented in hardware on the die of memory controller <b>50</b>.</p><p>At step <b>110</b>, logic block <b>66</b> receives the decoded memory row from row decoder <b>64</b>. At step <b>120</b>, the memory address bus that is coupled to the received memory row (i.e., either memory address bus <b>51</b> or <b>52</b>) is determined.</p><p>At step <b>130</b>, logic block <b>66</b> determines whether the decoded memory row can be loaded by examining the input from state machine <b>68</b>. If the memory row cannot be loaded, at step <b>140</b> logic block <b>66</b> goes into a wait loop by continuously returning to step <b>130</b> until the row can be loaded.</p><p>When state machine <b>68</b> outputs that the decoded row can be loaded, at step <b>150</b> logic block <b>66</b> loads the memory address bus determined at step <b>120</b> with the memory address transmitted on memory request bus <b>90</b>. The memory address bus is loaded by turning on the output enable line <b>74</b>, <b>84</b> that corresponds to the determined memory address bus <b>51</b>, <b>52</b>. Specifically, if the decoded memory row is coupled to memory address bus <b>51</b>, output enable line <b>74</b> is turned on to load the bus. Similarly, if the decoded memory row is coupled to memory address bus <b>52</b>, output enable line <b>84</b> is turned on to load the bus.</p><p>As described, the memory controller in accordance with one embodiment of the present invention includes two memory address buses. However, only one memory address bus is toggled at a time. Therefore, power and ground pins can be shared by the memory address buses, and the required number of power and ground pins is reduced.</p><p>Several embodiments of the present invention are specifically illustrated and/or described herein. However, it will be appreciated that modifications and variations of the present invention are covered by the above teachings and within the purview of the appended claims without departing from the spirit and intended scope of the invention.</p><p>For example, more than two memory address buses can be included on the memory controller if required by an increased load. All of the memory address buses can continue to share the same power and ground pins if at any one time only one of the memory address buses is toggled.</p><p>Further, although memory controller <b>50</b> is shown as a separate integrated circuit, in other embodiments the integrated circuit that includes memory controller <b>50</b> may also include other functionality such as a processor. In addition, the present invention can be implemented with any device that includes more than one memory address bus.</p><?DETDESC description=\"Detailed Description\" end=\"tail\"?></description>"}], "inventors": [{"first_name": "Mike W.", "last_name": "Williams", "name": ""}, {"first_name": "Jasmin", "last_name": "Ajanovic", "name": ""}, {"first_name": "Joseph H.", "last_name": "Salmon", "name": ""}], "assignees": [{"first_name": "", "last_name": "", "name": "INTEL CORPORATION"}, {"first_name": "", "last_name": "INTEL CORPORATION", "name": ""}], "ipc_classes": [{"primary": true, "label": "G06F  12/06"}], "locarno_classes": [], "ipcr_classes": [{"label": "G06F  13/16        20060101A I20051008RMEP"}], "national_classes": [{"primary": true, "label": "711105"}], "ecla_classes": [{"label": "Y02B60:12H"}, {"label": "G06F  13/16D6"}], "cpc_classes": [{"label": "Y02D  10/00"}, {"label": "G06F  13/1684"}, {"label": "G06F  13/1684"}, {"label": "Y02D  10/00"}], "f_term_classes": [], "legal_status": "Expired - Lifetime", "priority_date": "1997-10-20", "application_date": "1997-10-20", "family_members": [{"ucid": "US-6260105-B1", "titles": [{"lang": "EN", "text": "Memory controller with a plurality of memory address buses"}]}]}