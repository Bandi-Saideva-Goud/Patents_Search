{"patent_number": "US-6564328-B1", "publication_id": 73400929, "family_id": 23873030, "publication_date": "2003-05-13", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}], "abstracts": [{"lang": "EN", "paragraph_markup": "<abstract lang=\"EN\" load-source=\"docdb\" mxw-id=\"PA11510164\" source=\"national office\"><p>The present invention provides a digital-based mechanism for adjusting the power consumption in an integrated digital circuit such as a processor. The processor includes one or more functional units and a digital throttle that monitors activity states of the processor's functional units to estimate the processor's power consumption. One embodiment of the digital throttle includes one or more gate units, a monitor circuit, and a throttle circuit. Each gate unit controls the delivery of power delivery to a functional unit of the processor and provides a signal that indicates the activity state of its associated functional unit. The monitor circuit determines an estimated power consumption level from the signals and compares the estimated power consumption with a threshold power level. The throttle circuit adjusts the instruction flow in the processor if the estimated power consumption level exceeds the threshold power level.</p></abstract>"}, {"lang": "EN", "paragraph_markup": "<abstract lang=\"EN\" load-source=\"patent-office\" mxw-id=\"PA50491043\"><p>The present invention provides a digital-based mechanism for adjusting the power consumption in an integrated digital circuit such as a processor. The processor includes one or more functional units and a digital throttle that monitors activity states of the processor's functional units to estimate the processor's power consumption. One embodiment of the digital throttle includes one or more gate units, a monitor circuit, and a throttle circuit. Each gate unit controls the delivery of power delivery to a functional unit of the processor and provides a signal that indicates the activity state of its associated functional unit. The monitor circuit determines an estimated power consumption level from the signals and compares the estimated power consumption with a threshold power level. The throttle circuit adjusts the instruction flow in the processor if the estimated power consumption level exceeds the threshold power level.</p></abstract>"}], "claims": [{"lang": "EN", "claims": [{"num": 1, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00001\" num=\"1\"><claim-text>1. A processor comprising:</claim-text><claim-text>a functional unit; </claim-text><claim-text>a gating circuit to control power delivery to the functional unit and to provide a signal that indicates a power level delivered to the functional unit; </claim-text><claim-text>a monitor circuit to compare the indicated power level with a threshhold power level; and </claim-text><claim-text>a throttle circuit to adjust instruction flow in the processor if the indicated power level exceeds the threshold power level. </claim-text></claim>"}, {"num": 2, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00002\" num=\"2\"><claim-text>2. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00001\">claim 1</claim-ref>, wherein the functional unit comprises a plurality of functional units that form an instruction execution pipeline for the processor.</claim-text></claim>"}, {"num": 3, "parent": 2, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00003\" num=\"3\"><claim-text>3. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00002\">claim 2</claim-ref>, wherein the gating circuit comprises a plurality of gating circuits, each gating circuit to control power delivery to a corresponding one of the plural functional units.</claim-text></claim>"}, {"num": 4, "parent": 3, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00004\" num=\"4\"><claim-text>4. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00003\">claim 3</claim-ref>, wherein the throttle circuit injects a no-operation (NOP) into the processor pipeline to adjust instruction flow in the processor.</claim-text></claim>"}, {"num": 5, "parent": 4, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00005\" num=\"5\"><claim-text>5. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00004\">claim 4</claim-ref>, wherein monitor circuit receives a signal from each of the plural gating control circuits to determine a power level for the instruction execution pipeline and compares the determined power level with the threshold power level.</claim-text></claim>"}, {"num": 6, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00006\" num=\"6\"><claim-text>6. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00001\">claim 1</claim-ref>, wherein the power level indicated by the signal represents a power consumption level of the functional unit when it is operational.</claim-text></claim>"}, {"num": 7, "parent": 1, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00007\" num=\"7\"><claim-text>7. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00001\">claim 1</claim-ref>, wherein the throttle circuit reduces a duty cycle of a clock provided by the gating circuit to adjust the instruction flow through the processor.</claim-text></claim>"}, {"num": 8, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00008\" num=\"8\"><claim-text>8. A method for controlling power consumption in a processor comprising:</claim-text><claim-text>collecting power signals from gating circuits in the processor, the power signals indicating power levels currently delivered to functional units associated with the gating circuits; </claim-text><claim-text>adjusting an estimated power consumption according to the collected power signals; </claim-text><claim-text>comparing the estimated power consumption level with a threshold power consumption level; and </claim-text><claim-text>adjusting an instruction execution rate by the processor when the accumulated estimated power consumption level exceeds the threshold power consumption level. </claim-text></claim>"}, {"num": 9, "parent": 8, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00009\" num=\"9\"><claim-text>9. The method of <claim-ref idref=\"US-6564328-B1-CLM-00008\">claim 8</claim-ref>, further comprising accumulating the estimated power consumption levels for a selected period before adjusting the instruction execution rate.</claim-text></claim>"}, {"num": 10, "parent": 9, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00010\" num=\"10\"><claim-text>10. The method of <claim-ref idref=\"US-6564328-B1-CLM-00009\">claim 9</claim-ref>, wherein accumulating the estimated power consumption levels comprises accumulating the estimated power consumption levels for a selected number of cycles of a processor clock.</claim-text></claim>"}, {"num": 11, "parent": 10, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00011\" num=\"11\"><claim-text>11. The method of <claim-ref idref=\"US-6564328-B1-CLM-00010\">claim 10</claim-ref>, wherein adjusting the instruction execution rate comprises reducing a duty cycle of the processor clock over an interval corresponding to the selected number of cycles of the processor clock.</claim-text></claim>"}, {"num": 12, "parent": 8, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00012\" num=\"12\"><claim-text>12. The method of <claim-ref idref=\"US-6564328-B1-CLM-00008\">claim 8</claim-ref>, wherein each gating circuit controls a clock signal provided to its associated function unit.</claim-text></claim>"}, {"num": 13, "parent": 12, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00013\" num=\"13\"><claim-text>13. The method of <claim-ref idref=\"US-6564328-B1-CLM-00012\">claim 12</claim-ref>, wherein adjusting the instruction execution rate comprises adjusting a duty cycle that characterizes the clock signal provided by the gating circuits.</claim-text></claim>"}, {"num": 14, "parent": 13, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00014\" num=\"14\"><claim-text>14. The method of <claim-ref idref=\"US-6564328-B1-CLM-00013\">claim 13</claim-ref>, wherein adjusting the duty cycle comprises reducing the duty cycle uniformly over a selected number of cycles of the clock signal.</claim-text></claim>"}, {"num": 15, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00015\" num=\"15\"><claim-text>15. A computer system comprising:</claim-text><claim-text>a memory system to store instructions for execution; </claim-text><claim-text>an instruction execution pipeline including a plurality of functional units to execute the instructions; </claim-text><claim-text>an instruction delivery system to provide the instructions from the memory system to the instruction execution pipeline at a specified rate; </claim-text><claim-text>a plurality of control circuits, each control circuit to control power delivered to one of the plurality of functional units and to provide a signal indicating it is delivering power; and </claim-text><claim-text>a throttle circuit to estimate a power consumption level from the signals provided by the control circuits and to adjust the specified rate of the instruction delivery system according to the estimated power consumption level. </claim-text></claim>"}, {"num": 16, "parent": 15, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00016\" num=\"16\"><claim-text>16. The computer system of <claim-ref idref=\"US-6564328-B1-CLM-00015\">claim 15</claim-ref>, wherein the signal provided by each of the plural control circuits is calibrated to indicate level of power consumption for the functional unit associated with the control circuit.</claim-text></claim>"}, {"num": 17, "parent": 16, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00017\" num=\"17\"><claim-text>17. The computer system of <claim-ref idref=\"US-6564328-B1-CLM-00016\">claim 16</claim-ref>, wherein instruction delivery circuitry includes an issue unit that issues instructions for processing by instruction execution pipeline at a rate governed by a processor clock.</claim-text></claim>"}, {"num": 18, "parent": 17, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00018\" num=\"18\"><claim-text>18. The system of <claim-ref idref=\"US-6564328-B1-CLM-00017\">claim 17</claim-ref>, wherein throttle circuit adjust the rate of instruction delivery by adjusting a duty cycle that characterizes the processor clock.</claim-text></claim>"}, {"num": 19, "parent": -1, "type": "independent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00019\" num=\"19\"><claim-text>19. A processor comprising:</claim-text><claim-text>one or more functional units; </claim-text><claim-text>one or more gate units, each gate unit to control power delivery to an associated one of the functional units and to indicate an activity state for the associated functional unit; and </claim-text><claim-text>a monitor circuit to estimate the processor's power consumption level from the indicated activity states of the one or more functional units. </claim-text></claim>"}, {"num": 20, "parent": 19, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00020\" num=\"20\"><claim-text>20. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00019\">claim 19</claim-ref>, wherein the monitor circuit compares the estimated power consumption level to a threshold value and provides an indication of the comparison.</claim-text></claim>"}, {"num": 21, "parent": 20, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00021\" num=\"21\"><claim-text>21. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00020\">claim 20</claim-ref>, further comprising a throttle circuit to adjust a rate of instruction processing in the processor responsive to the indicated comparison.</claim-text></claim>"}, {"num": 22, "parent": 19, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00022\" num=\"22\"><claim-text>22. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00019\">claim 19</claim-ref>, wherein the functional units form an instruction execution pipeline and the processor further includes a pipeline control module to indicate the activity states for the one or more functional units according to types of instructions in the instruction execution pipeline.</claim-text></claim>"}, {"num": 23, "parent": 22, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00023\" num=\"23\"><claim-text>23. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00022\">claim 22</claim-ref>, wherein the digital throttle includes a gate unit associated with each of the one or more functional units and each gate unit controls power to its associated functional unit in response to the activity state indicated for the functional unit.</claim-text></claim>"}, {"num": 24, "parent": 22, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00024\" num=\"24\"><claim-text>24. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00022\">claim 22</claim-ref>, wherein the digital throttle further comprises a monitor circuit to estimate the processor's power consumption level using the activity states of the one or more functional units.</claim-text></claim>"}, {"num": 25, "parent": 24, "type": "dependent", "paragraph_markup": "<claim id=\"US-6564328-B1-CLM-00025\" num=\"25\"><claim-text>25. The processor of <claim-ref idref=\"US-6564328-B1-CLM-00024\">claim 24</claim-ref>, wherein the monitor circuit associates a weighted power weight with each functional unit and increments the estimated power consumption level by the weighted power weight if the activity state for the functional unit is in a first state.</claim-text></claim>"}]}], "descriptions": [{"lang": "EN", "paragraph_markup": "<description lang=\"EN\" load-source=\"patent-office\" mxw-id=\"PDES53922171\"><?BRFSUM description=\"Brief Summary\" end=\"lead\"?><h4>BACKGROUND OF THE INVENTION</h4><p>1. Technical Field</p><p>The present invention relates to microprocessors and, in particular, to mechanisms for controlling power consumption in microprocessors.</p><p>2. Background Art</p><p>Modern processors include extensive execution resources to support concurrent processing of multiple instructions. A processor typically includes one or more integer, floating point, branch, and memory execution units to implement integer, floating point, branch, and load/store instructions, respectively. In addition, integer and floating point units typically include register files to maintain data relatively close to the processor core. One drawback to providing a processor with extensive execution resources is that significant amounts of power are required to run them. Different execution units may consume more or less power, depending on their size and the functions they implement, but the net effect of packing so much logic onto a relatively small process chip is to create the potential for significant power dissipation problems.</p><p>Few programs require the full range of a processor's execution resources for significant intervals. The power dissipated running a program depends on the nature of its component instructions and their potential for being executed in parallel. Programs typically include a variety of instruction types, but it is rare that enough instructions of the correct type are available to keep all of the processor's execution resources busy for significant time periods. For this reason, most processor employ a clock gating mechanism to cut off the clock delivered to execution resources when they are not being used and hence reduce power. In addition, different components of an execution resource can be turned on and off as instructions enter and exit the pipe stage serviced by the component. Consequently, the average program may dissipate relatively manageable power levels.</p><p>Some programs do activate many of a processor's execution resources for relatively long time intervals and, consequently, dissipate significantly greater power than average programs. Unless a mechanism is provided to limit the processor's power consumption, the processor is generally designed to handle programs that consume the highest power. This may require running the processor at less than its top performance level for all programs, independent of the power required to run the average program.</p><p>Power throttling is a strategy that has been proposed to handle the power consumption problems created by high performance processors. Power throttling reduces the performance of a processor when its power consumption gets too high. This may be done by temporarily reducing the rate at which the processor executes instructions until power consumption decreases to a safe level. Power throttling allows the processor to be designed for the power levels at which the average program runs. When a resource-hungry program runs, the processor reduces its instruction execution rate to maintain its power consumption within an established limit.</p><p>Proposed power-throttling mechanisms rely on analog parameters to monitor the power being dissipated by a processor. For example, a thermal throttling mechanism monitors the temperature of the processor chip and reduces the processor's execution speed when the temperature exceeds a threshold value. Other throttling schemes have been proposed to monitor the current consumed by a processor or the duty cycle of a pulse width modulator in a switching regulator.</p><p>These power-throttling mechanisms have a number of drawbacks. They introduce additional analog circuitry into a predominantly digital environment, i.e. the processor. They are prone to vary with changes in the processor's environment (temperature, voltage, composition). They may create low frequency variations in the processor's power level. They do not directly limit the power consumed by the processor, and they are not deterministic. That is, their behavior can not be predicted on a clock by clock basis.</p><p>The present invention addresses these and other deficiencies of available power throttling mechanisms.</p><h4>SUMMARY OF THE INVENTION</h4><p>The present invention provides a digital throttle to control the power consumption of a microprocessor.</p><p>In accordance with the present invention, a processor includes one or more functional units and the digital throttle. The digital throttle monitors activity states of the processor's functional units to estimate the processor's power consumption.</p><p>For one embodiment of the invention, the digital throttle includes one or more gate units, a monitor circuit, and a throttle circuit. Each gate unit controls the delivery of power delivery to a functional unit of the processor and provides a signal that indicates the activity state of its associated functional unit. The monitor circuit determines an estimated power consumption level for the processor from signals and compares the estimated power consumption with a threshold power level. The throttle circuit adjusts the instruction flow in the processor if the estimated power consumption level exceeds the threshold power level.</p><?BRFSUM description=\"Brief Summary\" end=\"tail\"?><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"lead\"?><h4>BRIEF DESCRIPTION OF THE DRAWINGS</h4><p>The present invention may be understood with reference to the following drawings, in which like elements are indicated by like numbers. These drawings are provided to illustrate selected embodiments of the present invention and are not intended to limit the scope of the invention.</p><p>FIG. 1 is a block diagram of one embodiment of a computer system on which the present invention may be implemented.</p><p>FIG. 2 is a block diagram of one embodiment of a processor that implements a digital power throttle in accordance with the present invention.</p><p>FIG. 3 is a block diagram of one embodiment of the digital power throttle implemented by the processor of FIG. <b>2</b>.</p><p>FIG. 4 is a schematic diagram representing one embodiment of the throttle circuit of FIG. <b>3</b>.</p><p>FIG. 5 is a flowchart representing a method in accordance with the present invention for adjusting the power consumption of a processor.</p><p>FIGS. 6A and 6B are block diagrams representing embodiments of multiple execution core processors that implement digital throttles in accordance with the present invention.</p><?brief-description-of-drawings description=\"Brief Description of Drawings\" end=\"tail\"?><?DETDESC description=\"Detailed Description\" end=\"lead\"?><h4>DETAILED DESCRIPTION OF THE INVENTION</h4><p>The following discussion sets forth numerous specific details to provide a thorough understanding of the invention. However, those of ordinary skill in the art, having the benefit of this disclosure, will appreciate that the invention may be practiced without these specific details. In addition, various well-known methods, procedures, components, and circuits have not been described in detail in order to focus attention on the features of the present invention.</p><p>The present invention provides a mechanism for controlling the power dissipation of a processor by monitoring the activity of the processor's functional units in response to a sequence of instructions. The activity, e.g. which functional units are activated by the instructions currently in process, may be represented by binary signals which indicate whether corresponding functional units are on or off. An estimate of the power consumed by the processor is provided by summing a power weight associated with each functional unit that is currently \u201con\u201d. The power weight for a functional unit represents the amount of power the functional unit consumes when it is activated. If the estimated power exceeds a threshold level, a throttle mechanism adjusts the instruction flow through the processor to reduce the activity of the functional units.</p><p>Power weights for each functional unit may be determined through a calibration process. For example, the digital throttle may be calibrated once as a part of the design process or it may be self-calibrating. In the latter case, the digital throttle may employ current monitoring circuitry and a calibration algorithm periodically to adjust power weights for each functional unit.</p><p>For one embodiment of the invention, a gate unit is associated with each functional unit to control power delivery to the functional unit in response to the instructions currently in process. A pipeline control circuit indicates to each gate unit the on/off state of its associated functional unit. A signal from each gate unit indicates to a monitor circuit the on/off state for its associated functional unit. The monitor circuit includes or ignores the corresponding power weight in an estimate of the processor's current power consumption according to the indicated state. Alternatively, each gate unit signal may communicate to the monitor circuit the power weight of its associated functional unit when the functional unit is \u201con\u201d. Other embodiments of the invention may employ other mechanisms for indicating the power weights to be considered in the estimated power.</p><p>The monitor circuit sums the power weights for active functional units and compares them with a threshold value to provide clock by clock estimates of the processor's power consumption. For one embodiment of the digital throttle, these estimates are accumulated over multiple clock cycles to provide an accumulated power value that smoothes out clock by clock variations in the processor's power consumption. A throttle circuit adjusts the rate at which instructions are processed according to the accumulated power value. For example, the throttle circuit may inject \u201cbubbles\u201d into the processor's instruction execution pipeline to reduce performance or it may decrease the frequency at which the processor's clock operates.</p><p>The disclosed mechanism thus relies on digital events (activity states) in the processor's logic to estimate power consumption and adjusts the rate of these events directly through the rate at which instructions are processed. This provides a fast, direct, and deterministic mechanism for controlling a processor's power consumption, and it does so without introducing analog circuitry into the processor.</p><p>FIG. 1 is a block diagram of one embodiment of a computer system <b>100</b> in which the present invention may be implemented. Computer system <b>100</b> includes one or more processors <b>110</b>, a main memory <b>140</b>, a non-volatile memory <b>150</b>, various peripheral devices <b>160</b>, and system logic <b>170</b>. System logic <b>170</b> controls data transfers among processor(s) <b>110</b>, main memory <b>140</b>, non-volatile memory <b>150</b>, and peripheral devices <b>160</b>. Computer system <b>100</b> is provided to illustrate various features of the present invention. The particular configuration shown is not necessary to implement the present invention.</p><p>Processor <b>110</b> includes multiple functional units <b>124</b>, which form an instruction execution pipeline <b>120</b>. Instructions are provided to processor <b>110</b> from main memory <b>140</b> and non-volatile memory <b>150</b>. A digital throttle <b>130</b> monitors power consumption in the various functional units <b>124</b> in response to the processed instructions and adjusts the flow of instructions through pipeline <b>120</b> accordingly.</p><p>As an instruction is staged down pipeline <b>120</b>, it directs various functional units <b>124</b> to perform one or more operations that, taken together, implement the instruction. For example, a floating-point multiply-accumulate instruction (FMAC) may cause the following operations to occur in the indicated resources: a floating point register file reads out three operands; an FMAC execution unit multiplies two of the operands and adds the product to the third operation; an exception unit checks the product and sum for errors; and a retirement unit writes the result to the floating point register file if no errors are detected. Depending on the particular processor implementation, these resources or their components may be grouped into one or more functional units which are turned on and off as the instruction is staged down the pipeline. Each functional unit consumes a certain amount of power as it is activated by the instruction.</p><p>For one embodiment of the present invention, the power consumed by a functional unit <b>124</b> is represented by an associated power weight. When a functional unit is activated by an instruction, digital throttle <b>130</b> detects its active state and adds its associated power weight to an estimate of the processor's total power consumption. Digital throttle <b>130</b> implements these operations over a selected interval, generates an estimate of the power consumed by the currently executing instruction sequence, and adjusts the instruction flow through pipeline <b>120</b> if the estimated power consumption exceeds a specified threshold level.</p><p>FIG. 2 represents in greater detail one embodiment of processor <b>110</b>. For the disclosed embodiment of processor <b>110</b>, pipeline <b>120</b> is represented as fetch (FET), expand (EXP), register (REG), execution (EXE), detect (DET), and retirement (RET) stages, respectively, and the execution resources corresponding to each stage is indicated. The present invention does not require partition of processor <b>110</b> into a particular set of pipeline stages. For example, a disclosed stage may be subdivided into two or more stages to address timing issues or facilitate higher processor clock speeds. Alternatively, two or more stages may be combined into a single stage. Other embodiments may include hardware for processing instructions out-of-order. The disclosed pipeline provides only one example of how operations may be partitioned in a processor implementing the present invention.</p><p>The front end of pipeline <b>120</b> includes fetch unit <b>210</b> and issue unit <b>220</b>, which provide instructions to execution units in the back end of pipeline <b>120</b> for execution. Fetch unit <b>210</b> retrieves instructions from memory <b>140</b> directly or through a local cache (not shown) and provides the fetched instructions to issue unit <b>220</b>. Issue unit <b>220</b> decodes the instructions and issues them to the execution resources in the back end of pipeline <b>120</b>.</p><p>Throughout this discussion, the term \u201cinstruction\u201d is used generally to refer to instructions, macro-instructions, instruction bundles or any of a number of other mechanisms used to encode processor operations. For example, the decode operation may transform a macro-instruction into one or more micro-operations (\u03bcops), resolve an instruction bundle into one or more instruction syllables, or retrieve a micro-code sequence associated with an instruction.</p><p>The back end of pipeline <b>120</b> includes register unit <b>230</b>, execution unit <b>250</b>, exception unit <b>260</b> and retirement unit <b>270</b>. Register unit <b>230</b> includes a register rename unit and various register files (not shown) to identify the registers specified in the instructions and to accesses the data from the identified registers, respectively. Execution unit <b>250</b> includes one or more branch execution units (BRU) <b>252</b>, integer execution units (IEU) <b>254</b>, load/store units (LSU) <b>256</b>, and floating point execution units (FPU) <b>258</b> to process branch, integer, load/store, and floating point instructions. Exception unit <b>260</b> checks the results generated by execution units <b>250</b> and adjusts the control flow if an exceptional condition is encountered. If no exceptional conditions are detected, retirement unit <b>270</b> updates the architectural state of processor <b>110</b> with the results.</p><p>The functional units activated by different instructions correspond to various combinations and subsets of the execution resources indicated for pipeline <b>120</b>. Digital throttle <b>130</b> monitors activity states for these functional units and adjusts the rate at which instructions are processed through pipeline <b>120</b>, accordingly. For example, one functional unit may include a floating-point register (in register unit <b>230</b>), and FPU <b>258</b> may have components in two or more functional units. In general, a functional unit includes various execution resources (register files, execution units, tracking logic) that are activated and deactivated together. The present invention does not depend on the detailed mapping between the functional units and the execution resources shown in FIG. <b>2</b>.</p><p>FIG. 3 is a block diagram representing one embodiment of digital throttle <b>130</b> and its interactions with functional units <b>124</b> of pipeline <b>120</b>. The disclosed embodiment of digital throttle <b>130</b> includes gate units <b>310</b>(<b>1</b>)-<b>310</b>(<i>n</i>) (generically, gate unit <b>130</b>), a monitor circuit <b>320</b>, and a throttle circuit <b>330</b>. Each gate unit <b>310</b> is associated with a functional unit <b>124</b> in pipeline <b>120</b> to control power delivery to the functional unit. For example, gate unit <b>310</b> may be a clock gating circuit that couples or decouples a clock signal to functional unit <b>124</b> according to whether or not the services of functional unit <b>124</b> are necessary to implement an instruction currently in the pipe stage in which the functional unit operates. Also shown in FIG. 3 is a pipeline control circuit <b>350</b> which indicates to gate units <b>310</b> which functional units are active for the currently executing instructions.</p><p>For the disclosed embodiment of digital throttle <b>130</b>, each gate unit <b>130</b> provides a signal to monitor circuit <b>320</b> to indicate whether power is being delivered to functional unit <b>124</b>. For example, the signal may be an activity state of functional unit <b>124</b>, which is asserted when functional unit <b>124</b> is turned \u201con\u201d. When the signal is asserted, i.e. when gate unit <b>130</b> provides power to functional unit <b>124</b>, a power weight for the functional unit is added to the estimated power consumption for processor <b>110</b>. When the signal is not asserted, i.e. when gate unit <b>130</b> cuts off power to function unit <b>124</b>, the associated power weight is not added to the estimated power consumption power eight. A typical processor may include 10-20 gate units <b>310</b> to control power delivery to 10-20 functional units <b>124</b>.</p><p>Monitor circuit <b>320</b> collects signals from gate units <b>130</b> and determines a current estimated power consumption level for processor <b>110</b> from the collected signals. For the disclosed embodiment of digital throttle <b>130</b>, monitor circuit <b>320</b> includes weight units <b>314</b>(<b>1</b>)-<b>314</b>(<i>n</i>) (generically, weight units <b>314</b>), an adder <b>324</b>, a saturation circuit <b>326</b>, and an accumulator <b>328</b>. For one embodiment of the invention, each weight unit <b>314</b> is associated with one of functional units <b>124</b> through a corresponding gate unit <b>310</b>. Weight unit <b>314</b> provides a power level to adder <b>324</b> when the activity state signal from its gate unit <b>310</b> is asserted. When the activity state signal is not asserted, weight unit <b>314</b> outputs a zero.</p><p>Adder <b>324</b> sums the power weights indicated by weight units <b>134</b> and subtracts the threshold level from the sum. The output of adder <b>324</b> is forwarded through saturation circuit <b>326</b> to accumulator <b>328</b>. Saturation circuit <b>326</b> is included to prevent wraparound in case the value forwarded by adder <b>324</b> overflows. Accumulator <b>328</b> provides the forwarded value to throttle circuit <b>330</b> and also provides a copy back to adder <b>324</b> to be updated according to subsequent activity states of the processor.</p><p>At selected intervals, the content of accumulator <b>328</b> (\u201caccumulated power\u201d) is provided to throttle circuit <b>330</b>. One embodiment of throttle circuit <b>330</b> decreases the flow of instructions through pipeline <b>120</b> if the accumulated power is positive, e.g. the accumulated power consumption estimate over the specified interval exceeds the threshold power level. Throttle circuit <b>330</b> signals fetch unit <b>210</b> to inject \u201cbubbles\u201d into the instruction stream provided to the back end of pipeline <b>120</b>. In effect, throttle circuit <b>330</b> adjusts the duty cycle of the processor clock when the estimated power consumption level for the specified interval exceeds the threshold level.</p><p>Table 1 illustrates a set of duty cycle adjusments for the case in which the specified interval is 128 clock cycles.</p><p><tables id=\"TABLE-US-00001\"><table colsep=\"0\" frame=\"none\" rowsep=\"0\"><tgroup align=\"left\" cols=\"3\" colsep=\"0\" rowsep=\"0\"><colspec align=\"left\" colname=\"offset\" colwidth=\"35pt\"></colspec><colspec align=\"center\" colname=\"1\" colwidth=\"63pt\"></colspec><colspec align=\"center\" colname=\"2\" colwidth=\"119pt\"></colspec><thead><row><entry></entry><entry align=\"center\" nameend=\"2\" namest=\"OFFSET\" rowsep=\"1\"></entry></row><row><entry></entry><entry>Accumulated Power</entry><entry>Duty Cycle</entry></row><row><entry></entry><entry align=\"center\" nameend=\"2\" namest=\"OFFSET\" rowsep=\"1\"></entry></row></thead><tbody valign=\"top\"><row><entry></entry><entry>X &lt; 0</entry><entry>128/128</entry></row><row><entry></entry><entry>0 &lt;= X &lt; 1</entry><entry>127/128</entry></row><row><entry></entry><entry>1 &lt;= X &lt; 2</entry><entry>126/128</entry></row><row><entry></entry><entry>2 &lt;= X &lt; 3</entry><entry>125/128</entry></row><row><entry></entry><entry>3 &lt;= X &lt; 4</entry><entry>124/128</entry></row><row><entry></entry><entry>. . .</entry><entry>. . .</entry></row><row><entry></entry><entry>125 &lt;= X &lt; 126</entry><entry>\u20032/128</entry></row><row><entry></entry><entry>126 &lt;= X &lt; 127</entry><entry>\u20031/128</entry></row><row><entry></entry><entry>127 &lt;= X</entry><entry>\u20030/128</entry></row><row><entry></entry><entry align=\"center\" nameend=\"2\" namest=\"OFFSET\" rowsep=\"1\"></entry></row></tbody></tgroup></table></tables></p><p>For the embodiment illustrated by Table 1, the power weights may be 8-16 bit, fixed-point numbers proportional to the power consumed by the functional unit when it is activated. The upper 8 bits of X may be used to adjust the duty cycle of the processor clock. These bits change more slowly, damping the instruction flow changes indicated by throttle circuit <b>330</b>. For the above example, in which the sampling interval is 128 clock cycles, digital throttle <b>130</b> provides 128 levels of throttling. These levels provide fine-tuned throttle control that is proportional to the amount by which the estimated power consumption exceeds the threshold power consumption. Preferably, throttle circuit <b>350</b> distributes the on/off periods indicated by the estimated power consumption over the sampling interval. The distribution may be uniform, it may be random, or it may be governed by some other pattern. One such distribution is discussed below in greater detail.</p><p>FIG. 4 is a schematic representation of one embodiment of throttle circuit <b>330</b>. The disclosed embodiment of throttle circuit <b>330</b> includes a memory device <b>410</b>, a control unit <b>420</b>, and a counter <b>430</b>. A register <b>440</b> of accumulator <b>338</b> in which the accumulated power is stored is also shown. Memory device <b>410</b> may be, for example, a read only memory (ROM), the entries of which are accessed through control unit <b>420</b> in response to a timing indication from counter <b>420</b> and an accumulated power level from accumulator <b>328</b>.</p><p>For the disclosed embodiment of throttle circuit <b>330</b>, counter <b>430</b> is a modulo-<b>128</b> counter. The output of counter <b>430</b> increments a column index in control unit <b>420</b> from 0-127 on successive clock cycles and back to 0 when 127 is reached. Similarly, the output of accumulator <b>328</b> adjusts a row index in control unit <b>420</b> according to the current value of the accumulated power. For the disclosed embodiment, the row index is 0, 71, and 123 when X&lt;=0, 72, and 124, respectively. Control unit <b>420</b> uses these indices to read out a corresponding entry from memory device <b>410</b>. The value of the entry indicates whether or not a bubble should be injected into the instruction execution pipeline of processor <b>110</b>. For example, when the output is 0, a bubble is injected and when the output is 1, no bubble is injected.</p><p>For one embodiment of memory device <b>410</b>, each row is populated by different numbers of 1s and 0s, with the number of 0s scaling with the value of X mapped to the row. For example, row_<b>0</b> may contain all is, so that no bubbles are injected into the instruction execution pipeline when the accumulated power level (X) does not exceed zero, i.e. when the running power estimate does not exceed the threshold level. At the other end of the power spectrum row_<b>127</b> may contain no is so that bubbles are injected into the instruction execution pipeline on each clock cycle for as long as the accumulated power level exceeds a specified amount. For the disclosed example, this amount is determined by saturation circuit <b>328</b> as 127, i.e. X=&gt;127. Rows between row_<b>0</b> and row_<b>127</b> may be populated with 0s in proportion to the value of X. For example, row <b>67</b> includes 68 0s distributed in its different columns, row_<b>111</b> includes 112 0s distributed across its columns, and row <b>17</b> includes 18 0s distributed across its columns. For one embodiment of the invention, the 0s may be distributed across the columns of their designated rows in a random fashion.</p><p>The disclosed embodiment of digital throttle <b>130</b> includes a feedback loop. The amount of throttling depends on the activity states of the functional units, which are in turn influenced by the amount of throttling. Accumulator <b>328</b> performs an integration over time, which introduces a 90 degree lagging phase shift into this feedback loop. For stability purposes, it is important to minimize other delays, i.e. phase shifts, within the feedback loop. The stability criteria for the digital feedback loop will likely depend on how significantly the processor's power consumption is adjusted during an interval corresponding to the number of clock cycles needed to traverse the instruction execution pipeline (pipeline interval). For example, the power weights should be chosen to ensure relatively small changes in the power consumption during a pipeline interval.</p><p>The response time of digital throttle <b>130</b> is controlled by its feedback loop. Because the digital throttle operates in response to discrete signals in the logic rather than macroscopic phenomenon (temperature, current) that are determined by the collective behavior of the processor's components, its response time is one the order of micro-seconds. Response times for thermal based throttle mechanisms are on the order of seconds. Digital throttle <b>130</b> can not control peaks in power consumption that are of shorter duration than this response time. To minimize the performance loss represented by, e.g. injected bubbles, digital throttle <b>130</b> responds as slowly as permitted by the power delivery system. This means that the power deliver system should be able to handle peaks in the processor's power consumption that are above the threshold level for intervals shorter than the response time. For these peaks, energy may be provided from the processor's power supply capacitors.</p><p>Digital throttle <b>130</b> will be more effective the greater the degree of control it has over the processor's power consumption. Digital throttle <b>130</b> is most effective where processor <b>130</b> implements a gating mechanism that covers a large fraction of the processor's functional units. Extensive gating control means digital throttle <b>130</b> can adjust the level of power consumption quickly and significantly when the threshold level is exceeded. Similarly, providing more fine grained control over the functional units increases the effectiveness of digital throttle <b>130</b>. For example, dividing the processor's execution resources into a larger number of functional units <b>124</b> and providing additional gating units to control these functional units provides throttle <b>130</b> with greater control over the processor's power consumption.</p><p>FIG. 5 is a flowchart representing a method <b>500</b> in accordance with the present invention for throttling power in a processor. Method <b>500</b> first determines <b>510</b> which functional units in the processor are active. The state (active/inactive) of a functional unit may be indicated, for example, by a signal from a clock gating circuit that provides power to the function unit. For example, the gating circuit may assert the signal if it is providing power to the function unit (active state), and it may deassert the signal if it is not currently providing power to the functional unit (inactive state).</p><p>Once the active functional units have been determined <b>510</b>, a power level is estimated <b>520</b> for the processor. This may be accomplished by associating a power weight with the signal provided by each gating unit and incrementing the estimated power level by the power weight associated with each signal that is asserted. The weighted powers associated with deasserted signals do not contribute to the current estimated power level.</p><p>The current estimated power level is compared <b>530</b> with a threshold power level. The threshold power level represents, for example, a power level above which the processor should not be operated for an extended period of time. For one embodiment, the threshold is subtracted from the current estimated power level and the result is added to a running estimate of the relative power level of the processor, i.e. the accumulated power. If the accumulated power is positive (EPL&gt;threshold), the instruction throughput is adjusted <b>540</b>. If the accumulated power is negative (EPL&lt;threshold), no adjustment is made to the instruction throughput.</p><p>The instruction throughput of processor may be reduced through a number of mechanisms. For one embodiment of method <b>500</b>, bubbles may be injected into the instruction execution pipeline to reduce the fraction of clock cycles for which the processor's functional units are active. Bubbles may be introduced by, for example, triggering the issue unit to issue instructions on only selected cycles of the processor clock. For another embodiment of the invention, the frequency at which the processor's clock is operated may be reduced.</p><p>One advantage of the present invention is that the execution resources of the processor pipeline are adjusted according to the level of activity in the pipeline's functional units. Unlike thermal or current based techniques for estimating power consumption, the functional unit activity monitored by the digital throttle is a characteristic of individual pipelines within the processor. The consequent specificity in assigning activity and power consumption to specific units is particularly useful in processors that implement multiple execution cores on a single processor chip. Here, \u201cexecution core\u201d refers to the execution resources associated with a complete processor, so that multi-execution core processors effectively implement multiple processors on a single chip. The digital throttle of the present invention allows an execution core that is processing a power-hungry code segment to effectively borrow power from the other execution core(s), as long as the total power consumption does not exceed a threshold level. Alternatively, it allows each execution core to be throttled according to the activity in its instruction execution pipeline.</p><p>FIG. 6A is a block level diagram of one embodiment of a multiple execution core processor <b>610</b> in which the present invention is implemented. Processor <b>610</b> includes execution cores <b>620</b>(<i>a</i>)-<b>620</b>(<i>n</i>) (generically, execution core(s) <b>630</b>). Each execution core <b>620</b> includes functional units <b>630</b> that form an execution pipeline <b>640</b>. A shared digital throttle <b>650</b> monitors and adjusts activity in functional units <b>630</b> of all pipelines <b>640</b>. This embodiment of processor <b>110</b> allows each execution core <b>620</b> to borrow power from the remaining execution cores as long as the total power threshold is not exceeded.</p><p>FIG. 6B is a block level diagram of another embodiment of a multiple execution core processor <b>660</b> in which the present invention is implemented. Processor <b>660</b> includes execution cores <b>620</b>(<i>a</i>)-<b>620</b>(<i>n</i>) (generically, execution core(s) <b>630</b>), each of which includes functional units <b>630</b> that form an execution pipeline <b>640</b>. Each execution core <b>630</b> also includes a digital throttle <b>650</b> to monitor and adjust activity in its functional units <b>630</b>. This embodiment of processor <b>110</b> allows each execution core <b>620</b> to be throttled independently by its associated digital throttle <b>630</b>.</p><p>There has thus been provided a digital throttle that controls power consumption in a processor according to activity states of the processor 's functional units Activity states are monitored during instruction execution and the execution rate is adjusted according to a power consumption level estimated from the activity states. Power consumption may be controlled by injecting \u201cbubbles\u201d or NOPs into the instruction execution stream in response to the estimated power consumption.</p><p>For one embodiment of the invention, a power weight is assigned to each functional unit, and the power consumption of the processor is estimated by summing the power weights for each functional unit that is active. When the estimated power consumption exceeds a threshold value, the digital throttle reduces the rate at which the processor executes instructions. Power weights for the various functional units may be determined by a calibration procedure during processor design or test stages. The digital throttle may also include circuitry to implement a self calibration procedure.</p><p>The disclosed embodiments have been provided to illustrate various features of the present invention. Persons skilled in the art of processor design, having the benefit of this disclosure, will recognize variations and modifications of the disclosed embodiments, which none the less fall within the spirit and scope of the appended claims.</p><?DETDESC description=\"Detailed Description\" end=\"tail\"?></description>"}], "inventors": [{"first_name": "Edward T.", "last_name": "Grochowski", "name": ""}, {"first_name": "Vinod", "last_name": "Sharma", "name": ""}, {"first_name": "Gregory S.", "last_name": "Matthews", "name": ""}, {"first_name": "Vivek", "last_name": "Joshi", "name": ""}, {"first_name": "Ralph M.", "last_name": "Kling", "name": ""}], "assignees": [{"first_name": "", "last_name": "", "name": "INTEL CORPORATION"}, {"first_name": "", "last_name": "INTEL CORPORATION", "name": ""}], "ipc_classes": [{"primary": true, "label": "G06F   1/26"}], "locarno_classes": [], "ipcr_classes": [{"label": "G06F   1/32        20060101A I20051008RMUS"}, {"label": "G06F   1/04        20060101ALI20051220RMJP"}, {"label": "G06F  15/78        20060101AFI20051220RMJP"}, {"label": "G06F   9/38        20060101A I20080531RMEP"}], "national_classes": [{"primary": true, "label": "713320"}, {"primary": false, "label": "712E09049"}], "ecla_classes": [{"label": "Y02B60:14D"}, {"label": "G06F   1/32P5T"}, {"label": "G06F   1/32P"}, {"label": "G06F   9/38E"}], "cpc_classes": [{"label": "G06F   9/3869"}, {"label": "G06F   1/3203"}, {"label": "G06F   9/3836"}, {"label": "G06F   1/329"}, {"label": "G06F   1/329"}, {"label": "G06F   9/3836"}, {"label": "G06F   9/3869"}, {"label": "G06F   1/329"}, {"label": "G06F   9/3836"}, {"label": "G06F   1/3203"}, {"label": "Y02D  10/00"}, {"label": "Y02D  10/00"}, {"label": "G06F   9/3869"}], "f_term_classes": [], "legal_status": "Expired - Lifetime", "priority_date": "1999-12-23", "application_date": "1999-12-23", "family_members": [{"ucid": "CN-101520725-B", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}, {"lang": "ZH", "text": "\u5177\u6709\u6570\u5b57\u529f\u7387\u8c03\u8282\u7684\u5fae\u5904\u7406\u5668"}]}, {"ucid": "CN-1434934-A", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}, {"lang": "ZH", "text": "\u5177\u6709\u6570\u5b57\u80fd\u91cf\u8c03\u8282\u7684\u5fae\u5904\u7406\u5668"}]}, {"ucid": "GB-2373896-A", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}]}, {"ucid": "GB-2373896-C", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}]}, {"ucid": "HK-1046561-B", "titles": [{"lang": "EN", "text": "MICROPROCESSOR WITH DIGITAL POWER THROTTLE"}, {"lang": "ZH", "text": "\u5099\u6709\u6578\u4f4d\u96fb\u6e90\u7bc0\u6d41\u95a5\u7684\u5fae\u578b\u8655\u7406\u5668"}]}, {"ucid": "US-6564328-B1", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}]}, {"ucid": "AU-1626601-A", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}]}, {"ucid": "KR-20020062986-A", "titles": [{"lang": "KO", "text": "\ub514\uc9c0\ud138 \uc804\ub825 \uc2a4\ub85c\ud2c0\uc744 \uac16\ub294 \ub9c8\uc774\ud06c\ub85c\ud504\ub85c\uc138\uc11c"}, {"lang": "EN", "text": "MICROPROCESSOR WITH DIGITAL POWER THROTTLE"}]}, {"ucid": "JP-2012198922-A", "titles": [{"lang": "EN", "text": "MICROPROCESSOR WITH DIGITAL POWER THROTTLE"}, {"lang": "JA", "text": "\u30c7\u30a3\u30b8\u30bf\u30eb\u30fb\u30d1\u30ef\u30fc\u30fb\u30b9\u30ed\u30c3\u30c8\u30eb\u3092\u5099\u3048\u305f\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5"}]}, {"ucid": "HK-1046561-A1", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle."}]}, {"ucid": "GB-2373896-B", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}]}, {"ucid": "JP-6042830-B2", "titles": [{"lang": "EN", "text": "Processor and method for estimating power consumption in a processor"}, {"lang": "JA", "text": "\u30d7\u30ed\u30bb\u30c3\u30b5\u304a\u3088\u3073\u30d7\u30ed\u30bb\u30c3\u30b5\u5185\u306e\u96fb\u529b\u6d88\u8cbb\u3092\u63a8\u5b9a\u3059\u308b\u65b9\u6cd5"}]}, {"ucid": "EP-1259870-A1", "titles": [{"lang": "DE", "text": "MIKROPROZESSOR MIT DIGITALER LEISTUNGSDROSSEL"}, {"lang": "EN", "text": "MICROPROCESSOR WITH DIGITAL POWER THROTTLE"}, {"lang": "FR", "text": "MICROPROCESSEUR A REGULATEUR NUMERIQUE DE PUISSANCE"}]}, {"ucid": "JP-5073903-B2", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}, {"lang": "JA", "text": "\u30c7\u30a3\u30b8\u30bf\u30eb\u30fb\u30d1\u30ef\u30fc\u30fb\u30b9\u30ed\u30c3\u30c8\u30eb\u3092\u5099\u3048\u305f\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5"}]}, {"ucid": "AT-460698-T", "titles": [{"lang": "DE", "text": "MIKROPROZESSOR MIT DIGITALER LEISTUNGSDROSSEL"}, {"lang": "EN", "text": "MICROPROCESSOR WITH DIGITAL POWER THROTTLE"}]}, {"ucid": "TW-512261-B", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}]}, {"ucid": "EP-1259870-B1", "titles": [{"lang": "FR", "text": "MICROPROCESSEUR A REGULATEUR NUMERIQUE DE PUISSANCE"}, {"lang": "EN", "text": "MICROPROCESSOR WITH DIGITAL POWER THROTTLE"}, {"lang": "DE", "text": "MIKROPROZESSOR MIT DIGITALER LEISTUNGSDROSSEL"}]}, {"ucid": "JP-5650689-B2", "titles": [{"lang": "EN", "text": "Microprocessor with digital power Throttle"}, {"lang": "JA", "text": "\u30c7\u30a3\u30b8\u30bf\u30eb\u30fb\u30d1\u30ef\u30fc\u30fb\u30b9\u30ed\u30c3\u30c8\u30eb\u3092\u5099\u3048\u305f\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5"}]}, {"ucid": "GB-0214785-D0", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}]}, {"ucid": "DE-60043996-D1", "titles": [{"lang": "DE", "text": "MIKROPROZESSOR MIT DIGITALER LEISTUNGSDROSSEL"}, {"lang": "EN", "text": "MICROPROCESSOR WITH DIGITAL POWER THROTTLE"}]}, {"ucid": "CN-100492252-C", "titles": [{"lang": "EN", "text": "Microprocessor with digital power regulation"}, {"lang": "ZH", "text": "\u5177\u6709\u6570\u5b57\u529f\u7387\u8c03\u8282\u7684\u5fae\u5904\u7406\u5668"}]}, {"ucid": "KR-100511110-B1", "titles": [{"lang": "EN", "text": "MICROPROCESSOR WITH DIGITAL POWER THROTTLE"}, {"lang": "KO", "text": "\ub514\uc9c0\ud138 \uc804\ub825 \uc2a4\ub85c\ud2c0\uc744 \uac16\ub294 \ub9c8\uc774\ud06c\ub85c\ud504\ub85c\uc138\uc11c"}]}, {"ucid": "WO-2001048584-A1", "titles": [{"lang": "EN", "text": "MICROPROCESSOR WITH DIGITAL POWER THROTTLE"}, {"lang": "FR", "text": "MICROPROCESSEUR A REGULATEUR NUMERIQUE DE PUISSANCE"}]}, {"ucid": "JP-2003523563-A", "titles": [{"lang": "JA", "text": "\u30c7\u30a3\u30b8\u30bf\u30eb\u30fb\u30d1\u30ef\u30fc\u30fb\u30b9\u30ed\u30c3\u30c8\u30eb\u3092\u5099\u3048\u305f\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5"}, {"lang": "EN", "text": "Microprocessor with digital power throttle"}]}, {"ucid": "JP-2014112399-A", "titles": [{"lang": "EN", "text": "MICROPROCESSOR WITH DIGITAL POWER THROTTLE"}, {"lang": "JA", "text": "\u30c7\u30a3\u30b8\u30bf\u30eb\u30fb\u30d1\u30ef\u30fc\u30fb\u30b9\u30ed\u30c3\u30c8\u30eb\u3092\u5099\u3048\u305f\u30de\u30a4\u30af\u30ed\u30d7\u30ed\u30bb\u30c3\u30b5"}]}, {"ucid": "CN-101520725-A", "titles": [{"lang": "EN", "text": "Microprocessor with digital power throttle"}, {"lang": "ZH", "text": "\u5177\u6709\u6570\u5b57\u529f\u7387\u8c03\u8282\u7684\u5fae\u5904\u7406\u5668"}]}]}